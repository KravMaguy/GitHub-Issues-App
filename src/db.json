{
  "microsoft": [
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45011",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45011/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45011/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45011/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45011",
      "id": 943568878,
      "node_id": "MDU6SXNzdWU5NDM1Njg4Nzg=",
      "number": 45011,
      "title": "Complex combinations of discriminated unions and intersections give unexpected type errors",
      "user": {
        "login": "azhiv",
        "id": 32125472,
        "node_id": "MDQ6VXNlcjMyMTI1NDcy",
        "avatar_url": "https://avatars.githubusercontent.com/u/32125472?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/azhiv",
        "html_url": "https://github.com/azhiv",
        "followers_url": "https://api.github.com/users/azhiv/followers",
        "following_url": "https://api.github.com/users/azhiv/following{/other_user}",
        "gists_url": "https://api.github.com/users/azhiv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/azhiv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/azhiv/subscriptions",
        "organizations_url": "https://api.github.com/users/azhiv/orgs",
        "repos_url": "https://api.github.com/users/azhiv/repos",
        "events_url": "https://api.github.com/users/azhiv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/azhiv/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 371615233,
          "node_id": "MDU6TGFiZWwzNzE2MTUyMzM=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Design%20Limitation",
          "name": "Design Limitation",
          "color": "fbca04",
          "default": false,
          "description": "Constraints of the existing architecture prevent this from being fixed"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-13T15:47:05Z",
      "updated_at": "2021-07-13T16:11:55Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\ncomplex discriminated unions intersections error \r\n\r\n### üïó Version & Regression Information\r\n\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about discriminated unions.\r\n- I noticed that in ver. 3.7.5 the behaviour is even worse (`foo1` and `foo2` calls also yield compile errors).\r\n\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?ts=4.4.0-dev.20210712#code/MYGwhgzhAEDKYgKYQPICcAmi3QN4ChpoBLCWAFzAHNiA7KgOUUSwwEIAuaAIwHtekYWgG5C0ABaQAkgAcAwmAC22ME3IB3XmgDWsROQCuMzj36CRYtIgCOB4lbKUa9KeUSLHiY1z4DEQ0SJJCAANXgA3UgARREjgZBNfc0CJSAAhNGJgbQhyKyUYuISfM38LAF98fHIATxlEaDdcgFVaYl5aAEZoAF4xAAoCIiJSCmo6RmZWLjyDRBTy6AAyaEGxIOl5JRU1TR09QxkZtDmF6AAfPHXUiFkFZTRVfT3dfSMuADMECHmxcoBKf4XK7DEiOcb0JgsFifb6-UHBO7bR67LSvQ4lPwBP6iap1BpNcitdq0ABMvQGQ2GVls9mQY2cVFc7k8R0aJ3h0EWK36awR6Uy2Vy+UUhSyyGOpz+wKpGwgGSyOTy-lFsXFEFhIB+CyBPNlNzCkQgYviGvZUqIi0u+uChuiatNmu1f0B-zE1uuNLsDgZE2ZHgoXidnLlCqFyoKDolpixFn5oQi9qKZqSZQWuNq9WgECM2GJHV6jWQRLaHW6K0J+bJuI+BlowHIJOgH34nX6MjAj0UM2LVc6-y44V4xAwV0q+Fr9cbBZbvFJ7c7Sh7LVLZIH0CHI7HVUnDabs4XXa4OfqaCr683o6ps7bHa7-xSs-nd6UD-w45v-VoiHUcAQyHQLA0H6QFRCfL8fz-JBUEwbAQLfA9v1-eBoMAuDQPwIA)\r\n\r\n### üíª Code\r\n\r\n```ts\r\nclass SalesOrder {\r\n  isStagingNeeded!: boolean;\r\n  hasIpCameraNetworkSetup!: boolean;\r\n  requiresStagingItemsStep!: boolean;\r\n  hasXovisDevices!: boolean;\r\n  hasBrickstreamDevices!: boolean;\r\n}\r\n\r\ntype testUnion1 =\r\n  ({\r\n    isStagingNeeded: true;\r\n  } & ({\r\n    hasIpCameraNetworkSetup: true;\r\n  } | {\r\n    hasIpCameraNetworkSetup: false;\r\n  })) | {\r\n    isStagingNeeded: false;\r\n    // hasIpCameraNetworkSetup: boolean;\r\n  };\r\n\r\nfunction foo1(param: testUnion1): void {\r\n}\r\n\r\nfoo1(new SalesOrder());       // error\r\n```\r\nError:\r\n```\r\nArgument of type 'SalesOrder' is not assignable to parameter of type 'testUnion1'.\r\n  Type 'SalesOrder' is not assignable to type '{ isStagingNeeded: true; } & { hasIpCameraNetworkSetup: false; }'.\r\n    Type 'SalesOrder' is not assignable to type '{ isStagingNeeded: true; }'.\r\n      Types of property 'isStagingNeeded' are incompatible.\r\n        Type 'boolean' is not assignable to type 'true'.ts(2345)\r\n```\r\nWhen I uncomment the commented line the code successfully compiles.\r\nGoing further:\r\n```typescript\r\ntype testUnion2 =\r\n  ({\r\n    requiresStagingItemsStep: true;\r\n  } & (({\r\n    hasBrickstreamDevices: true;\r\n  } | {\r\n    hasBrickstreamDevices: false;\r\n  }) & ({\r\n    hasXovisDevices: true;\r\n  } | {\r\n    hasXovisDevices: false;\r\n  })))\r\n  | {\r\n    requiresStagingItemsStep: false;\r\n    // hasBrickstreamDevices: boolean;\r\n    // hasXovisDevices: boolean;\r\n  };\r\n\r\nfunction foo2(param: testUnion2): void {\r\n}\r\n\r\nfoo2(new SalesOrder());        // error\r\n```\r\nError:\r\n```\r\nArgument of type 'SalesOrder' is not assignable to parameter of type 'testUnion2'.\r\n  Type 'SalesOrder' is not assignable to type '{ requiresStagingItemsStep: true; } & { hasBrickstreamDevices: false; } & { hasXovisDevices: false; }'.\r\n    Type 'SalesOrder' is not assignable to type '{ requiresStagingItemsStep: true; }'.\r\n      Types of property 'requiresStagingItemsStep' are incompatible.\r\n        Type 'boolean' is not assignable to type 'true'.ts(2345)\r\n```\r\nAgain, uncommenting the lines above makes the call valid.\r\nAnd finally (with all three fields uncommented):\r\n```typescript\r\ntype superUnion = testUnion1 & testUnion2;\r\n\r\nfunction foo(param: superUnion): void {\r\n  foo1(param);\r\n  foo2(param);\r\n}\r\n\r\nfoo(new SalesOrder());         // error\r\n```\r\n\r\nError:\r\n```\r\nArgument of type 'SalesOrder' is not assignable to parameter of type 'superUnion'.\r\n  Type 'SalesOrder' is not assignable to type '{ isStagingNeeded: false; hasIpCameraNetworkSetup: boolean; } & { requiresStagingItemsStep: false; hasBrickstreamDevices: boolean; hasXovisDevices: boolean; }'.\r\n    Type 'SalesOrder' is not assignable to type '{ isStagingNeeded: false; hasIpCameraNetworkSetup: boolean; }'.\r\n      Types of property 'isStagingNeeded' are incompatible.\r\n        Type 'boolean' is not assignable to type 'false'.ts(2345)\r\n```\r\n\r\n### Important note\r\nIf I completely remove either `hasBrickstreamDevices` or `hasXovisDevices` from `testUnion2`, the error disappears ([playground link](https://www.typescriptlang.org/play?ts=4.4.0-dev.20210712#code/MYGwhgzhAEDKYgKYQPICcAmi3QN4ChpoBLCWAFzAHNiA7KgOUUSwwEIAuaAIwHtekYWgG5C0ABaQAkgAcAwmAC22ME3IB3XmgDWsROQCuMzj36CRYtIgCOB4lbKUa9KeUSLHiY1z4DEQ0SJJCAANXgA3UgARREjgZBNfc0CJSAAhNGJgbQhyKyUYuISfM38LAF98fHIATxlEaDdcgFVaYl5aAEZoAF4xAAoCIiJSCmo6RmZWLjyDRBTy6AAyaEGxIOl5JRU1TR09QxkZtDmF6AAfPHXUiFkFZTRVfT3dfSMuADMECHmxcoBKf4XK7DEiOcb0JgsFifb6-UHBO7bR67LSvQ4lPwBP6iap1BpNcitdq0ABMvQGQ2GVls9mQY2cVFc7k8R0aJ3h0EWK36awRkDCkQghSyyGOpz+wKpG1CEWisVFEFhIB+C0B-zEl2l0BpdgcDImzI8FC8ytV12CgvlRSVpixFiI5VxtXq0AgRmwxI6vUayCJbQ63RWhK9ZNxHwMtGA5BJ0A+-E6-RkYEeihmftDnX+XHCvGIGCulXwEajMe98d4pKTKaU6ZaAbJ2egufzhaqJejsYr1dTXHd9TQoabLYLVIrieTqf+KQrVcnSmn+CL4-6tEQ6jgCGQ6CwaH6gNEs9X683SFQmGw+8X3bXG-gZ53l4P+CAA)).\r\n\r\n### üôÅ Actual behavior\r\n\r\nType check for `foo(new SalesOrder())` call fails. It also fails for `foo1` and `foo2` calls if I remove `boolean` fields from the type definitions.\r\n\r\n### üôÇ Expected behavior\r\n\r\nType checks succeed. And even further, I would expect the first two examples to compile without explicitly declaring fields as `boolean`s. But having done that, I would expect the last example to compile as well.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45010",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45010/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45010/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45010/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45010",
      "id": 943401664,
      "node_id": "MDU6SXNzdWU5NDM0MDE2NjQ=",
      "number": 45010,
      "title": "[FR] Auto-complete Fragments",
      "user": {
        "login": "wenfangdu",
        "id": 28700378,
        "node_id": "MDQ6VXNlcjI4NzAwMzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/28700378?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wenfangdu",
        "html_url": "https://github.com/wenfangdu",
        "followers_url": "https://api.github.com/users/wenfangdu/followers",
        "following_url": "https://api.github.com/users/wenfangdu/following{/other_user}",
        "gists_url": "https://api.github.com/users/wenfangdu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wenfangdu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wenfangdu/subscriptions",
        "organizations_url": "https://api.github.com/users/wenfangdu/orgs",
        "repos_url": "https://api.github.com/users/wenfangdu/repos",
        "events_url": "https://api.github.com/users/wenfangdu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wenfangdu/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1023321108,
          "node_id": "MDU6TGFiZWwxMDIzMzIxMTA4",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Experience%20Enhancement",
          "name": "Experience Enhancement",
          "color": "556677",
          "default": false,
          "description": "Noncontroversial enhancements"
        },
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        },
        {
          "id": 117630704,
          "node_id": "MDU6TGFiZWwxMTc2MzA3MDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/help%20wanted",
          "name": "help wanted",
          "color": "05ba65",
          "default": true,
          "description": "You can do this"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2094,
        "closed_issues": 678,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T17:17:59Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-13T13:42:30Z",
      "updated_at": "2021-07-13T16:18:20Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## ‚úÖ Viability Checklist\r\n\r\nMy suggestion meets these guidelines:\r\n\r\n- [x] This wouldn't be a breaking change in existing TypeScript/JavaScript code\r\n- [x] This wouldn't change the runtime behavior of existing JavaScript code\r\n- [x] This could be implemented without emitting different JS based on the types of the expressions\r\n- [x] This isn't a runtime feature (e.g. library functionality, non-ECMAScript syntax with JavaScript output, new syntax sugar for JS, etc.)\r\n- [x] This feature would agree with the rest of [TypeScript's Design Goals](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Design-Goals).\r\n\r\n## ‚≠ê Suggestion\r\n\r\nCurrently, unlike other tags, fragments can't be auto-completed, would be nice to have them supported.\r\n\r\n## üìÉ Motivating Example\r\n\r\nEntering `<>` won't auto-complete `</>`:\r\n\r\n![2021-07-08 21_49_47](https://user-images.githubusercontent.com/28700378/124933745-b38ab580-e036-11eb-9212-aa4700817813.gif)\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45009",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45009/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45009/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45009/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45009",
      "id": 943276023,
      "node_id": "MDU6SXNzdWU5NDMyNzYwMjM=",
      "number": 45009,
      "title": "Docs: Incorrect option in wiki doc JavaScript Language Service in Visual Studio",
      "user": {
        "login": "thernstig",
        "id": 30827238,
        "node_id": "MDQ6VXNlcjMwODI3MjM4",
        "avatar_url": "https://avatars.githubusercontent.com/u/30827238?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thernstig",
        "html_url": "https://github.com/thernstig",
        "followers_url": "https://api.github.com/users/thernstig/followers",
        "following_url": "https://api.github.com/users/thernstig/following{/other_user}",
        "gists_url": "https://api.github.com/users/thernstig/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thernstig/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thernstig/subscriptions",
        "organizations_url": "https://api.github.com/users/thernstig/orgs",
        "repos_url": "https://api.github.com/users/thernstig/repos",
        "events_url": "https://api.github.com/users/thernstig/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thernstig/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 175777134,
          "node_id": "MDU6TGFiZWwxNzU3NzcxMzQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Docs",
          "name": "Docs",
          "color": "5319e7",
          "default": false,
          "description": "The issue relates to how you learn TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-13T12:11:18Z",
      "updated_at": "2021-07-13T16:16:58Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Looking at https://github.com/microsoft/TypeScript/wiki/JavaScript-Language-Service-in-Visual-Studio#-support-for-es6-and-beyond it states `enableAutoDiscovery` as an option in a `tsconfig.json` file.\r\n\r\nBut looking at https://www.typescriptlang.org/tsconfig it does not seem to be an option available at all. Not on https://www.typescriptlang.org/docs/handbook/compiler-options.html either.\r\n\r\nI thus wonder if this is incorrect in that wiki, and if in general the docs in the wiki article are quite outdated and could use an overhaul? They do not seem to be exactly described the same as in https://code.visualstudio.com/docs/nodejs/working-with-javascript#_global-variables-and-type-checking and https://code.visualstudio.com/docs/languages/jsconfig#_jsconfig-options",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45007",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45007/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45007/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45007/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/45007",
      "id": 943184241,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg4ODM4MTc5",
      "number": 45007,
      "title": "support contextual return type of iife",
      "user": {
        "login": "Zzzen",
        "id": 6630042,
        "node_id": "MDQ6VXNlcjY2MzAwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6630042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Zzzen",
        "html_url": "https://github.com/Zzzen",
        "followers_url": "https://api.github.com/users/Zzzen/followers",
        "following_url": "https://api.github.com/users/Zzzen/following{/other_user}",
        "gists_url": "https://api.github.com/users/Zzzen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Zzzen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Zzzen/subscriptions",
        "organizations_url": "https://api.github.com/users/Zzzen/orgs",
        "repos_url": "https://api.github.com/users/Zzzen/repos",
        "events_url": "https://api.github.com/users/Zzzen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Zzzen/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1820464799,
          "node_id": "MDU6TGFiZWwxODIwNDY0Nzk5",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Backlog%20Bug",
          "name": "For Backlog Bug",
          "color": "9ff4ed",
          "default": false,
          "description": "PRs that fix a backlog bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-13T11:01:59Z",
      "updated_at": "2021-07-13T11:02:09Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/45007",
        "html_url": "https://github.com/microsoft/TypeScript/pull/45007",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/45007.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/45007.patch"
      },
      "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n-->\r\n\r\nFixes #44992\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45006",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45006/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45006/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45006/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45006",
      "id": 943176112,
      "node_id": "MDU6SXNzdWU5NDMxNzYxMTI=",
      "number": 45006,
      "title": "Const typeguard flows into methods but not properties",
      "user": {
        "login": "jods4",
        "id": 3832820,
        "node_id": "MDQ6VXNlcjM4MzI4MjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3832820?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jods4",
        "html_url": "https://github.com/jods4",
        "followers_url": "https://api.github.com/users/jods4/followers",
        "following_url": "https://api.github.com/users/jods4/following{/other_user}",
        "gists_url": "https://api.github.com/users/jods4/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jods4/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jods4/subscriptions",
        "organizations_url": "https://api.github.com/users/jods4/orgs",
        "repos_url": "https://api.github.com/users/jods4/repos",
        "events_url": "https://api.github.com/users/jods4/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jods4/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 117630704,
          "node_id": "MDU6TGFiZWwxMTc2MzA3MDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/help%20wanted",
          "name": "help wanted",
          "color": "05ba65",
          "default": true,
          "description": "You can do this"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2094,
        "closed_issues": 678,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T17:17:59Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-13T10:55:40Z",
      "updated_at": "2021-07-13T17:02:02Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\n\r\ntype guard get property const\r\n\r\n### üïó Version & Regression Information\r\n\r\nFails at least on 4.3.5 and 4.4.0-beta.\r\n\r\n- I was unable to test this on prior versions because I noticed this behavior very recently.\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?ts=4.4.0-beta#code/MYewdgzgLgBAHgLhtATgSzAcxgHxmAVwFsAjAUxRgF4YBZAQygAsA6FesAExCIAoBKGAB4YABhYBWGAH4YAIlRyYSAIwAmAMwBuALAAoNADMYvKAE8ADmRDG41KjQVR0WOYIDe+mDAA2ZWCAkAFbUMJ563t6Y-jAWKCAWAmEwKP4EKGDwLFAgAKoWVigAwvQQZEkAvgA0XpFE-kwgnEnuKWkZWTn5hSVllbUV+hVAA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\nconst x: string | number = Math.random() < 0.5 ? \"str\" : 123;\r\nif (typeof x === \"string\") {\r\n  let obj = {\r\n    get prop() { return x.toUpperCase() },  // Error: property toUpperCase doesn't exist on number\r\n    method() { return x.toUpperCase() } // Ok\r\n  }\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\nThe method compiles, the getter raises an error.\r\n\r\n### üôÇ Expected behavior\r\nBehaviour should be the same for both.\r\nGiven that `x` is a const and its type was narrowed to `string`, no error seems right.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45004",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45004/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45004/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45004/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45004",
      "id": 942982646,
      "node_id": "MDU6SXNzdWU5NDI5ODI2NDY=",
      "number": 45004,
      "title": "VS Code React Typescript component auto-import and autocomplete not working.",
      "user": {
        "login": "filiptrplan",
        "id": 8643457,
        "node_id": "MDQ6VXNlcjg2NDM0NTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8643457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/filiptrplan",
        "html_url": "https://github.com/filiptrplan",
        "followers_url": "https://api.github.com/users/filiptrplan/followers",
        "following_url": "https://api.github.com/users/filiptrplan/following{/other_user}",
        "gists_url": "https://api.github.com/users/filiptrplan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/filiptrplan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/filiptrplan/subscriptions",
        "organizations_url": "https://api.github.com/users/filiptrplan/orgs",
        "repos_url": "https://api.github.com/users/filiptrplan/repos",
        "events_url": "https://api.github.com/users/filiptrplan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/filiptrplan/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-13T08:33:43Z",
      "updated_at": "2021-07-13T08:48:23Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\n\r\nvscode tsx autocomplete, vscode tsx auto import, vscode typescript react autocomplete\r\n\r\n### üïó Version & Regression Information\r\n\r\nI'm on Typescript version 4.3.5 and I have tried the nightly build too.\r\nI'm on the latest VS Code version 1.58.0. It is a new install with all extensions disabled.\r\nDoesn't work on either 1.56 or 1.57 too.\r\n\r\nThis seems to be a duplicate of #44657 but that issue is marked as closed even if it still persists.\r\n\r\n### üíª Code\r\n\r\nAnalytics.tsx\r\n```tsx\r\nimport React from 'react'\r\n\r\ninterface AnalyticsProps {\r\n\r\n}\r\n\r\nexport const Analytics: React.FC<AnalyticsProps> = ({}) => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n```\r\n\r\nSidebar.tsx\r\n```tsx\r\nimport React from 'react'\r\nimport './Sidebar.scss';\r\n\r\ninterface SidebarProps {\r\n\r\n}\r\n\r\nexport const Sidebar: React.FC<SidebarProps> = ({ children }) => {\r\n        return (\r\n            <div className=\"Sidebar\">\r\n                {children}\r\n            </div>\r\n        );\r\n}\r\n```\r\n\r\nFolder structure:\r\n![image](https://user-images.githubusercontent.com/8643457/125418221-f03a7dc6-29ec-49e1-9f1e-29d3fe567843.png)\r\npackage.json\r\n```json\r\n{\r\n  \"name\": \"analytics-react\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@testing-library/jest-dom\": \"^5.11.4\",\r\n    \"@testing-library/react\": \"^11.1.0\",\r\n    \"@testing-library/user-event\": \"^12.1.10\",\r\n    \"@types/jest\": \"^26.0.15\",\r\n    \"@types/node\": \"^12.0.0\",\r\n    \"@types/react\": \"^17.0.0\",\r\n    \"@types/react-dom\": \"^17.0.0\",\r\n    \"chart.js\": \"^3.4.1\",\r\n    \"primeflex\": \"^2.0.0\",\r\n    \"primeicons\": \"^4.1.0\",\r\n    \"primereact\": \"^6.5.0-rc.2\",\r\n    \"react\": \"^17.0.2\",\r\n    \"react-dom\": \"^17.0.2\",\r\n    \"react-router-dom\": \"^5.2.0\",\r\n    \"react-scripts\": \"4.0.3\",\r\n    \"react-transition-group\": \"^4.4.2\",\r\n    \"typescript\": \"^4.1.2\",\r\n    \"web-vitals\": \"^1.0.1\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/react-router-dom\": \"^5.1.8\",\r\n    \"node-sass\": \"5.0.0\"\r\n  }\r\n}\r\n```\r\ntsconfig.json\r\n```json\r\n{\r\n  \"compilerOptions\": {\r\n    \"target\": \"es5\", \r\n    \"lib\": [\r\n      \"dom\",\r\n      \"dom.iterable\",\r\n      \"esnext\"\r\n    ], \r\n    \"allowJs\": true, \r\n    \"skipLibCheck\": true, \r\n    \"esModuleInterop\": true, \r\n    \"allowSyntheticDefaultImports\": true, \r\n    \"strict\": true, \r\n    \"forceConsistentCasingInFileNames\": true, \r\n    \"module\": \"esnext\", \r\n    \"moduleResolution\": \"node\", \r\n    \"isolatedModules\": true, \r\n    \"resolveJsonModule\": true, \r\n    \"noEmit\": true, \r\n    \"jsx\": \"react\", \r\n    \"sourceMap\": true, \r\n    \"declaration\": true, \r\n    \"noUnusedLocals\": true, \r\n    \"noUnusedParameters\": true, \r\n    \"incremental\": true, \r\n    \"noFallthroughCasesInSwitch\": true \r\n  },\r\n  \"include\": [\r\n    \"src/**/*\",\r\n    \"src/**/*.d.tsx\",\r\n    \"src/**/*.tsx\" \r\n  ],\r\n  \"exclude\": [\r\n    \"node_modules\",\r\n    \"build\"\r\n  ] \r\n}\r\n```\r\n\r\n\r\n### üôÅ Actual behavior\r\n\r\nI try to start typing the \"Sidebar\" component and the autocomplete doesn't suggest it anywhere. When I finish typing the component, the autoimport function shows up in the quick fix category.\r\n![Animation](https://user-images.githubusercontent.com/8643457/125418761-c3f6503d-a9f7-442a-a28b-78665933f1e8.gif)\r\n\r\n\r\n### üôÇ Expected behavior\r\n\r\nIt should have suggested the \"Sidebar\" component and upon clicking enter, it should have imported it automatically.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45003",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45003/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45003/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45003/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45003",
      "id": 942935380,
      "node_id": "MDU6SXNzdWU5NDI5MzUzODA=",
      "number": 45003,
      "title": "(Partial<Type>)[keyof Type] is udefined in certain settings and assignment is not possible",
      "user": {
        "login": "mckravchyk",
        "id": 22261988,
        "node_id": "MDQ6VXNlcjIyMjYxOTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/22261988?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mckravchyk",
        "html_url": "https://github.com/mckravchyk",
        "followers_url": "https://api.github.com/users/mckravchyk/followers",
        "following_url": "https://api.github.com/users/mckravchyk/following{/other_user}",
        "gists_url": "https://api.github.com/users/mckravchyk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mckravchyk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mckravchyk/subscriptions",
        "organizations_url": "https://api.github.com/users/mckravchyk/orgs",
        "repos_url": "https://api.github.com/users/mckravchyk/repos",
        "events_url": "https://api.github.com/users/mckravchyk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mckravchyk/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 371615203,
          "node_id": "MDU6TGFiZWwzNzE2MTUyMDM=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Working%20as%20Intended",
          "name": "Working as Intended",
          "color": "fbca04",
          "default": false,
          "description": "The behavior described is the intended behavior; this is not a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-07-13T07:56:51Z",
      "updated_at": "2021-07-13T17:14:38Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\nPartial keyof undefined\r\n\r\n### üïó Version & Regression Information\r\nI'm using 4.2.4 in production and it occurs. I have tested with 4.4 beta on the playground and it also occurs. I have no knowledge if the bug occurred in prior versions.\r\n\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about it.\r\n\r\n### ‚èØ Playground Link\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?strict=true&ts=4.4.0-beta#code/C4TwDgpgBAIghsOBGKBeKBvAUFKwIDOwSAXFEQE4CWAdgOY56HABMZltDAvllqJLARwWaTI3xFS5YNXrjmbKACMA9ioA2EODSw8sm4FAAmQqQAU4FYFTjqAPPERIAfKIxQuAbn0RDJxIoWVjb2jsKu6O5evAD0MVAAtr5w-nAAdBKG6ADkmdneBlAA1hAgornMSPk+hgButgCu0Dl53lhxUADyRVipSADaJWVwBMWlKgBmgk4AuqL16k1tHQCiFBQqFGQAKuDQ2Rz02VBUozQqhiMEVHQ0cEqaeCp4e1DZDTRGEBO0EEbZ7XiAElDAQIBAEqN1FQSngABbQJQNOhQFQAYzRDQooxUNHUZSoU2ACNRSgAVhA0YZ+NA4SMoAsmjiJoDjISJhAKBAaNS9gRekIWINSlB6UNJtNhHN0IyIMt4tsSVzbFA0SNoAQ0dzLFRnqcoECoAB3bTUvX4CgIDUqJJQMAbSDBQiiz6sq43GjwiFPL12yzWWwAGnIz0NEAAHpAqfCEL6wP6QlA6WcVKzaFQA+o7Q7OdZnV8fjQ-qLLuos9ojKrtMpoO7bsXtGV7SpHaBUSyOvHgrZizS0rwaVBtvdNGFRGJcLgqEZ2DJOIxcNZgJpZ7IGJOTmjcav53pBwBZZKpNwLqBY9Q7uQbuBUqi1CBkVQaLQ6PevADCyvwZgdo3QnQSDM7GHB4IDCYNsmnbJXAAMigIJMzsQ9EFSZw2gmD5b1xVUvwgAAKZswAIMhPy0b9fwASjIWoVGnCdVVxIgTkrFpmGqRgtxoJjEFAsIdhHMChBPDdp0DU8lxXbMWwIDIM00MSRM4shCJkqhOMYHhcA4xjDCSFChDIBCQiQo8hAiTAPDaXAJk2KA8M4pihnbLpyUpYA0iGAgCMoij6I3DoACEGiodRKz0lIhImDYEnhFQwSkojjThNS4VFLkoHOakBLCU8pymPCaQlHjRyEYVhlGcUphAkrEGlVAcg+Atfn+XzsA3dqoFWdZNhIXL2o6XYBAOOd6CgAAfZQ1E0bRjn1TLRQIa5bgEn1B3eT5vma44+o3cLUjKhaxhACVkIi2rRBUg6xXGKZSKtH9pJmABCbwOs0yd3q4IA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\ntype Data1 = {\r\n  test1: string\r\n  test2: string\r\n}\r\n\r\ntype Data2 = {\r\n  test1: string\r\n  test2: boolean\r\n}\r\n\r\nlet data1: Partial<Data1> = { };\r\nlet data2: Partial<Data2> = { };\r\n\r\n// metadata.test = 'test';\r\nlet key = 'test1';\r\nlet value = 'test';\r\n\r\n// Ok\r\ndata1[key as keyof Data1] = value;\r\n\r\n// Error: Type 'string' is not assignable to type 'undefined'\r\n// It seems like the bug occurs only if the object type has values of\r\n// different types\r\ndata2[key as keyof Data2] = value;\r\n\r\n// The real case scenario is I want to iterate some properties and\r\n// assign them to the partial, so I expect that the partial has no\r\n// initial properties defined at all and can be assigned any property of\r\n// partialed type.\r\n\r\ntype TableData =  {\r\n    id: string\r\n    title: string\r\n    icon: string\r\n}\r\n\r\ntype Metadata = {\r\n    url: string\r\n    active: boolean\r\n}\r\n\r\ntype CreateProps = Omit<TableData, 'id'> & Partial<Metadata>;\r\n\r\nfunction create(props: CreateProps): void {\r\n  const id = 'test';\r\n\r\n  const tableData: TableData = {\r\n    id,\r\n    title: props.title,\r\n    icon: props.icon\r\n  }\r\n  \r\n  const metadata: Partial<Metadata> = { };\r\n\r\n  for (const key of Object.keys(props)) {\r\n      // Build metadata from those props which are not tableData\r\n      if (typeof tableData[key as keyof TableData] === 'undefined') {\r\n          // Error:\r\n          // Type 'string | boolean' is not assignable to type 'undefined' \r\n          metadata[key as keyof Metadata] = props[key as keyof CreateProps]!;\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\n### üôÅ Actual behavior\r\n`data2[key as keyof Data2]` is `undefined` and it's not possible to assign anything to it.\r\n\r\n### üôÇ Expected behavior\r\n`data2[key as keyof Data2]` should not be `undefined`. At least it should be `undefined | string | boolean`. It should also be possible to assign a value to it, despite being possible `undefined`.\r\n\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45002",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45002/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45002/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45002/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45002",
      "id": 942861810,
      "node_id": "MDU6SXNzdWU5NDI4NjE4MTA=",
      "number": 45002,
      "title": "Checking if object[prop] is not undefined does not eliminate undefined type from object[prop] (type guard)",
      "user": {
        "login": "mckravchyk",
        "id": 22261988,
        "node_id": "MDQ6VXNlcjIyMjYxOTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/22261988?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mckravchyk",
        "html_url": "https://github.com/mckravchyk",
        "followers_url": "https://api.github.com/users/mckravchyk/followers",
        "following_url": "https://api.github.com/users/mckravchyk/following{/other_user}",
        "gists_url": "https://api.github.com/users/mckravchyk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mckravchyk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mckravchyk/subscriptions",
        "organizations_url": "https://api.github.com/users/mckravchyk/orgs",
        "repos_url": "https://api.github.com/users/mckravchyk/repos",
        "events_url": "https://api.github.com/users/mckravchyk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mckravchyk/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-13T06:55:57Z",
      "updated_at": "2021-07-13T06:55:57Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\ntype guard object property\r\n\r\n### üïó Version & Regression Information\r\nI'm using 4.2.4 in production, I don't know if this bug has occurred in prior versions.\r\n\r\nI have tested in the playground that the bug also occurs in 4.3.x and 4.4 beta\r\n\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about it.\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?strict=true&ts=4.3.5#code/MYewdgzgLgBA1gFQIYCMA2BTAwiNBXAW0hgF4YBtAcgEsATSgGhkqmqk0eetDEoF0A3ACghUAJ4AHDDGToMAESRQkpGAG8hMLTDoAuGNABO1MAHNN21uwz6jJ89p09bUY2aEBfEeKkwAshjKtEoqZBqOeIZoLm7mXqKS0gCqEsFQGAAKhiASEKoZSIasSGgAPADyBGylspiKykw09AB8zTAAZDAFRdQlpQFBIc3CQgBmeGDArOAweKlKGAAUEtm5+ilpmasQAJTqFlo80DDKchsL+gCChoZIYqVqMKD4RDH2TABuJXg2Bq72MA8bTI5EEIkciFQmBwL0gADpRiBDABRJDAAAWi0Wz0IYD2JDa4Uc2mooxgix8GBAZJWOQg5BxRBgSDycAwYmpMHO6SydL4MAAhCQyJQJrQMKMTBh6HsicTiQB6BUwZEADwkaG4bDQYie6IwwDZtBO6KUMFpuQZuFxEH51DyYBAsDFEqltCYYkCMAAkjBTR9pFAQAd5dolbMINJHWAALRgPBoNDMiCRnozHIYW5BwwnEAGJT20a6qD6p4gAgSaiYQxwkOhmDh5E3JFvMwwAA+szA4slYGlOgdTuTEGopjAUMDecpf1iddDp0w3IwcIkeAgmMejLAn2+vwt9K3yfg7M5S95uT4Hj24fKYB1gqeSDAMElqp0UFr9cc4YAQhgILQ1D-ia9pMCW0gAAYsseHJkme2wQQY6IgAmxooNIhjSmKT6wEgozpIYc7yuGGIGnAAIlma4EwF8+DSPaMCOs63aun2tCfqGXiOFewgeEAA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\nconst kTableColumns = ['id', 'title', 'icon'];\r\n\r\ntype TableData = {\r\n    id: string\r\n    title: string\r\n    icon: string\r\n}\r\n\r\ntype Metadata = {\r\n    url: string\r\n}\r\n\r\ntype UpdateProps = Partial<Omit<TableData, 'id'>> & Partial<Metadata>;\r\n\r\nfunction update(props: UpdateProps) {\r\n    const tableUpdate: Array<{ column: string, value: string }> = [];\r\n\r\n    kTableColumns.forEach((column) => {\r\n        if (typeof props[column as keyof UpdateProps] !== 'undefined') {\r\n            // Explicitly checked that props[columns] is not undefined, yet I have to\r\n            // use non-null assertion operator to satisfy the compiler.\r\n            // Error: string | undefined is not assignable to type string\r\n            tableUpdate.push({ column, value: props[column as keyof UpdateProps]}) // Only ! can fix it.\r\n            // Besdies this, the `as keyof UpdateProps` should be redundant after\r\n            // checking that the value is not undefined.\r\n        }\r\n    });\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\nAfter validating that `prop[columns] is not `undefined`, the compiler still treats `prop[columns]` as possibly `undefined`.\r\n\r\nA non-null assertion operator at the end of the value is a workaround, but it feels like it should not be there.\r\n\r\n### üôÇ Expected behavior\r\nThe type of `prop[columns]` inside the if clause should not be undefined.\r\n\r\nAdditionally, using `column as keyof UpdateProps` should not be required after validating that column is a valid key of the object (though I understand if there are valid reasons against it, I'm mostly concerned about the first issue).",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45001",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45001/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45001/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45001/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45001",
      "id": 942858860,
      "node_id": "MDU6SXNzdWU5NDI4NTg4NjA=",
      "number": 45001,
      "title": "[Meta] Support Inline Completions related features.",
      "user": {
        "login": "Kingwl",
        "id": 6831019,
        "node_id": "MDQ6VXNlcjY4MzEwMTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6831019?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kingwl",
        "html_url": "https://github.com/Kingwl",
        "followers_url": "https://api.github.com/users/Kingwl/followers",
        "following_url": "https://api.github.com/users/Kingwl/following{/other_user}",
        "gists_url": "https://api.github.com/users/Kingwl/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Kingwl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Kingwl/subscriptions",
        "organizations_url": "https://api.github.com/users/Kingwl/orgs",
        "repos_url": "https://api.github.com/users/Kingwl/repos",
        "events_url": "https://api.github.com/users/Kingwl/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Kingwl/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-13T06:53:30Z",
      "updated_at": "2021-07-13T17:17:17Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "# Suggestion\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n## üîç Search Terms\r\ninline, completions\r\n<!--\r\n  üí° Did you know? TypeScript has over 2,000 open suggestions!\r\n  üîé Please search thoroughly before logging new feature requests as most common ideas already have a proposal in progress.\r\n  The \"Common Feature Requests\" section of the FAQ lists many popular requests: https://github.com/Microsoft/TypeScript/wiki/FAQ#common-feature-requests\r\n\r\n  Replace the text below:\r\n-->\r\n\r\n\r\n## ‚úÖ Viability Checklist\r\n\r\n<!--\r\n   Suggestions that don't meet all these criteria are very, very unlikely to be accepted.\r\n   We always recommend reviewing the TypeScript design goals before investing time writing\r\n   a proposal for ideas outside the scope of the project.\r\n-->\r\nMy suggestion meets these guidelines:\r\n\r\n* [x] This wouldn't be a breaking change in existing TypeScript/JavaScript code\r\n* [x] This wouldn't change the runtime behavior of existing JavaScript code\r\n* [x] This could be implemented without emitting different JS based on the types of the expressions\r\n* [x] This isn't a runtime feature (e.g. library functionality, non-ECMAScript syntax with JavaScript output, new syntax sugar for JS, etc.)\r\n* [x] This feature would agree with the rest of [TypeScript's Design Goals](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Design-Goals).\r\n\r\n\r\n## ‚≠ê Suggestion\r\n\r\nVScode has supported inline completions: https://github.com/microsoft/vscode/blob/main/src/vs/vscode.proposed.d.ts#L2576.\r\n\r\nLet's find out what can we do with the new API.\r\n\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44999",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44999/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44999/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44999/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44999",
      "id": 942702632,
      "node_id": "MDU6SXNzdWU5NDI3MDI2MzI=",
      "number": 44999,
      "title": "Probable bug: Contextual inference does not work in \"object-like\" scenarios",
      "user": {
        "login": "devanshj",
        "id": 30295578,
        "node_id": "MDQ6VXNlcjMwMjk1NTc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/30295578?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/devanshj",
        "html_url": "https://github.com/devanshj",
        "followers_url": "https://api.github.com/users/devanshj/followers",
        "following_url": "https://api.github.com/users/devanshj/following{/other_user}",
        "gists_url": "https://api.github.com/users/devanshj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/devanshj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/devanshj/subscriptions",
        "organizations_url": "https://api.github.com/users/devanshj/orgs",
        "repos_url": "https://api.github.com/users/devanshj/repos",
        "events_url": "https://api.github.com/users/devanshj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/devanshj/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2094,
        "closed_issues": 678,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T17:17:59Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-13T04:25:19Z",
      "updated_at": "2021-07-13T17:17:59Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n\r\n### üîé Search Terms\r\n\r\nContextual inference\r\n\r\n### üïó Version & Regression Information\r\ntested with 4.4.0-beta\r\n\r\n### ‚èØ Playground Link\r\n[Playground](https://www.typescriptlang.org/play?ts=4.4.0-beta#code/MYJwpghgLmCyHABYEsB2YAUBvAUAAj2AHtUYAPKALjyzwDMijqBGPAXwBp88xSQBPargIEo-AA5hqAIjIBnKNDAA6CHLnIA5qmlcRPMmGDVgeALwA+PNnqMTyhkTwBqPKzYBKbmxyecOUEgYeCQ0TGFCEnIqGlsmN3Y9Hj5BPDUNbQxTS2taR3tHFwTPDzwAejLCPGQ5PABXVABrVCIAd1Q8ACM6qDw5RCI6gBsAEy6wWPy8VDqAW06wEHZq1AVIEd8vHBGjIYhwSNXewKUQlHRqAB4AYQsMHbo0KGQSajOwm4tSnKwfMUk8O90J9zDRuMRSGAKNRrkleFABEJuKIJFI+gi0JokgQoUZqFkolCYtdvlYGs02qhvL5-DtgHsDhCFGl1FpUFdbhg6PiIdEYaS8CTzBZuLR-mjZAolKpWdpdAY8dZeUT+cLBewgA)\r\n\r\n### üíª Code\r\n```ts\r\ncreateMachine({\r\n  context: { foo: 1 },\r\n  entry: {\r\n    type: \"xstate.assign\",\r\n    exec: c => ({ foo: c.foo + 1 })\r\n  }\r\n})\r\n\r\ncreateMachine({\r\n  context: { foo: 1 },\r\n  entry: assign(c => ({ foo: c.foo + 1 })) // c is unknown but should be { foo: number } instead\r\n})\r\n\r\ndeclare const createMachine: <C>(defintion: Machine<C>) => {}\r\ntype Machine<C> = {\r\n  context: C,\r\n  entry: {\r\n    type: string,\r\n    exec: (context: C) => unknown\r\n  }\r\n}\r\n\r\ndeclare const assign: <C>(f: (context: C) => C) =>\r\n  { type: \"xstate.assign\", exec: (context: C) => C }\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n`assign` infers  type parameter `C` as `unknown`\r\n\r\n### üôÇ Expected behavior\r\n\r\n`assign` should infer type parameter `C` as `{ foo: number }`\r\n\r\nFiling as Ryan said [here](https://github.com/microsoft/TypeScript/issues/44821#issuecomment-878747711). Fwiw I think a more minimal repro would be [this](https://github.com/microsoft/TypeScript/issues/44821#issuecomment-878768134).\r\n\r\n\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44997",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44997/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44997/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44997/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44997",
      "id": 942613599,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg4MzIwNTc0",
      "number": 44997,
      "title": "feat(compilerOption): add instantiationDepthLimit and instantiationCountLimit",
      "user": {
        "login": "jjangga0214",
        "id": 28584151,
        "node_id": "MDQ6VXNlcjI4NTg0MTUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/28584151?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jjangga0214",
        "html_url": "https://github.com/jjangga0214",
        "followers_url": "https://api.github.com/users/jjangga0214/followers",
        "following_url": "https://api.github.com/users/jjangga0214/following{/other_user}",
        "gists_url": "https://api.github.com/users/jjangga0214/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jjangga0214/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jjangga0214/subscriptions",
        "organizations_url": "https://api.github.com/users/jjangga0214/orgs",
        "repos_url": "https://api.github.com/users/jjangga0214/repos",
        "events_url": "https://api.github.com/users/jjangga0214/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jjangga0214/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1820418576,
          "node_id": "MDU6TGFiZWwxODIwNDE4NTc2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug",
          "name": "For Milestone Bug",
          "color": "001f77",
          "default": false,
          "description": "PRs that fix a bug with a specific milestone"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "weswigham",
        "id": 2932786,
        "node_id": "MDQ6VXNlcjI5MzI3ODY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2932786?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/weswigham",
        "html_url": "https://github.com/weswigham",
        "followers_url": "https://api.github.com/users/weswigham/followers",
        "following_url": "https://api.github.com/users/weswigham/following{/other_user}",
        "gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
        "organizations_url": "https://api.github.com/users/weswigham/orgs",
        "repos_url": "https://api.github.com/users/weswigham/repos",
        "events_url": "https://api.github.com/users/weswigham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/weswigham/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "weswigham",
          "id": 2932786,
          "node_id": "MDQ6VXNlcjI5MzI3ODY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2932786?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/weswigham",
          "html_url": "https://github.com/weswigham",
          "followers_url": "https://api.github.com/users/weswigham/followers",
          "following_url": "https://api.github.com/users/weswigham/following{/other_user}",
          "gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
          "organizations_url": "https://api.github.com/users/weswigham/orgs",
          "repos_url": "https://api.github.com/users/weswigham/repos",
          "events_url": "https://api.github.com/users/weswigham/events{/privacy}",
          "received_events_url": "https://api.github.com/users/weswigham/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-13T02:10:55Z",
      "updated_at": "2021-07-13T11:40:17Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44997",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44997",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44997.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44997.patch"
      },
      "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n-->\r\n\r\nFixes #34933.\r\n\r\nI am not familiar with this project structure. This PR might be incomplete, so I hope someone contributes to complete it.\r\nI only edited 3 files, and didn't touch `Diagnostics` though I referred to new fields from it.\r\n\r\nPlease let users be able to adjust `instantiationDepthLimit` and `instantiationCountLimit` by their free decisions and responsibilities, instead of hard-coded values (50 and 5000000 for each).\r\n\r\nCurrently, the limitation thresholds are fixed to `50` and `5000000`.\r\n\r\n***src/compiler/checker.ts***\r\n```ts\r\nif (\r\n  instantiationDepth === 50 ||\r\n  instantiationCount >= 5000000\r\n) {\r\n  // We have reached 50 recursive type instantiations and there is a very high likelyhood we're dealing\r\n  // with a combination of infinite generic types that perpetually generate new type identities. We stop\r\n  // the recursion here by yielding the error type.\r\n  error(\r\n    currentNode,\r\n    Diagnostics.Type_instantiation_is_excessively_deep_and_possibly_infinite\r\n  );\r\n  return errorType;\r\n}\r\n```\r\n\r\nI think `compilerOptions` would be great solution for these to be configurable.\r\n\r\n```json\r\n{\r\n  \"compilerOptions\": {\r\n    \"instantiationDepthLimit\": 100,\r\n    \"instantiationCountLimit\": 10000000\r\n  }\r\n}\r\n```\r\n\r\nThanks :)",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44996",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44996/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44996/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44996/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44996",
      "id": 942580154,
      "node_id": "MDU6SXNzdWU5NDI1ODAxNTQ=",
      "number": 44996,
      "title": "Parse error with an 'override' variable",
      "user": {
        "login": "sarimarton",
        "id": 2169043,
        "node_id": "MDQ6VXNlcjIxNjkwNDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2169043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarimarton",
        "html_url": "https://github.com/sarimarton",
        "followers_url": "https://api.github.com/users/sarimarton/followers",
        "following_url": "https://api.github.com/users/sarimarton/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarimarton/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarimarton/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarimarton/subscriptions",
        "organizations_url": "https://api.github.com/users/sarimarton/orgs",
        "repos_url": "https://api.github.com/users/sarimarton/repos",
        "events_url": "https://api.github.com/users/sarimarton/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarimarton/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 117630704,
          "node_id": "MDU6TGFiZWwxMTc2MzA3MDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/help%20wanted",
          "name": "help wanted",
          "color": "05ba65",
          "default": true,
          "description": "You can do this"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2094,
        "closed_issues": 678,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T17:17:59Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 2,
      "created_at": "2021-07-13T01:02:05Z",
      "updated_at": "2021-07-13T06:40:41Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\noverride\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This changed between versions <4.2.3 and 4.3.*\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?#code/MYewdgzgLgBCBuBTATsglgE0TAvDALANwBQoksAhrjABQIrpYwUTNgCeAlCaeNHElSZEAD2pFe5GGLx1BjUc1YUO3YkA)\r\n\r\n### üíª Code\r\n\r\nconst override = 4;\r\nconst a = (override as any); // <-- error; typescript thinks it's an unfinished arrow function\r\n\r\nconst overridex = 4;\r\nconst x = (overridex as any);\r\n\r\n\r\n### üôÅ Actual behavior\r\n\r\nTypeScript thinks it's an unfinished arrow function\r\n\r\n### üôÇ Expected behavior\r\n\r\nThe code should not produce any error.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44995",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44995/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44995/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44995/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44995",
      "id": 942577409,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg4Mjg5Nzc3",
      "number": 44995,
      "title": "Dont swallow declaration emit errors when issued on nodes without names",
      "user": {
        "login": "weswigham",
        "id": 2932786,
        "node_id": "MDQ6VXNlcjI5MzI3ODY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2932786?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/weswigham",
        "html_url": "https://github.com/weswigham",
        "followers_url": "https://api.github.com/users/weswigham/followers",
        "following_url": "https://api.github.com/users/weswigham/following{/other_user}",
        "gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
        "organizations_url": "https://api.github.com/users/weswigham/orgs",
        "repos_url": "https://api.github.com/users/weswigham/repos",
        "events_url": "https://api.github.com/users/weswigham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/weswigham/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1503029093,
          "node_id": "MDU6TGFiZWwxNTAzMDI5MDkz",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team",
          "name": "Author: Team",
          "color": "3178C6",
          "default": false,
          "description": ""
        },
        {
          "id": 1820418576,
          "node_id": "MDU6TGFiZWwxODIwNDE4NTc2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug",
          "name": "For Milestone Bug",
          "color": "001f77",
          "default": false,
          "description": "PRs that fix a bug with a specific milestone"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "weswigham",
        "id": 2932786,
        "node_id": "MDQ6VXNlcjI5MzI3ODY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2932786?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/weswigham",
        "html_url": "https://github.com/weswigham",
        "followers_url": "https://api.github.com/users/weswigham/followers",
        "following_url": "https://api.github.com/users/weswigham/following{/other_user}",
        "gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
        "organizations_url": "https://api.github.com/users/weswigham/orgs",
        "repos_url": "https://api.github.com/users/weswigham/repos",
        "events_url": "https://api.github.com/users/weswigham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/weswigham/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "weswigham",
          "id": 2932786,
          "node_id": "MDQ6VXNlcjI5MzI3ODY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2932786?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/weswigham",
          "html_url": "https://github.com/weswigham",
          "followers_url": "https://api.github.com/users/weswigham/followers",
          "following_url": "https://api.github.com/users/weswigham/following{/other_user}",
          "gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
          "organizations_url": "https://api.github.com/users/weswigham/orgs",
          "repos_url": "https://api.github.com/users/weswigham/repos",
          "events_url": "https://api.github.com/users/weswigham/events{/privacy}",
          "received_events_url": "https://api.github.com/users/weswigham/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-13T00:55:49Z",
      "updated_at": "2021-07-13T00:56:08Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44995",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44995",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44995.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44995.patch"
      },
      "body": "Fixes #44731\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44994",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44994/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44994/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44994/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44994",
      "id": 942575494,
      "node_id": "MDU6SXNzdWU5NDI1NzU0OTQ=",
      "number": 44994,
      "title": "Local variable gets narrowed to 'never' despite being assigned in callback",
      "user": {
        "login": "marcello3d",
        "id": 21952,
        "node_id": "MDQ6VXNlcjIxOTUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcello3d",
        "html_url": "https://github.com/marcello3d",
        "followers_url": "https://api.github.com/users/marcello3d/followers",
        "following_url": "https://api.github.com/users/marcello3d/following{/other_user}",
        "gists_url": "https://api.github.com/users/marcello3d/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/marcello3d/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/marcello3d/subscriptions",
        "organizations_url": "https://api.github.com/users/marcello3d/orgs",
        "repos_url": "https://api.github.com/users/marcello3d/repos",
        "events_url": "https://api.github.com/users/marcello3d/events{/privacy}",
        "received_events_url": "https://api.github.com/users/marcello3d/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971226,
          "node_id": "MDU6TGFiZWwxMTM5NzEyMjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Duplicate",
          "name": "Duplicate",
          "color": "f7c6c7",
          "default": false,
          "description": "An existing issue was already created"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-13T00:51:34Z",
      "updated_at": "2021-07-13T03:19:30Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n- variable narrowing\r\n\r\nI also found [this stack overflow](https://stackoverflow.com/questions/54769781/typescript-incorrectly-inferring-never) with the same bug.\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is the behavior in every version I tried (3.3 to 4.4 on the playground), and I reviewed all entries in the FAQ\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?ts=4.4.0-beta#code/C4TwDgpgBAYgdlAvFAFASiQPigNwPYCWAJgNwBQZAZgK5wDGwBeCdAhgDbsDKeAthDFp0UbTgCNWdANYAuVJTgz4aRJnzEMAbzJRdUUewnSU6LFE1Qde63WYBnPOwgA6dngDmKAOQALAl7RyawBfQLJg8jIAeiioABU-OyhKVgJ2OxkyJ2BkvDw5eCgAHyhaIghKAjgIIiRSuHLK6tIKGPjEqAIkgHkAaUy27Nz82AQSsoqqmsiDHn5BehMFArgMVXMrXUo8uoVyUMjtvAB+Z3QgA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\ntype Fn = () => void;\r\n\r\nfunction callSomeFunc(callback: (fn:Fn)=>void) {\r\n    callback(() => { \r\n        console.log('hi');\r\n    });\r\n};\r\n\r\n// This fails:\r\nlet foo: Fn | undefined = undefined;\r\n\r\n// This is OK:\r\n// let foo: Fn | undefined;\r\n\r\ncallSomeFunc((fn: Fn) => {\r\n    foo = fn;\r\n});\r\n\r\n// The error shows up on this line:\r\nfoo?.()\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n<!-- What happened, and why it was wrong -->\r\n`foo` on the last line has an error:\r\n```\r\nThis expression is not callable.\r\n  Type 'never' has no call signatures.\r\n```\r\n\r\nStrangely, if I don't define an initial value for `foo` (i.e. `let foo: Fn | undefined;`), it works correctly!\r\n\r\n### üôÇ Expected behavior\r\n\r\n<!-- What you expected to happen instead, and why -->\r\n`foo` should maintain its type `Fn | undefined` and not get narrowed",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44992",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44992/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44992/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44992/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44992",
      "id": 942461222,
      "node_id": "MDU6SXNzdWU5NDI0NjEyMjI=",
      "number": 44992,
      "title": "Wrong tuple inference of async IIFE return value",
      "user": {
        "login": "enisdenjo",
        "id": 11807600,
        "node_id": "MDQ6VXNlcjExODA3NjAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/11807600?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enisdenjo",
        "html_url": "https://github.com/enisdenjo",
        "followers_url": "https://api.github.com/users/enisdenjo/followers",
        "following_url": "https://api.github.com/users/enisdenjo/following{/other_user}",
        "gists_url": "https://api.github.com/users/enisdenjo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/enisdenjo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/enisdenjo/subscriptions",
        "organizations_url": "https://api.github.com/users/enisdenjo/orgs",
        "repos_url": "https://api.github.com/users/enisdenjo/repos",
        "events_url": "https://api.github.com/users/enisdenjo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/enisdenjo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 117630704,
          "node_id": "MDU6TGFiZWwxMTc2MzA3MDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/help%20wanted",
          "name": "help wanted",
          "color": "05ba65",
          "default": true,
          "description": "You can do this"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2094,
        "closed_issues": 678,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T17:17:59Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 1,
      "created_at": "2021-07-12T21:23:43Z",
      "updated_at": "2021-07-12T21:33:29Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\n\r\ntuple, array, promise, async, function, inference\r\n\r\n### üïó Version & Regression Information\r\n\r\nv4.3.5\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?ssl=3&ssc=9&pln=3&pc=15#code/BQQwzgngdgxgBMAlHAvAPjgbwFBzgenzkBlyXOGAeyjABc4oKB3CgJwGsAuOABRYoFsAlmACmAHgDaVEVygBXfgCMRLADRwazLrRaCoAcwC6GFAnDR4SVBhx48LETTksocCQEZ1Ack0UvhgG4yAF9EJCCyQjhAUHIySmo6CBEwZnYuXgFhcSkoGXoFZTUNLTgdPSMTehFGHj4hUWAyPGAHMAoAGwA3EWR0OFaO7uAPb19-RFUyRCDQ8OwgA)\r\n\r\n### üíª Code and behavior\r\n\r\n```ts\r\n// ‚ùå Type '(string | number)[]' is not assignable to type '[one: number, two: string]'.\r\nconst nowork: Promise<[one: number, two: string]> = (async () => {\r\n  return [1, 'two'];\r\n})();\r\n```\r\n\r\n### üôÇ Expected behavior\r\n\r\nAs with supplying an instance of Promise, correctly infer returned value as assignable to the variable.\r\n\r\n```ts\r\n// ‚úÖ\r\nconst yeswork: Promise<[one: number, two: string]> = new Promise(\r\n  (resolve) => resolve([1, 'two']),\r\n);\r\n```",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44991",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44991/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44991/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44991/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44991",
      "id": 942415224,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg4MTQ3NTM5",
      "number": 44991,
      "title": "Fix getChildCount/At methods in EndOfFileTokens",
      "user": {
        "login": "tjjfvi",
        "id": 44031566,
        "node_id": "MDQ6VXNlcjQ0MDMxNTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44031566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tjjfvi",
        "html_url": "https://github.com/tjjfvi",
        "followers_url": "https://api.github.com/users/tjjfvi/followers",
        "following_url": "https://api.github.com/users/tjjfvi/following{/other_user}",
        "gists_url": "https://api.github.com/users/tjjfvi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tjjfvi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tjjfvi/subscriptions",
        "organizations_url": "https://api.github.com/users/tjjfvi/orgs",
        "repos_url": "https://api.github.com/users/tjjfvi/repos",
        "events_url": "https://api.github.com/users/tjjfvi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tjjfvi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1820464799,
          "node_id": "MDU6TGFiZWwxODIwNDY0Nzk5",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Backlog%20Bug",
          "name": "For Backlog Bug",
          "color": "9ff4ed",
          "default": false,
          "description": "PRs that fix a backlog bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-12T20:20:59Z",
      "updated_at": "2021-07-12T21:07:51Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44991",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44991",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44991.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44991.patch"
      },
      "body": "Before, they were hardcoded to return `0` and `undefined!`, respectively, but that is inaccurate for `EndOfFileToken`s with attached jsdoc.\r\n\r\nFixes #44990 \r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44990",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44990/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44990/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44990/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44990",
      "id": 942285467,
      "node_id": "MDU6SXNzdWU5NDIyODU0Njc=",
      "number": 44990,
      "title": "`getChildCount` returns 0 on `EndOfFileToken` with JSDoc",
      "user": {
        "login": "tjjfvi",
        "id": 44031566,
        "node_id": "MDQ6VXNlcjQ0MDMxNTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44031566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tjjfvi",
        "html_url": "https://github.com/tjjfvi",
        "followers_url": "https://api.github.com/users/tjjfvi/followers",
        "following_url": "https://api.github.com/users/tjjfvi/following{/other_user}",
        "gists_url": "https://api.github.com/users/tjjfvi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tjjfvi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tjjfvi/subscriptions",
        "organizations_url": "https://api.github.com/users/tjjfvi/orgs",
        "repos_url": "https://api.github.com/users/tjjfvi/repos",
        "events_url": "https://api.github.com/users/tjjfvi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tjjfvi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 117630704,
          "node_id": "MDU6TGFiZWwxMTc2MzA3MDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/help%20wanted",
          "name": "help wanted",
          "color": "05ba65",
          "default": true,
          "description": "You can do this"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2094,
        "closed_issues": 678,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T17:17:59Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-12T17:31:56Z",
      "updated_at": "2021-07-12T18:14:19Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n- `getChildCount`\r\n- `EndOfFileToken`\r\n\r\n### üïó Version & Regression Information\r\n\r\nSeems like the bug was introduced in #9529. A partial fix was implemented in #25015, but that only updated `getChildren`, not `getChildCount` or `getChildAt`.\r\n\r\n### ‚èØ Playground Link\r\n\r\nN/A\r\n\r\n### üíª Code\r\n\r\nhttps://github.com/microsoft/TypeScript/blob/main/src/services/services.ts#L261-L271\r\n\r\n```ts\r\n/** jsdoc comment at end of file */\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n`getChildCount` is hardcoded to return 0\r\n\r\n### üôÇ Expected behavior\r\n\r\n`getChildCount` returns the same value as `getChildren().length`\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44988",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44988/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44988/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44988/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44988",
      "id": 942192975,
      "node_id": "MDU6SXNzdWU5NDIxOTI5NzU=",
      "number": 44988,
      "title": "Parentheses in nullish coalescing chains impacts type narrowing",
      "user": {
        "login": "joealden",
        "id": 10297243,
        "node_id": "MDQ6VXNlcjEwMjk3MjQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/10297243?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joealden",
        "html_url": "https://github.com/joealden",
        "followers_url": "https://api.github.com/users/joealden/followers",
        "following_url": "https://api.github.com/users/joealden/following{/other_user}",
        "gists_url": "https://api.github.com/users/joealden/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/joealden/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joealden/subscriptions",
        "organizations_url": "https://api.github.com/users/joealden/orgs",
        "repos_url": "https://api.github.com/users/joealden/repos",
        "events_url": "https://api.github.com/users/joealden/events{/privacy}",
        "received_events_url": "https://api.github.com/users/joealden/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 117630704,
          "node_id": "MDU6TGFiZWwxMTc2MzA3MDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/help%20wanted",
          "name": "help wanted",
          "color": "05ba65",
          "default": true,
          "description": "You can do this"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2094,
        "closed_issues": 678,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T17:17:59Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 1,
      "created_at": "2021-07-12T15:41:06Z",
      "updated_at": "2021-07-12T16:54:09Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\n\r\nnullish coalescing chain parentheses type narrowing prettier\r\n\r\n### üïó Version & Regression Information\r\n\r\nThis is the behavior in every version I tried, and I reviewed the FAQ for entries about nullish coalescing. Note that at the time of writing, 4.3.5 was the latest stable release.\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?ts=4.3.5#code/C4TwDgpgBAKlC8AoKUA+UDeUCGAuKAzsAE4CWAdgOYDcUARvkWVVAL7JqY6MkU30B+fAFdyAEwgAzChDFsO6LNiFRRE6eVm0GhXi1bVEiAMYB7ckSiUIwAEoQCwgDbAAjAigAKAG7YnwiFceZkpONSkZMQAaKF9-CAAmfBgASmC+BAA+TA5iG2Ficli-APcBAWL4hIA6bChyyoCaukMDIzMLYCsbe0cXBI8fEsD0lnRwjVkYuKbktN0QrJyUPOACopnA+oqhqtrtxsTquhTW6iA)\r\n\r\n### üíª Code\r\n\r\n```ts\r\ntype T =\r\n  | { a: string; b: string }\r\n  | { a: string; b?: undefined }\r\n  | { a?: undefined; b: string };\r\n\r\nconst getResult1 = (value1: string | undefined, value2: T): string => {\r\n  return value1 ?? value2.a ?? value2.b;\r\n};\r\n\r\nconst getResult2 = (value1: string | undefined, value2: T): string => {\r\n  return value1 ?? (value2.a ?? value2.b);\r\n};\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n- `getResult1` throws a type error, as TypeScript incorrectly infers that `value2.b` has a type of `string | undefined`. \r\n- `getResult2` does not throw a type error, as TypeScript correctly infers that `value2.b` has a type of `string`. \r\n\r\n### üôÇ Expected behavior\r\n\r\nThe existence and placement of parentheses in nullish coalescing chains should not impact type narrowing, as to my knowledge (and `prettier`, as it automatically removes the parentheses seen in `getResult2`), `x ?? y ?? z` and `x ?? (y ?? z)` actually behave the same at runtime.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44984",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44984/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44984/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44984/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44984",
      "id": 941796228,
      "node_id": "MDU6SXNzdWU5NDE3OTYyMjg=",
      "number": 44984,
      "title": "Property assignment to optional chain expression incorrectly allowed if the expression is type-asserted",
      "user": {
        "login": "sosoba",
        "id": 2843525,
        "node_id": "MDQ6VXNlcjI4NDM1MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2843525?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sosoba",
        "html_url": "https://github.com/sosoba",
        "followers_url": "https://api.github.com/users/sosoba/followers",
        "following_url": "https://api.github.com/users/sosoba/following{/other_user}",
        "gists_url": "https://api.github.com/users/sosoba/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sosoba/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sosoba/subscriptions",
        "organizations_url": "https://api.github.com/users/sosoba/orgs",
        "repos_url": "https://api.github.com/users/sosoba/repos",
        "events_url": "https://api.github.com/users/sosoba/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sosoba/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 117630704,
          "node_id": "MDU6TGFiZWwxMTc2MzA3MDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/help%20wanted",
          "name": "help wanted",
          "color": "05ba65",
          "default": true,
          "description": "You can do this"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2094,
        "closed_issues": 678,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T17:17:59Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 4,
      "created_at": "2021-07-12T08:17:00Z",
      "updated_at": "2021-07-12T18:11:07Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is a crash\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?noUnusedLocals=true&noUnusedParameters=true&target=7&jsx=0&strict=true#code/KYDwDg9gTgLgBAMwK4DsDGMCWEWIhACmAH4AuOACQBUBZAGQFEAbYAW2BRgEoBvAWABQcOAQA81eszYcYAPhIA6MAEMoMqe05cFAZxgBPFgrQQm0OAF44AcjUATawG5BAX0FA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\n// ts\r\nexport function foo(e?: HTMLElement){\r\n  (<HTMLElement>e?.parentElement).style.color = 'red';\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n```js\r\n// js\r\nexport function foo(e) {\r\n    e?.parentElement.style.color = 'red';\r\n}\r\n```\r\n```bash\r\n# node\r\ne?.parentElement.style.color = 'red';\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nUncaught SyntaxError: Invalid left-hand side in assignment\r\n```\r\n\r\n\r\n### üôÇ Expected behavior\r\n\r\n<!-- What you expected to happen instead, and why -->\r\nCompilation error: The left-hand side of an assignment expression may not be an optional property access.(2779)\r\nWhy? Because typescript output should be always valid js.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44983",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44983/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44983/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44983/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44983",
      "id": 941724915,
      "node_id": "MDU6SXNzdWU5NDE3MjQ5MTU=",
      "number": 44983,
      "title": "Object.assign unexpectedly returns never type",
      "user": {
        "login": "VVatashi",
        "id": 16176764,
        "node_id": "MDQ6VXNlcjE2MTc2NzY0",
        "avatar_url": "https://avatars.githubusercontent.com/u/16176764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/VVatashi",
        "html_url": "https://github.com/VVatashi",
        "followers_url": "https://api.github.com/users/VVatashi/followers",
        "following_url": "https://api.github.com/users/VVatashi/following{/other_user}",
        "gists_url": "https://api.github.com/users/VVatashi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/VVatashi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/VVatashi/subscriptions",
        "organizations_url": "https://api.github.com/users/VVatashi/orgs",
        "repos_url": "https://api.github.com/users/VVatashi/repos",
        "events_url": "https://api.github.com/users/VVatashi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/VVatashi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971558,
          "node_id": "MDU6TGFiZWwxMTM5NzE1NTg=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Question",
          "name": "Question",
          "color": "d4c5f9",
          "default": false,
          "description": "An issue which isn't directly actionable in code"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-12T06:42:25Z",
      "updated_at": "2021-07-12T18:09:18Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\n\r\nObject.assign, intersection type, never type, undefined\r\n\r\n### üïó Version & Regression Information\r\n\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about intersection type and never type\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?ts=4.3.5#code/MYewdgzgLgBAZiEMC8MDeMCGAuGBGAGhgCNcAmGAXwG4AoUSWYzAJxRgHliArAU2CgA6TBAgBLAOZgAFGkpEEIIhlIwArmAAmvOGLC9NVAJR1mLYezx0gA)\r\n\r\n### üíª Code\r\n\r\nI commonly use this pattern to \"remove\" unnecessary fields from an object in JS:\r\n\r\n```ts\r\nconst foo = { a: 1, b: 2 };\r\nconst bar = Object.assign({}, foo, { b: undefined }); // Making a copy of 'foo' without field 'b'\r\nbar.a = 1; // 'bar' should have at least 'a' field here, but TS gives error\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nHowever, in TS the result of `Object.assign` was inferred to be of `never` type. So I got this error:\r\n```\r\nProperty 'a' does not exist on type 'never'.\r\n The intersection '{ a: number; b: number; } & { b: undefined; }' was reduced to 'never' because property 'b' has conflicting types in some constituents.(2339)\r\n```\r\n\r\nIsn't this an error in definition of `Object.assign` function or in intersection type logic?\r\n\r\n### üôÇ Expected behavior\r\n\r\nI expected the result type to be something like  `{ a: number; b?: number; }`, `{ a: number; b: undefined; }` or `{ a: number; }`.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44981",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44981/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44981/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44981/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44981",
      "id": 941562692,
      "node_id": "MDU6SXNzdWU5NDE1NjI2OTI=",
      "number": 44981,
      "title": "TypeError: Cannot read property 'flags' of undefined in 4.4.0-beta",
      "user": {
        "login": "samreid",
        "id": 679486,
        "node_id": "MDQ6VXNlcjY3OTQ4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/679486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/samreid",
        "html_url": "https://github.com/samreid",
        "followers_url": "https://api.github.com/users/samreid/followers",
        "following_url": "https://api.github.com/users/samreid/following{/other_user}",
        "gists_url": "https://api.github.com/users/samreid/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/samreid/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/samreid/subscriptions",
        "organizations_url": "https://api.github.com/users/samreid/orgs",
        "repos_url": "https://api.github.com/users/samreid/repos",
        "events_url": "https://api.github.com/users/samreid/events{/privacy}",
        "received_events_url": "https://api.github.com/users/samreid/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971226,
          "node_id": "MDU6TGFiZWwxMTM5NzEyMjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Duplicate",
          "name": "Duplicate",
          "color": "f7c6c7",
          "default": false,
          "description": "An existing issue was already created"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-12T00:15:59Z",
      "updated_at": "2021-07-12T18:33:22Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\nTypeError: Cannot read property 'flags' of undefined\r\ncrash\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is a crash\r\n- This changed between versions Version 4.3.5 and Version 4.4.0-beta\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\nThe problem goes away if you rename the *.js file to *.ts, so I couldn't create a playground for it.\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```json\r\n// tsconfig.json\r\n{\r\n    \"compilerOptions\": {\r\n        \"target\": \"ES2020\",\r\n        \"allowJs\": true,\r\n        \"outDir\": \"out/\"\r\n    }\r\n}\r\n```\r\n\r\n```js\r\n// TestClass.js\r\nconst map = new Map();\r\nconst memoize = () => key => map.get( key );\r\n\r\nclass U {}\r\n\r\nconst T = memoize();\r\n\r\nclass V extends T( U ) {\r\n  /**\r\n   * @override\r\n   */\r\n  initialize() {\r\n  }\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n```\r\n$ tsc --version\r\nVersion 4.4.0-beta\r\n\r\n$ tsc\r\n/Users/samreid/.npm-global/lib/node_modules/typescript/lib/tsc.js:92222\r\n                throw e;\r\n                ^\r\n\r\nTypeError: Cannot read property 'flags' of undefined\r\n    at getMembersOfSymbol (/Users/samreid/.npm-global/lib/node_modules/typescript/lib/tsc.js:45197:27)\r\n    at getSuggestedSymbolForNonexistentClassMember (/Users/samreid/.npm-global/lib/node_modules/typescript/lib/tsc.js:59370:68)\r\n    at checkClassMember (/Users/samreid/.npm-global/lib/node_modules/typescript/lib/tsc.js:66799:42)\r\n    at _loop_29 (/Users/samreid/.npm-global/lib/node_modules/typescript/lib/tsc.js:66779:17)\r\n    at checkMembersForMissingOverrideModifier (/Users/samreid/.npm-global/lib/node_modules/typescript/lib/tsc.js:66783:17)\r\n    at checkClassLikeDeclaration (/Users/samreid/.npm-global/lib/node_modules/typescript/lib/tsc.js:66727:13)\r\n    at checkClassDeclaration (/Users/samreid/.npm-global/lib/node_modules/typescript/lib/tsc.js:66646:13)\r\n    at checkSourceElementWorker (/Users/samreid/.npm-global/lib/node_modules/typescript/lib/tsc.js:68014:28)\r\n    at checkSourceElement (/Users/samreid/.npm-global/lib/node_modules/typescript/lib/tsc.js:67856:17)\r\n    at Object.forEach (/Users/samreid/.npm-global/lib/node_modules/typescript/lib/tsc.js:132:30)\r\n```\r\n\r\n### üôÇ Expected behavior\r\n\r\nBuild completes successfully in 4.3.5:\r\n\r\n```\r\n$ tsc --version\r\nVersion 4.3.5\r\n\r\n$ tsc\r\n$\r\n```\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44980",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44980/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44980/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44980/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44980",
      "id": 941562517,
      "node_id": "MDU6SXNzdWU5NDE1NjI1MTc=",
      "number": 44980,
      "title": "Promise#finally's callback doesn't accept  Promise<void> callback, unlike Promise#then",
      "user": {
        "login": "blair",
        "id": 2297,
        "node_id": "MDQ6VXNlcjIyOTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2297?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/blair",
        "html_url": "https://github.com/blair",
        "followers_url": "https://api.github.com/users/blair/followers",
        "following_url": "https://api.github.com/users/blair/following{/other_user}",
        "gists_url": "https://api.github.com/users/blair/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/blair/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/blair/subscriptions",
        "organizations_url": "https://api.github.com/users/blair/orgs",
        "repos_url": "https://api.github.com/users/blair/repos",
        "events_url": "https://api.github.com/users/blair/events{/privacy}",
        "received_events_url": "https://api.github.com/users/blair/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-12T00:15:19Z",
      "updated_at": "2021-07-12T00:15:19Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# lib Update Request\r\n\r\n## Configuration Check\r\n\r\nMy compilation *target* is `ES2018` and my *lib* is `the default`.\r\n\r\n## Missing / Incorrect Definition\r\n\r\n`Promise#finally`\r\n\r\n## Sample Code\r\n\r\n```\r\nexport async function closeDbConnection(): Promise<void> {\r\n    return Promise.resolve();\r\n}\r\n\r\nPromise\r\n    .resolve()\r\n    .finally(closeDbConnection);\r\n```\r\n\r\nThe suggested change is changing `lib/lib.es2018.promise.d.ts` from\r\n\r\n    finally(onfinally?: (() => void) | undefined | null): Promise<T>\r\nto\r\n\r\n    finally(onfinally?: (() => void | PromiseLike<void>) | undefined | null): Promise<T>\r\n\r\nThe current typing, without the PromiseLike<void>, suggests that the runtime will not wait for the onfinally callback to resolve if it's a Promise, however, it does. This can be seen in the console when `test` changes from `pending` to `123`.\r\n\r\n```\r\n> test = Promise.resolve(123).finally(() => new Promise(resolve => setTimeout(resolve, 5000)))\r\nPromise { <pending> }\r\n> test\r\nPromise { <pending> }\r\n> test\r\nPromise { <pending> }\r\n> test\r\nPromise { <pending> }\r\n> test\r\nPromise { <pending> }\r\n> test\r\nPromise { <pending> }\r\n> test\r\nPromise { <pending> }\r\n> test\r\nPromise { 123 }\r\n```\r\n\r\nAdditionally, for consistency between `#then` and `#finally`, the current `onfinally` definition doesn't match `Promise#then` in `lib/lib.es5.d.ts` where `onfullfilled` returns `TResult1 | PromiseLike<TResult1>`.\r\n\r\n```\r\ninterface Promise<T> {\r\n    /**\r\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\r\n     * @param onfulfilled The callback to execute when the Promise is resolved.\r\n     * @param onrejected The callback to execute when the Promise is rejected.\r\n     * @returns A Promise for the completion of which ever callback is executed.\r\n     */\r\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;\r\n```\r\n\r\n## Documentation Link\r\n\r\nhttps://tc39.es/ecma262/#sec-promise.prototype.finally\r\n\r\nSuggests that `.finally()` is implemented similar to `.then(result => Promise.resolve(onFinally()).then(result))`.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44978",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44978/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44978/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44978/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44978",
      "id": 941533951,
      "node_id": "MDU6SXNzdWU5NDE1MzM5NTE=",
      "number": 44978,
      "title": "[NewErrors] 4.4.0-dev.20210711 vs 4.3.5",
      "user": {
        "login": "typescript-bot",
        "id": 23042052,
        "node_id": "MDQ6VXNlcjIzMDQyMDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23042052?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/typescript-bot",
        "html_url": "https://github.com/typescript-bot",
        "followers_url": "https://api.github.com/users/typescript-bot/followers",
        "following_url": "https://api.github.com/users/typescript-bot/following{/other_user}",
        "gists_url": "https://api.github.com/users/typescript-bot/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/typescript-bot/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/typescript-bot/subscriptions",
        "organizations_url": "https://api.github.com/users/typescript-bot/orgs",
        "repos_url": "https://api.github.com/users/typescript-bot/repos",
        "events_url": "https://api.github.com/users/typescript-bot/events{/privacy}",
        "received_events_url": "https://api.github.com/users/typescript-bot/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-11T21:17:02Z",
      "updated_at": "2021-07-11T21:17:02Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "The following errors were reported by 4.4.0-dev.20210711, but not by 4.3.5\n\n        # [ant-design/ant-design](https://github.com/ant-design/ant-design)\n### [tsconfig.json](https://github.com/ant-design/ant-design/blob/10a8490b1ffb1e8101b9b7cd3fc640d5e5ac503a/tsconfig.json)\n - `error TS2359: The right-hand side of an 'instanceof' expression must be of type 'any' or of a type assignable to the 'Function' interface type.`\n   - [components/_util/scrollTo.ts#L26](https://github.com/ant-design/ant-design/blob/10a8490b1ffb1e8101b9b7cd3fc640d5e5ac503a/components/_util/scrollTo.ts#L26)\n - `error TS2339: Property 'nodeType' does not exist on type 'ChildNode'.`\n   - [components/typography/util.tsx#L127](https://github.com/ant-design/ant-design/blob/10a8490b1ffb1e8101b9b7cd3fc640d5e5ac503a/components/typography/util.tsx#L127)\n   - [components/typography/util.tsx#L191](https://github.com/ant-design/ant-design/blob/10a8490b1ffb1e8101b9b7cd3fc640d5e5ac503a/components/typography/util.tsx#L191)\n - `error TS2345: Argument of type 'ChildNode' is not assignable to parameter of type 'Node'.`\n   - [components/typography/util.tsx#L144](https://github.com/ant-design/ant-design/blob/10a8490b1ffb1e8101b9b7cd3fc640d5e5ac503a/components/typography/util.tsx#L144)\n   - [components/typography/util.tsx#L149](https://github.com/ant-design/ant-design/blob/10a8490b1ffb1e8101b9b7cd3fc640d5e5ac503a/components/typography/util.tsx#L149)\n   - [components/typography/util.tsx#L204](https://github.com/ant-design/ant-design/blob/10a8490b1ffb1e8101b9b7cd3fc640d5e5ac503a/components/typography/util.tsx#L204)\n - `error TS2339: Property 'textContent' does not exist on type 'ChildNode'.`\n   - [components/typography/util.tsx#L211](https://github.com/ant-design/ant-design/blob/10a8490b1ffb1e8101b9b7cd3fc640d5e5ac503a/components/typography/util.tsx#L211)\n# [cdr/code-server](https://github.com/cdr/code-server)\n**9 of 51 projects failed to build with the old tsc**\n### [lib/vscode/extensions/git/tsconfig.json](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [lib/vscode/extensions/git/src/autofetch.ts#L122](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/autofetch.ts#L122)\n   - [lib/vscode/extensions/git/src/commands.ts#L503](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L503)\n   - [lib/vscode/extensions/git/src/commands.ts#L510](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L510)\n   - [lib/vscode/extensions/git/src/commands.ts#L510](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L510)\n   - [lib/vscode/extensions/git/src/commands.ts#L856](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L856)\n   - [lib/vscode/extensions/git/src/commands.ts#L951](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L951)\n   - [lib/vscode/extensions/git/src/commands.ts#L1724](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L1724)\n   - [lib/vscode/extensions/git/src/commands.ts#L1829](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L1829)\n   - [lib/vscode/extensions/git/src/commands.ts#L1855](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L1855)\n   - [lib/vscode/extensions/git/src/commands.ts#L2123](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L2123)\n   - [lib/vscode/extensions/git/src/commands.ts#L2324](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L2324)\n   - [lib/vscode/extensions/git/src/commands.ts#L2324](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L2324)\n   - [lib/vscode/extensions/git/src/commands.ts#L2350](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L2350)\n   - [lib/vscode/extensions/git/src/commands.ts#L2350](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/commands.ts#L2350)\n   - [lib/vscode/extensions/git/src/git.ts#L445](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L445)\n   - [lib/vscode/extensions/git/src/git.ts#L446](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L446)\n   - [lib/vscode/extensions/git/src/git.ts#L446](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L446)\n   - [lib/vscode/extensions/git/src/git.ts#L447](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L447)\n   - [lib/vscode/extensions/git/src/git.ts#L447](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L447)\n   - [lib/vscode/extensions/git/src/git.ts#L1059](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1059)\n   - [lib/vscode/extensions/git/src/git.ts#L1060](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1060)\n   - [lib/vscode/extensions/git/src/git.ts#L1298](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1298)\n   - [lib/vscode/extensions/git/src/git.ts#L1333](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1333)\n   - [lib/vscode/extensions/git/src/git.ts#L1334](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1334)\n   - [lib/vscode/extensions/git/src/git.ts#L1335](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1335)\n   - [lib/vscode/extensions/git/src/git.ts#L1410](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1410)\n   - [lib/vscode/extensions/git/src/git.ts#L1417](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1417)\n   - [lib/vscode/extensions/git/src/git.ts#L1465](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1465)\n   - [lib/vscode/extensions/git/src/git.ts#L1466](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1466)\n   - [lib/vscode/extensions/git/src/git.ts#L1513](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1513)\n   - [lib/vscode/extensions/git/src/git.ts#L1548](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1548)\n   - [lib/vscode/extensions/git/src/git.ts#L1603](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1603)\n   - [lib/vscode/extensions/git/src/git.ts#L1604](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1604)\n   - [lib/vscode/extensions/git/src/git.ts#L1605](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1605)\n   - [lib/vscode/extensions/git/src/git.ts#L1606](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1606)\n   - [lib/vscode/extensions/git/src/git.ts#L1639](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1639)\n   - [lib/vscode/extensions/git/src/git.ts#L1640](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1640)\n   - [lib/vscode/extensions/git/src/git.ts#L1641](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1641)\n   - [lib/vscode/extensions/git/src/git.ts#L1642](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1642)\n   - [lib/vscode/extensions/git/src/git.ts#L1643](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1643)\n   - [lib/vscode/extensions/git/src/git.ts#L1644](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1644)\n   - [lib/vscode/extensions/git/src/git.ts#L1645](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1645)\n   - [lib/vscode/extensions/git/src/git.ts#L1646](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1646)\n   - [lib/vscode/extensions/git/src/git.ts#L1646](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1646)\n   - [lib/vscode/extensions/git/src/git.ts#L1647](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1647)\n   - [lib/vscode/extensions/git/src/git.ts#L1648](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1648)\n   - [lib/vscode/extensions/git/src/git.ts#L1649](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1649)\n   - [lib/vscode/extensions/git/src/git.ts#L1650](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1650)\n   - [lib/vscode/extensions/git/src/git.ts#L1651](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1651)\n   - [lib/vscode/extensions/git/src/git.ts#L1666](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1666)\n   - [lib/vscode/extensions/git/src/git.ts#L1667](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1667)\n   - [lib/vscode/extensions/git/src/git.ts#L1668](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1668)\n   - [lib/vscode/extensions/git/src/git.ts#L1669](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1669)\n   - [lib/vscode/extensions/git/src/git.ts#L1708](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1708)\n   - [lib/vscode/extensions/git/src/git.ts#L1709](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1709)\n   - [lib/vscode/extensions/git/src/git.ts#L1710](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1710)\n   - [lib/vscode/extensions/git/src/git.ts#L1711](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1711)\n   - [lib/vscode/extensions/git/src/git.ts#L1712](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1712)\n   - [lib/vscode/extensions/git/src/git.ts#L1713](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1713)\n   - [lib/vscode/extensions/git/src/git.ts#L1714](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1714)\n   - [lib/vscode/extensions/git/src/git.ts#L1715](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1715)\n   - [lib/vscode/extensions/git/src/git.ts#L1733](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1733)\n   - [lib/vscode/extensions/git/src/git.ts#L1734](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1734)\n   - [lib/vscode/extensions/git/src/git.ts#L1755](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1755)\n   - [lib/vscode/extensions/git/src/git.ts#L1756](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1756)\n   - [lib/vscode/extensions/git/src/git.ts#L1781](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1781)\n   - [lib/vscode/extensions/git/src/git.ts#L1782](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1782)\n   - [lib/vscode/extensions/git/src/git.ts#L1783](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1783)\n   - [lib/vscode/extensions/git/src/git.ts#L1784](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1784)\n   - [lib/vscode/extensions/git/src/git.ts#L1785](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1785)\n   - [lib/vscode/extensions/git/src/git.ts#L1786](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1786)\n   - [lib/vscode/extensions/git/src/git.ts#L1803](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1803)\n   - [lib/vscode/extensions/git/src/git.ts#L1804](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L1804)\n   - [lib/vscode/extensions/git/src/git.ts#L2140](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/git.ts#L2140)\n   - [lib/vscode/extensions/git/src/main.ts#L166](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/main.ts#L166)\n   - [lib/vscode/extensions/git/src/main.ts#L170](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/main.ts#L170)\n   - [lib/vscode/extensions/git/src/main.ts#L171](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/main.ts#L171)\n   - [lib/vscode/extensions/git/src/remoteSource.ts#L67](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/remoteSource.ts#L67)\n   - [lib/vscode/extensions/git/src/repository.ts#L873](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/repository.ts#L873)\n   - [lib/vscode/extensions/git/src/repository.ts#L1535](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/repository.ts#L1535)\n   - [lib/vscode/extensions/git/src/repository.ts#L1727](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/repository.ts#L1727)\n   - [lib/vscode/extensions/git/src/repository.ts#L1747](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/repository.ts#L1747)\n   - [lib/vscode/extensions/git/src/repository.ts#L1748](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/repository.ts#L1748)\n   - [lib/vscode/extensions/git/src/repository.ts#L1748](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/repository.ts#L1748)\n   - [lib/vscode/extensions/git/src/util.ts#L137](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/util.ts#L137)\n   - [lib/vscode/extensions/git/src/util.ts#L159](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/util.ts#L159)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error & { gitErrorCode: GitErrorCodes; }'.`\n   - [lib/vscode/extensions/git/src/repository.ts#L1697](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/git/src/repository.ts#L1697)\n### [lib/vscode/extensions/github-authentication/tsconfig.json](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/github-authentication/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [lib/vscode/extensions/github-authentication/src/common/keychain.ts#L42](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/github-authentication/src/common/keychain.ts#L42)\n   - [lib/vscode/extensions/github-authentication/src/extension.ts#L45](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/github-authentication/src/extension.ts#L45)\n   - [lib/vscode/extensions/github-authentication/src/github.ts#L64](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/github-authentication/src/github.ts#L64)\n   - [lib/vscode/extensions/github-authentication/src/githubServer.ts#L218](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/github-authentication/src/githubServer.ts#L218)\n   - [lib/vscode/extensions/github-authentication/src/githubServer.ts#L234](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/github-authentication/src/githubServer.ts#L234)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'string'.`\n   - [lib/vscode/extensions/github-authentication/src/extension.ts#L59](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/github-authentication/src/extension.ts#L59)\n   - [lib/vscode/extensions/github-authentication/src/extension.ts#L81](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/github-authentication/src/extension.ts#L81)\n### [lib/vscode/extensions/github/tsconfig.json](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/github/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [lib/vscode/extensions/github/src/auth.ts#L22](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/github/src/auth.ts#L22)\n   - [lib/vscode/extensions/github/src/commands.ts#L18](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/github/src/commands.ts#L18)\n### [lib/vscode/extensions/grunt/tsconfig.json](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/grunt/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [lib/vscode/extensions/grunt/src/main.ts#L212](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/grunt/src/main.ts#L212)\n   - [lib/vscode/extensions/grunt/src/main.ts#L213](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/grunt/src/main.ts#L213)\n   - [lib/vscode/extensions/grunt/src/main.ts#L215](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/grunt/src/main.ts#L215)\n   - [lib/vscode/extensions/grunt/src/main.ts#L216](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/grunt/src/main.ts#L216)\n   - [lib/vscode/extensions/grunt/src/main.ts#L218](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/grunt/src/main.ts#L218)\n   - [lib/vscode/extensions/grunt/src/main.ts#L218](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/grunt/src/main.ts#L218)\n### [lib/vscode/extensions/gulp/tsconfig.json](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/gulp/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [lib/vscode/extensions/gulp/src/main.ts#L253](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/gulp/src/main.ts#L253)\n   - [lib/vscode/extensions/gulp/src/main.ts#L254](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/gulp/src/main.ts#L254)\n   - [lib/vscode/extensions/gulp/src/main.ts#L256](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/gulp/src/main.ts#L256)\n   - [lib/vscode/extensions/gulp/src/main.ts#L257](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/gulp/src/main.ts#L257)\n   - [lib/vscode/extensions/gulp/src/main.ts#L259](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/gulp/src/main.ts#L259)\n   - [lib/vscode/extensions/gulp/src/main.ts#L259](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/gulp/src/main.ts#L259)\n### [lib/vscode/extensions/html-language-features/server/tsconfig.json](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/html-language-features/server/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [lib/vscode/extensions/html-language-features/server/src/modes/javascriptLibs.ts#L27](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/html-language-features/server/src/modes/javascriptLibs.ts#L27)\n### [lib/vscode/extensions/jake/tsconfig.json](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/jake/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [lib/vscode/extensions/jake/src/main.ts#L186](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/jake/src/main.ts#L186)\n   - [lib/vscode/extensions/jake/src/main.ts#L187](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/jake/src/main.ts#L187)\n   - [lib/vscode/extensions/jake/src/main.ts#L189](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/jake/src/main.ts#L189)\n   - [lib/vscode/extensions/jake/src/main.ts#L190](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/jake/src/main.ts#L190)\n   - [lib/vscode/extensions/jake/src/main.ts#L192](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/jake/src/main.ts#L192)\n   - [lib/vscode/extensions/jake/src/main.ts#L192](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/jake/src/main.ts#L192)\n### [lib/vscode/extensions/microsoft-authentication/tsconfig.json](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L131](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L131)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L193](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L193)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L212](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L212)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L294](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L294)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L372](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L372)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L374](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L374)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L377](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L377)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L380](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L380)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L380](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L380)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L380](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L380)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L384](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L384)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L511](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L511)\n   - [lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L589](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/AADHelper.ts#L589)\n   - [lib/vscode/extensions/microsoft-authentication/src/keychain.ts#L59](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/keychain.ts#L59)\n   - [lib/vscode/extensions/microsoft-authentication/src/keychain.ts#L64](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/microsoft-authentication/src/keychain.ts#L64)\n### [lib/vscode/extensions/typescript-language-features/tsconfig.json](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/typescript-language-features/tsconfig.json)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error'.`\n   - [lib/vscode/extensions/typescript-language-features/src/tsServer/server.ts#L272](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/typescript-language-features/src/tsServer/server.ts#L272)\n   - [lib/vscode/extensions/typescript-language-features/src/tsServer/serverProcess.electron.ts#L132](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/typescript-language-features/src/tsServer/serverProcess.electron.ts#L132)\n### [lib/vscode/extensions/vscode-api-tests/tsconfig.json](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/vscode-api-tests/tsconfig.json)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'string | Error | undefined'.`\n   - [lib/vscode/extensions/vscode-api-tests/src/singlefolder-tests/workspace.fs.test.ts#L177](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/vscode-api-tests/src/singlefolder-tests/workspace.fs.test.ts#L177)\n   - [lib/vscode/extensions/vscode-api-tests/src/utils.ts#L119](https://github.com/cdr/code-server/blob/2a5f5e4e18012b7b946132ceb7b80cefa83eb037/lib/vscode/extensions/vscode-api-tests/src/utils.ts#L119)\n# [vercel/hyper](https://github.com/vercel/hyper)\n**2 of 3 projects failed to build with the old tsc**\n### [tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [app/config/init.ts#L20](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/config/init.ts#L20) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n   - [app/plugins.ts#L298](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/plugins.ts#L298) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n   - [app/plugins.ts#L299](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/plugins.ts#L299) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n   - [app/plugins.ts#L301](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/plugins.ts#L301) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n   - [app/utils/cli-install.ts#L47](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/utils/cli-install.ts#L47) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n   - [app/utils/cli-install.ts#L47](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/utils/cli-install.ts#L47) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n   - [app/utils/cli-install.ts#L49](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/utils/cli-install.ts#L49) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n   - [app/utils/cli-install.ts#L51](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/utils/cli-install.ts#L51) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n   - [app/utils/cli-install.ts#L64](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/utils/cli-install.ts#L64) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n   - [app/session.ts#L158](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/session.ts#L158) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n   - [app/session.ts#L219](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/session.ts#L219) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n   - [app/session.ts#L231](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/session.ts#L231) in [app/tsconfig.json](https://github.com/vercel/hyper/blob/e0769d6bf6163e5ea48e15f40dbe7f579f17dc3b/app/tsconfig.json)\n# [styled-components/styled-components](https://github.com/styled-components/styled-components)\n### [packages/styled-components/tsconfig.json](https://github.com/styled-components/styled-components/blob/d96101a102b59a8f9ac4b6f278594674897282bb/packages/styled-components/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [packages/styled-components/src/utils/checkDynamicCreation.ts#L45](https://github.com/styled-components/styled-components/blob/d96101a102b59a8f9ac4b6f278594674897282bb/packages/styled-components/src/utils/checkDynamicCreation.ts#L45)\n# [typeorm/typeorm](https://github.com/typeorm/typeorm)\n### [tsconfig.json](https://github.com/typeorm/typeorm/blob/2deaa0e948d7b797c0e4d3ccbc3c9c2f0f253caf/tsconfig.json)\n - `error TS2807: This syntax requires an imported helper named '__spreadArray' with 3 parameters, which is not compatible with the one in 'tslib'. Consider upgrading your version of 'tslib'.`\n   - [src/persistence/Subject.ts#L162](https://github.com/typeorm/typeorm/blob/2deaa0e948d7b797c0e4d3ccbc3c9c2f0f253caf/src/persistence/Subject.ts#L162)\n# [vuejs/vue-next](https://github.com/vuejs/vue-next)\n**1 of 3 projects failed to build with the old tsc**\n### [test-dts/tsconfig.json](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/test-dts/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [packages/compiler-core/src/transforms/transformExpression.ts#L239](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-core/src/transforms/transformExpression.ts#L239)\n   - [packages/compiler-core/src/validateExpression.ts#L49](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-core/src/validateExpression.ts#L49)\n   - [packages/compiler-sfc/src/compileScript.ts#L288](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileScript.ts#L288)\n   - [packages/compiler-sfc/src/compileScript.ts#L288](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileScript.ts#L288)\n   - [packages/compiler-sfc/src/compileScript.ts#L290](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileScript.ts#L290)\n   - [packages/compiler-sfc/src/compileScript.ts#L290](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileScript.ts#L290)\n   - [packages/sfc-playground/src/sfcCompiler.ts#L221](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/sfc-playground/src/sfcCompiler.ts#L221)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error'.`\n   - [packages/compiler-sfc/src/compileStyle.ts#L208](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileStyle.ts#L208)\n - `error TS2322: Type 'unknown' is not assignable to type 'string | CompilerError'.`\n   - [packages/compiler-sfc/src/compileTemplate.ts#L135](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileTemplate.ts#L135)\n - `error TS2322: Type '(source: string, map: RawSourceMap | undefined, options: { [key: string]: any; additionalData?: string | ((source: string, filename: string) => string) | undefined; filename: string; }, load?: ((id: string) => any) | undefined) => { ...; } | ... 1 more ... | { ...; }' is not assignable to type 'StylePreprocessor'.`\n   - [packages/compiler-sfc/src/stylePreprocessors.ts#L25](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/stylePreprocessors.ts#L25)\n   - [packages/compiler-sfc/src/stylePreprocessors.ts#L98](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/stylePreprocessors.ts#L98)\n### [tsconfig.json](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [packages/compiler-core/src/transforms/transformExpression.ts#L239](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-core/src/transforms/transformExpression.ts#L239)\n   - [packages/compiler-core/src/validateExpression.ts#L49](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-core/src/validateExpression.ts#L49)\n   - [packages/compiler-sfc/src/compileScript.ts#L288](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileScript.ts#L288)\n   - [packages/compiler-sfc/src/compileScript.ts#L288](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileScript.ts#L288)\n   - [packages/compiler-sfc/src/compileScript.ts#L290](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileScript.ts#L290)\n   - [packages/compiler-sfc/src/compileScript.ts#L290](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileScript.ts#L290)\n   - [packages/sfc-playground/src/sfcCompiler.ts#L221](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/sfc-playground/src/sfcCompiler.ts#L221)\n   - [packages/template-explorer/src/index.ts#L76](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/template-explorer/src/index.ts#L76)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error'.`\n   - [packages/compiler-sfc/src/compileStyle.ts#L208](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileStyle.ts#L208)\n - `error TS2322: Type 'unknown' is not assignable to type 'string | CompilerError'.`\n   - [packages/compiler-sfc/src/compileTemplate.ts#L135](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/compileTemplate.ts#L135)\n - `error TS2322: Type '(source: string, map: RawSourceMap | undefined, options: { [key: string]: any; additionalData?: string | ((source: string, filename: string) => string) | undefined; filename: string; }, load?: ((id: string) => any) | undefined) => { ...; } | ... 1 more ... | { ...; }' is not assignable to type 'StylePreprocessor'.`\n   - [packages/compiler-sfc/src/stylePreprocessors.ts#L25](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/stylePreprocessors.ts#L25)\n   - [packages/compiler-sfc/src/stylePreprocessors.ts#L98](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/compiler-sfc/src/stylePreprocessors.ts#L98)\n - `error TS2322: Type 'unknown' is not assignable to type 'Error | null'.`\n   - [packages/server-renderer/__tests__/render.spec.ts#L1065](https://github.com/vuejs/vue-next/blob/03e26845e2c220b1350a35179acf3435e2711282/packages/server-renderer/__tests__/render.spec.ts#L1065)\n# [balena-io/etcher](https://github.com/balena-io/etcher)\n**1 of 2 projects failed to build with the old tsc**\n### [tsconfig.webpack.json](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/tsconfig.webpack.json)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error | undefined'.`\n   - [lib/gui/app/app.ts#L339](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/gui/app/app.ts#L339)\n   - [lib/gui/app/components/source-selector/source-selector.tsx#L412](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/gui/app/components/source-selector/source-selector.tsx#L412)\n   - [lib/gui/app/components/source-selector/source-selector.tsx#L508](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/gui/app/components/source-selector/source-selector.tsx#L508)\n - `error TS2571: Object is of type 'unknown'.`\n   - [lib/gui/app/components/source-selector/source-selector.tsx#L411](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/gui/app/components/source-selector/source-selector.tsx#L411)\n   - [lib/gui/app/modules/image-writer.ts#L224](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/gui/app/modules/image-writer.ts#L224)\n   - [lib/gui/app/modules/image-writer.ts#L225](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/gui/app/modules/image-writer.ts#L225)\n   - [lib/gui/app/modules/image-writer.ts#L293](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/gui/app/modules/image-writer.ts#L293)\n   - [lib/gui/app/pages/main/Flash.tsx#L122](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/gui/app/pages/main/Flash.tsx#L122)\n   - [lib/gui/app/pages/main/Flash.tsx#L124](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/gui/app/pages/main/Flash.tsx#L124)\n   - [lib/shared/catalina-sudo/sudo.ts#L54](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/shared/catalina-sudo/sudo.ts#L54)\n   - [lib/shared/catalina-sudo/sudo.ts#L55](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/shared/catalina-sudo/sudo.ts#L55)\n   - [lib/shared/catalina-sudo/sudo.ts#L58](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/shared/catalina-sudo/sudo.ts#L58)\n   - [lib/shared/catalina-sudo/sudo.ts#L58](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/shared/catalina-sudo/sudo.ts#L58)\n   - [lib/shared/permissions.ts#L64](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/shared/permissions.ts#L64)\n   - [lib/shared/permissions.ts#L150](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/shared/permissions.ts#L150)\n   - [lib/shared/permissions.ts#L199](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/shared/permissions.ts#L199)\n   - [lib/shared/permissions.ts#L205](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/shared/permissions.ts#L205)\n   - [lib/shared/permissions.ts#L208](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/shared/permissions.ts#L208)\n   - [lib/shared/permissions.ts#L210](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/shared/permissions.ts#L210)\n   - [lib/shared/permissions.ts#L212](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/shared/permissions.ts#L212)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error'.`\n   - [lib/gui/app/pages/main/Flash.tsx#L126](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/gui/app/pages/main/Flash.tsx#L126)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error & { description?: string | undefined; report?: boolean | undefined; code?: string | undefined; syscall?: string | undefined; errno?: number | undefined; stdout?: string | undefined; stderr?: string | undefined; device?: string | undefined; }'.`\n   - [lib/gui/modules/child-writer.ts#L305](https://github.com/balena-io/etcher/blob/ccb08a48f13315de6543058d0a43d1f7b122c5be/lib/gui/modules/child-writer.ts#L305)\n# [homebridge/homebridge](https://github.com/homebridge/homebridge)\n### [tsconfig.json](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [src/bridgeService.ts#L225](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/bridgeService.ts#L225)\n   - [src/bridgeService.ts#L265](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/bridgeService.ts#L265)\n   - [src/bridgeService.ts#L306](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/bridgeService.ts#L306)\n   - [src/bridgeService.ts#L332](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/bridgeService.ts#L332)\n   - [src/bridgeService.ts#L351](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/bridgeService.ts#L351)\n   - [src/childBridgeService.ts#L416](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/childBridgeService.ts#L416)\n   - [src/pluginManager.ts#L130](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/pluginManager.ts#L130)\n   - [src/pluginManager.ts#L162](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/pluginManager.ts#L162)\n   - [src/pluginManager.ts#L323](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/pluginManager.ts#L323)\n   - [src/pluginManager.ts#L332](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/pluginManager.ts#L332)\n   - [src/pluginManager.ts#L352](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/pluginManager.ts#L352)\n   - [src/pluginManager.ts#L369](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/pluginManager.ts#L369)\n   - [src/server.ts#L290](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/server.ts#L290)\n   - [src/server.ts#L318](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/server.ts#L318)\n   - [src/server.ts#L359](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/server.ts#L359)\n   - [src/server.ts#L388](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/server.ts#L388)\n   - [src/server.ts#L416](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/server.ts#L416)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'string'.`\n   - [src/server.ts#L304](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/server.ts#L304)\n   - [src/server.ts#L402](https://github.com/homebridge/homebridge/blob/dc314195ada9ffe2bb29a130d7bbeda4d2ed8e1f/src/server.ts#L402)\n# [rome/tools](https://github.com/rome/tools)\n### [tsconfig.json](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/tsconfig.json)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error'.`\n   - [internal/binary-transport/RSERStream.ts#L71](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/binary-transport/RSERStream.ts#L71)\n   - [internal/binary-transport/RSERStream.ts#L116](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/binary-transport/RSERStream.ts#L116)\n   - [internal/binary-transport/RSERStream.ts#L153](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/binary-transport/RSERStream.ts#L153)\n   - [internal/cli-diagnostics/DiagnosticsPrinter.ts#L496](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/cli-diagnostics/DiagnosticsPrinter.ts#L496)\n   - [internal/cli-diagnostics/DiagnosticsPrinter.ts#L504](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/cli-diagnostics/DiagnosticsPrinter.ts#L504)\n   - [internal/codec-browsers/index.test.ts#L46](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/codec-browsers/index.test.ts#L46)\n   - [internal/core/client/Client.ts#L567](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/client/Client.ts#L567)\n   - [internal/core/client/Client.ts#L588](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/client/Client.ts#L588)\n   - [internal/core/client/ClientRequest.ts#L120](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/client/ClientRequest.ts#L120)\n   - [internal/core/common/FatalErrorHandler.ts#L53](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/common/FatalErrorHandler.ts#L53)\n   - [internal/core/common/IntegrationLoader.ts#L106](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/common/IntegrationLoader.ts#L106)\n   - [internal/core/server/ServerClient.ts#L200](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/server/ServerClient.ts#L200)\n   - [internal/core/server/ServerClient.ts#L329](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/server/ServerClient.ts#L329)\n   - [internal/core/server/ServerRequest.ts#L894](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/server/ServerRequest.ts#L894)\n   - [internal/core/server/bundler/Bundler.ts#L374](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/server/bundler/Bundler.ts#L374)\n   - [internal/core/server/bundler/Bundler.ts#L376](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/server/bundler/Bundler.ts#L376)\n   - [internal/core/server/testing/TestServerWorker.ts#L329](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/server/testing/TestServerWorker.ts#L329)\n   - [internal/core/server/testing/TestServerWorker.ts#L395](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/server/testing/TestServerWorker.ts#L395)\n   - [internal/core/worker/Worker.ts#L145](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/Worker.ts#L145)\n   - [internal/core/worker/test/TestAPI.ts#L715](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestAPI.ts#L715)\n   - [internal/core/worker/test/TestAPI.ts#L744](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestAPI.ts#L744)\n   - [internal/diagnostics/wrap.ts#L32](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/diagnostics/wrap.ts#L32)\n   - [internal/diagnostics/wrap.ts#L90](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/diagnostics/wrap.ts#L90)\n   - [internal/events/Bridge.ts#L461](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/events/Bridge.ts#L461)\n   - [internal/events/Bridge.ts#L668](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/events/Bridge.ts#L668)\n   - [internal/events/BridgeEvent.ts#L129](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/events/BridgeEvent.ts#L129)\n - `error TS2571: Object is of type 'unknown'.`\n   - [internal/core/client/ClientRequest.ts#L124](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/client/ClientRequest.ts#L124)\n   - [internal/core/common/FatalErrorHandler.ts#L149](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/common/FatalErrorHandler.ts#L149)\n   - [internal/core/common/IntegrationLoader.ts#L87](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/common/IntegrationLoader.ts#L87)\n   - [internal/core/server/fs/MemoryFileSystem.ts#L957](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/server/fs/MemoryFileSystem.ts#L957)\n   - [internal/core/server/fs/RecoveryStore.ts#L424](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/server/fs/RecoveryStore.ts#L424)\n   - [internal/core/server/fs/RecoveryStore.ts#L448](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/server/fs/RecoveryStore.ts#L448)\n   - [internal/core/server/lsp/protocol.ts#L161](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/server/lsp/protocol.ts#L161)\n   - [internal/core/worker/Worker.ts#L149](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/Worker.ts#L149)\n   - [internal/core/worker/test/TestAPI.ts#L721](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestAPI.ts#L721)\n   - [internal/core/worker/test/TestAPI.ts#L721](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestAPI.ts#L721)\n   - [internal/core/worker/test/TestAPI.ts#L750](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestAPI.ts#L750)\n   - [internal/core/worker/test/TestAPI.ts#L750](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestAPI.ts#L750)\n   - [internal/core/worker/test/TestAPI.ts#L774](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestAPI.ts#L774)\n   - [internal/core/worker/test/TestAPI.ts#L775](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestAPI.ts#L775)\n   - [internal/core/worker/test/TestAPI.ts#L793](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestAPI.ts#L793)\n   - [internal/core/worker/test/TestAPI.ts#L794](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestAPI.ts#L794)\n   - [internal/path/classes/AbsoluteFilePath.ts#L335](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/path/classes/AbsoluteFilePath.ts#L335)\n   - [internal/resources/index.ts#L76](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/resources/index.ts#L76)\n   - [internal/v8/error-frames.ts#L29](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/v8/error-frames.ts#L29)\n   - [public-packages/vscode-extension/index.ts#L61](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/public-packages/vscode-extension/index.ts#L61)\n   - [scripts/_utils.ts#L253](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/scripts/_utils.ts#L253)\n - `error TS2322: Type 'unknown' is not assignable to type 'Error'.`\n   - [internal/core/worker/test/TestWorkerFile.ts#L338](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestWorkerFile.ts#L338)\n   - [internal/core/worker/test/TestWorkerFile.ts#L547](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestWorkerFile.ts#L547)\n   - [internal/core/worker/test/TestWorkerFile.ts#L588](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestWorkerFile.ts#L588)\n   - [internal/core/worker/test/TestWorkerFile.ts#L634](https://github.com/rome/tools/blob/599d05dbf4f0b2e04c017e0304ac9266ac240e31/internal/core/worker/test/TestWorkerFile.ts#L634)\n# [GeekyAnts/NativeBase](https://github.com/GeekyAnts/NativeBase)\n**2 of 3 projects failed to build with the old tsc**\n### [tsconfig.json](https://github.com/GeekyAnts/NativeBase/blob/3807b60a71f8c7d1ce4dddf959e7e7c862a91aa3/tsconfig.json)\n - `error TS2698: Spread types may only be created from object types.`\n   - [src/components/primitives/Icon/Icon.tsx#L20](https://github.com/GeekyAnts/NativeBase/blob/3807b60a71f8c7d1ce4dddf959e7e7c862a91aa3/src/components/primitives/Icon/Icon.tsx#L20)\n# [sindresorhus/refined-github](https://github.com/sindresorhus/refined-github)\n### [tsconfig.json](https://github.com/sindresorhus/refined-github/blob/f908677216e84f4a238a69f0573a257945ea6a25/tsconfig.json)\n - `error TS2345: Argument of type 'Element | ChildNode' is not assignable to parameter of type 'string | Node'.`\n   - [source/helpers/dom-utils.ts#L48](https://github.com/sindresorhus/refined-github/blob/f908677216e84f4a238a69f0573a257945ea6a25/source/helpers/dom-utils.ts#L48)\n   - [source/helpers/dom-utils.ts#L53](https://github.com/sindresorhus/refined-github/blob/f908677216e84f4a238a69f0573a257945ea6a25/source/helpers/dom-utils.ts#L53)\n# [flatpickr/flatpickr](https://github.com/flatpickr/flatpickr)\n### [src/tsconfig.json](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/src/tsconfig.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [src/index.ts#L503](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/src/index.ts#L503)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error'.`\n   - [src/index.ts#L504](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/src/index.ts#L504)\n - `error TS2551: Property 'msMaxTouchPoints' does not exist on type 'Navigator'. Did you mean 'maxTouchPoints'?`\n   - [src/index.ts#L2274](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/src/index.ts#L2274)\n### [tsconfig.esm.json](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/tsconfig.esm.json)\n - `error TS2571: Object is of type 'unknown'.`\n   - [src/index.ts#L503](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/src/index.ts#L503)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error'.`\n   - [src/index.ts#L504](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/src/index.ts#L504)\n - `error TS2551: Property 'msMaxTouchPoints' does not exist on type 'Navigator'. Did you mean 'maxTouchPoints'?`\n   - [src/index.ts#L2274](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/src/index.ts#L2274)\n### [tsconfig.json](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/tsconfig.json)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'string | Error'.`\n   - [build.ts#L51](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/build.ts#L51)\n   - [build.ts#L66](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/build.ts#L66)\n   - [build.ts#L81](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/build.ts#L81)\n   - [build.ts#L129](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/build.ts#L129)\n   - [build.ts#L159](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/build.ts#L159)\n   - [build.ts#L180](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/build.ts#L180)\n - `error TS2571: Object is of type 'unknown'.`\n   - [build.ts#L52](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/build.ts#L52)\n   - [src/index.ts#L503](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/src/index.ts#L503)\n - `error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error'.`\n   - [src/index.ts#L504](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/src/index.ts#L504)\n - `error TS2551: Property 'msMaxTouchPoints' does not exist on type 'Navigator'. Did you mean 'maxTouchPoints'?`\n   - [src/index.ts#L2274](https://github.com/flatpickr/flatpickr/blob/82f80cc17c904c229faf158664fd04e563cadcad/src/index.ts#L2274)\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44976",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44976/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44976/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44976/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44976",
      "id": 941457776,
      "node_id": "MDU6SXNzdWU5NDE0NTc3NzY=",
      "number": 44976,
      "title": "should allow type predicates when `isType(badInput as any)`",
      "user": {
        "login": "bluelovers",
        "id": 167966,
        "node_id": "MDQ6VXNlcjE2Nzk2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/167966?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bluelovers",
        "html_url": "https://github.com/bluelovers",
        "followers_url": "https://api.github.com/users/bluelovers/followers",
        "following_url": "https://api.github.com/users/bluelovers/following{/other_user}",
        "gists_url": "https://api.github.com/users/bluelovers/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bluelovers/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bluelovers/subscriptions",
        "organizations_url": "https://api.github.com/users/bluelovers/orgs",
        "repos_url": "https://api.github.com/users/bluelovers/repos",
        "events_url": "https://api.github.com/users/bluelovers/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bluelovers/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 373477802,
          "node_id": "MDU6TGFiZWwzNzM0Nzc4MDI=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Awaiting%20More%20Feedback",
          "name": "Awaiting More Feedback",
          "color": "556677",
          "default": false,
          "description": "This means we'd like to hear from more people who would be helped by this feature"
        },
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-11T13:53:24Z",
      "updated_at": "2021-07-12T15:35:26Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is a crash\r\n- This changed between versions ______ and _______\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about _________\r\n- I was unable to test this on prior versions because _______\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\nhttps://www.typescriptlang.org/play?#code/LAKAZgrgdgxgLgSwPZQAQIM4EEBOOCGAngBQJQAOEcAXKvlIQNoC6qAPqlBALYBGApjgCUtMpTjoMdBi1ABvUAEgc-OBBxo4OCP1ABfUKAA2q1L3wATAJIUqtDFrIBzANyGQCMKlLY8RYubWthL4UvSEQkLySoE24gB0AFZIZMQA5GlRIAYgoAD0eagAAnAYALQITlBIKqCe3pi4BCSxwZHRIIqtCcmpGVk5QA\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\nfunction isArray(input: any[] | number): input is any[]\r\n{\r\n\treturn true\r\n}\r\n\r\nlet badInput: string;\r\n\r\nif (isArray(badInput as any))\r\n{\r\n\tbadInput.join('')\r\n}\r\n\r\n// @ts-ignore\r\nif (isArray(badInput))\r\n{\r\n\tbadInput.join('')\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n<!-- What happened, and why it was wrong -->\r\n\r\n![image](https://user-images.githubusercontent.com/167966/125197807-bcc38e80-e291-11eb-9763-db4db5e784f1.png)\r\n\r\n\r\n### üôÇ Expected behavior\r\n\r\n<!-- What you expected to happen instead, and why -->\r\n\r\nbadInput should know as array when use `as any`\r\n\r\n```ts\r\nif (isArray(badInput as any))\r\n{\r\n\tbadInput.join('')\r\n}\r\n```\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44975",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44975/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44975/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44975/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44975",
      "id": 941441533,
      "node_id": "MDU6SXNzdWU5NDE0NDE1MzM=",
      "number": 44975,
      "title": "Two way assignability condition with generic params is not working as expected",
      "user": {
        "login": "sharshuv-quotient",
        "id": 64772503,
        "node_id": "MDQ6VXNlcjY0NzcyNTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/64772503?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sharshuv-quotient",
        "html_url": "https://github.com/sharshuv-quotient",
        "followers_url": "https://api.github.com/users/sharshuv-quotient/followers",
        "following_url": "https://api.github.com/users/sharshuv-quotient/following{/other_user}",
        "gists_url": "https://api.github.com/users/sharshuv-quotient/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sharshuv-quotient/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sharshuv-quotient/subscriptions",
        "organizations_url": "https://api.github.com/users/sharshuv-quotient/orgs",
        "repos_url": "https://api.github.com/users/sharshuv-quotient/repos",
        "events_url": "https://api.github.com/users/sharshuv-quotient/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sharshuv-quotient/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2094,
        "closed_issues": 678,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T17:17:59Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-11T12:23:27Z",
      "updated_at": "2021-07-12T18:29:13Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\nassignability, ternary, conditions, generics\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is the behavior in every version I tried\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?ts=4.3.5#code/C4TwDgpgBAcgrgWwEYQE4EkBmBRAHsCAOwBMBnAHgBUAaKAVQD4oBeKSqCfIs+qAfl6cCJUm35RCiFKigAuKKWCoAloQDmchUtVqA3AChMcQgGNgygPaEomcgHEGACgCUUAN76oUE1cVRc8vDIaFh4wmT2tA4sUACMBgC+QA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\ntype NumberIfExtends<T, U> = T extends U ? U extends T ? number : string : string;\r\nfunction f<G>() {\r\n  const x: NumberIfExtends<G, G> = 1;\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n<!-- What happened, and why it was wrong -->\r\nThe value 1 is not assignable to variable x, with the following error: `Type 'number' is not assignable to type 'NumberIfExtends<G, G>'.`\r\n\r\n### üôÇ Expected behavior\r\n\r\n<!-- What you expected to happen instead, and why -->\r\nThis should be assignable, since the the value passed to both T and U generic params is the same. \r\n\r\nPlease note the following very similar examples, that works without errors. \r\nThis is to show this is a minimal reproduction, and that the different do not justify the error:\r\n```ts\r\ntype NumberIfExtends<T, U> = T extends U ? U extends T ? number : string : string;\r\nconst x: NumberIfExtends<'some type', 'some type'> = 1; // if I pass an explicit type (Not a generic)\r\n```\r\n\r\n```ts\r\ntype NumberIfExtends<T, U> = T extends U ? number : string; // if I use the condition in only one way. \r\nfunction f<G>() {\r\n  const x: NumberIfExtends<G, G> = 1;\r\n}\r\n```\r\n\r\n```ts\r\nfunction f<G>(): void {\r\n  const x: G extends G ? G extends G ? number : string : string = 1; // if I define the type without an alias. This is not always possible if instead of defining a variable I would be passing the value to a function who defines its own type\r\n}\r\n```\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44972",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44972/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44972/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44972/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44972",
      "id": 941391176,
      "node_id": "MDU6SXNzdWU5NDEzOTExNzY=",
      "number": 44972,
      "title": "Allow non-readonly properties to be used in aliased conditional expressions",
      "user": {
        "login": "brainkim",
        "id": 2996754,
        "node_id": "MDQ6VXNlcjI5OTY3NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2996754?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brainkim",
        "html_url": "https://github.com/brainkim",
        "followers_url": "https://api.github.com/users/brainkim/followers",
        "following_url": "https://api.github.com/users/brainkim/following{/other_user}",
        "gists_url": "https://api.github.com/users/brainkim/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/brainkim/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brainkim/subscriptions",
        "organizations_url": "https://api.github.com/users/brainkim/orgs",
        "repos_url": "https://api.github.com/users/brainkim/repos",
        "events_url": "https://api.github.com/users/brainkim/events{/privacy}",
        "received_events_url": "https://api.github.com/users/brainkim/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 373477802,
          "node_id": "MDU6TGFiZWwzNzM0Nzc4MDI=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Awaiting%20More%20Feedback",
          "name": "Awaiting More Feedback",
          "color": "556677",
          "default": false,
          "description": "This means we'd like to hear from more people who would be helped by this feature"
        },
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-11T07:18:29Z",
      "updated_at": "2021-07-12T18:40:04Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Suggestion\r\n\r\nMy suggestion meets these guidelines:\r\n\r\n* [x] This wouldn't be a breaking change in existing TypeScript/JavaScript code\r\n* [x] This wouldn't change the runtime behavior of existing JavaScript code\r\n* [x] This could be implemented without emitting different JS based on the types of the expressions\r\n* [x] This isn't a runtime feature (e.g. library functionality, non-ECMAScript syntax with JavaScript output, new syntax sugar for JS, etc.)\r\n* [x] This feature would agree with the rest of [TypeScript's Design Goals](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Design-Goals).\r\n\r\n## üîç Search Terms\r\n\r\naliased conditional expressions condition control flow readonly property\r\n\r\n## ‚≠ê Suggestion\r\nSome beta feedback. I was excited to try out TypeScript 4.4 because it provided [control flow analysis of aliased conditions](https://devblogs.microsoft.com/typescript/announcing-typescript-4-4-beta/#cfa-aliased-conditions) but was disappointed to learn that it only works for `readonly` properties [as mentioned in the implementation PR](https://github.com/microsoft/TypeScript/pull/44730#issuecomment-868703811). I get the justification; unfortunately, I don‚Äôt use `readonly` because I don‚Äôt think the weak immutability guarantees which the modifier provides are worth the syntax noise or annoying assignability errors.\r\n\r\n## üìÉ Motivating Example\r\nI digress. Limiting control flow analysis to readonly properties makes code like the following not work, which I would argue is somewhat surprising.\r\n\r\n```ts\r\ninterface A {\r\n  prop: string | undefined;\r\n}\r\n\r\ndeclare const a: A;\r\n// this works\r\nif (a.prop !== undefined) {\r\n\tconst b: string = a.prop;\r\n\tconsole.log(b);\r\n}\r\n\r\nconst hasProp = a.prop !== undefined;\r\n// this errors\r\nif (hasProp) {\r\n\tconst b: string = a.prop;\r\n\tconsole.log(b);\r\n}\r\n```\r\n\r\n## üíª Use Cases\r\n\r\nI just want to write code which can take advantage of aliased property checks without having to use the TypeScript‚Äôs `readonly` modifier.\r\n\r\nMaybe we could assume some basic things about JavaScript object properties for the sake of developer experience. For instance, we could assume that non-getter property test aliases are safe to use in control flow analysis so long as the property is not directly reassigned.\r\n\r\nIn any case, I think adding this caveat to blog posts and all marketing copy describing the feature would be wise, because I will likely not be the last person to be confused by this limitation, and many TypeScript features are only documented in release notes.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44970",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44970/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44970/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44970/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44970",
      "id": 941323306,
      "node_id": "MDU6SXNzdWU5NDEzMjMzMDY=",
      "number": 44970,
      "title": "Crash report",
      "user": {
        "login": "devanshj",
        "id": 30295578,
        "node_id": "MDQ6VXNlcjMwMjk1NTc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/30295578?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/devanshj",
        "html_url": "https://github.com/devanshj",
        "followers_url": "https://api.github.com/users/devanshj/followers",
        "following_url": "https://api.github.com/users/devanshj/following{/other_user}",
        "gists_url": "https://api.github.com/users/devanshj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/devanshj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/devanshj/subscriptions",
        "organizations_url": "https://api.github.com/users/devanshj/orgs",
        "repos_url": "https://api.github.com/users/devanshj/repos",
        "events_url": "https://api.github.com/users/devanshj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/devanshj/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "gabritto",
        "id": 19519347,
        "node_id": "MDQ6VXNlcjE5NTE5MzQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19519347?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gabritto",
        "html_url": "https://github.com/gabritto",
        "followers_url": "https://api.github.com/users/gabritto/followers",
        "following_url": "https://api.github.com/users/gabritto/following{/other_user}",
        "gists_url": "https://api.github.com/users/gabritto/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gabritto/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gabritto/subscriptions",
        "organizations_url": "https://api.github.com/users/gabritto/orgs",
        "repos_url": "https://api.github.com/users/gabritto/repos",
        "events_url": "https://api.github.com/users/gabritto/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gabritto/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "gabritto",
          "id": 19519347,
          "node_id": "MDQ6VXNlcjE5NTE5MzQ3",
          "avatar_url": "https://avatars.githubusercontent.com/u/19519347?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gabritto",
          "html_url": "https://github.com/gabritto",
          "followers_url": "https://api.github.com/users/gabritto/followers",
          "following_url": "https://api.github.com/users/gabritto/following{/other_user}",
          "gists_url": "https://api.github.com/users/gabritto/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gabritto/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gabritto/subscriptions",
          "organizations_url": "https://api.github.com/users/gabritto/orgs",
          "repos_url": "https://api.github.com/users/gabritto/repos",
          "events_url": "https://api.github.com/users/gabritto/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gabritto/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/144",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/144",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/144/labels",
        "id": 6812774,
        "node_id": "MDk6TWlsZXN0b25lNjgxMjc3NA==",
        "number": 144,
        "title": "TypeScript 4.4.1 (RC)",
        "description": "",
        "creator": {
          "login": "DanielRosenwasser",
          "id": 972891,
          "node_id": "MDQ6VXNlcjk3Mjg5MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/972891?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/DanielRosenwasser",
          "html_url": "https://github.com/DanielRosenwasser",
          "followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
          "following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
          "gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
          "organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
          "repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
          "events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
          "received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 315,
        "closed_issues": 21,
        "state": "open",
        "created_at": "2021-06-01T17:28:18Z",
        "updated_at": "2021-07-12T18:10:25Z",
        "due_on": "2021-08-10T07:00:00Z",
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-10T21:01:58Z",
      "updated_at": "2021-07-12T18:10:25Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n### üíª Code\r\n\r\n```sh\r\n$ git clone https://github.com/devanshj/txstate.git\r\n$ git checkout tsc-crash-1\r\n$ yarn\r\n$ yarn tsc --noEmit\r\n```\r\n\r\nYou can check the last commit that caused the crash. The change is very minimal, so it'll be easier to debug.\r\n\r\n### üôÅ Actual behavior\r\n\r\n`tsc` exited with code 1, here's the stack trace\r\n```\r\nE:\\txstate\\node_modules\\typescript\\lib\\tsc.js:92222\r\n                throw e;\r\n                ^\r\n\r\nTypeError: Cannot read property 'length' of undefined\r\n    at Object.first (E:\\txstate\\node_modules\\typescript\\lib\\tsc.js:978:31)\r\n    at addPropertyToElementList (E:\\txstate\\node_modules\\typescript\\lib\\tsc.js:41273:35)\r\n    at createTypeNodesFromResolvedType (E:\\txstate\\node_modules\\typescript\\lib\\tsc.js:41243:29)\r\n    at createTypeNodeFromObjectType (E:\\txstate\\node_modules\\typescript\\lib\\tsc.js:41067:35)\r\n    at visitAndTransformType (E:\\txstate\\node_modules\\typescript\\lib\\tsc.js:41009:34)\r\n    at createAnonymousTypeNode (E:\\txstate\\node_modules\\typescript\\lib\\tsc.js:40952:36)\r\n    at typeToTypeNodeHelper (E:\\txstate\\node_modules\\typescript\\lib\\tsc.js:40853:28)\r\n    at serializeTypeForDeclaration (E:\\txstate\\node_modules\\typescript\\lib\\tsc.js:41979:30)\r\n    at addPropertyToElementList (E:\\txstate\\node_modules\\typescript\\lib\\tsc.js:41309:59)\r\n    at createTypeNodesFromResolvedType (E:\\txstate\\node_modules\\typescript\\lib\\tsc.js:41246:25)\r\n```\r\n\r\n### üôÇ Expected behavior\r\n\r\n`tsc` should exit with code 0\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44969",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44969/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44969/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44969/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44969",
      "id": 941189314,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg3MTM4OTky",
      "number": 44969,
      "title": "align ClassStaticBlockDeclaration with IIFE in CFA",
      "user": {
        "login": "Zzzen",
        "id": 6630042,
        "node_id": "MDQ6VXNlcjY2MzAwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6630042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Zzzen",
        "html_url": "https://github.com/Zzzen",
        "followers_url": "https://api.github.com/users/Zzzen/followers",
        "following_url": "https://api.github.com/users/Zzzen/following{/other_user}",
        "gists_url": "https://api.github.com/users/Zzzen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Zzzen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Zzzen/subscriptions",
        "organizations_url": "https://api.github.com/users/Zzzen/orgs",
        "repos_url": "https://api.github.com/users/Zzzen/repos",
        "events_url": "https://api.github.com/users/Zzzen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Zzzen/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1820418576,
          "node_id": "MDU6TGFiZWwxODIwNDE4NTc2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug",
          "name": "For Milestone Bug",
          "color": "001f77",
          "default": false,
          "description": "PRs that fix a bug with a specific milestone"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-10T06:52:08Z",
      "updated_at": "2021-07-10T06:54:36Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44969",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44969",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44969.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44969.patch"
      },
      "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n-->\r\n\r\nFixes #44949\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44968",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44968/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44968/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44968/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44968",
      "id": 941162773,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg3MTE5NjE1",
      "number": 44968,
      "title": "Fix and validate post-increment/decrement in module emit",
      "user": {
        "login": "rbuckton",
        "id": 3902892,
        "node_id": "MDQ6VXNlcjM5MDI4OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3902892?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rbuckton",
        "html_url": "https://github.com/rbuckton",
        "followers_url": "https://api.github.com/users/rbuckton/followers",
        "following_url": "https://api.github.com/users/rbuckton/following{/other_user}",
        "gists_url": "https://api.github.com/users/rbuckton/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rbuckton/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rbuckton/subscriptions",
        "organizations_url": "https://api.github.com/users/rbuckton/orgs",
        "repos_url": "https://api.github.com/users/rbuckton/repos",
        "events_url": "https://api.github.com/users/rbuckton/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rbuckton/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1503029093,
          "node_id": "MDU6TGFiZWwxNTAzMDI5MDkz",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team",
          "name": "Author: Team",
          "color": "3178C6",
          "default": false,
          "description": ""
        },
        {
          "id": 1820418576,
          "node_id": "MDU6TGFiZWwxODIwNDE4NTc2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug",
          "name": "For Milestone Bug",
          "color": "001f77",
          "default": false,
          "description": "PRs that fix a bug with a specific milestone"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "rbuckton",
        "id": 3902892,
        "node_id": "MDQ6VXNlcjM5MDI4OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3902892?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rbuckton",
        "html_url": "https://github.com/rbuckton",
        "followers_url": "https://api.github.com/users/rbuckton/followers",
        "following_url": "https://api.github.com/users/rbuckton/following{/other_user}",
        "gists_url": "https://api.github.com/users/rbuckton/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rbuckton/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rbuckton/subscriptions",
        "organizations_url": "https://api.github.com/users/rbuckton/orgs",
        "repos_url": "https://api.github.com/users/rbuckton/repos",
        "events_url": "https://api.github.com/users/rbuckton/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rbuckton/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "rbuckton",
          "id": 3902892,
          "node_id": "MDQ6VXNlcjM5MDI4OTI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3902892?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rbuckton",
          "html_url": "https://github.com/rbuckton",
          "followers_url": "https://api.github.com/users/rbuckton/followers",
          "following_url": "https://api.github.com/users/rbuckton/following{/other_user}",
          "gists_url": "https://api.github.com/users/rbuckton/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rbuckton/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rbuckton/subscriptions",
          "organizations_url": "https://api.github.com/users/rbuckton/orgs",
          "repos_url": "https://api.github.com/users/rbuckton/repos",
          "events_url": "https://api.github.com/users/rbuckton/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rbuckton/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2021-07-10T03:35:57Z",
      "updated_at": "2021-07-10T18:48:19Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44968",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44968",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44968.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44968.patch"
      },
      "body": "This changes the emit for post-increment/decrement in our module emit for CommonJS, AMD, UMD, and System. This aligns with another recent change that fixed pre-/post-increment/decrement for private fields, and also ensures that pre-/post-increment/decrement work with `BigInt` values (our previous emit did not).\r\n\r\nThis also adds evaluation tests for pre-/post-increment/decrement in CommonJS and System (which required adding a mini System loader to the evaluator test framework). AMD and UMD are not included in the evaluation tests because that emit is covered by the CommonJS case.\r\n\r\nFixes #33044\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44967",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44967/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44967/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44967/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44967",
      "id": 941128362,
      "node_id": "MDU6SXNzdWU5NDExMjgzNjI=",
      "number": 44967,
      "title": "Can't use boolean as parameter for a function with overrides for parameter of type true and false",
      "user": {
        "login": "golergka",
        "id": 929735,
        "node_id": "MDQ6VXNlcjkyOTczNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/929735?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/golergka",
        "html_url": "https://github.com/golergka",
        "followers_url": "https://api.github.com/users/golergka/followers",
        "following_url": "https://api.github.com/users/golergka/following{/other_user}",
        "gists_url": "https://api.github.com/users/golergka/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/golergka/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/golergka/subscriptions",
        "organizations_url": "https://api.github.com/users/golergka/orgs",
        "repos_url": "https://api.github.com/users/golergka/repos",
        "events_url": "https://api.github.com/users/golergka/events{/privacy}",
        "received_events_url": "https://api.github.com/users/golergka/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971226,
          "node_id": "MDU6TGFiZWwxMTM5NzEyMjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Duplicate",
          "name": "Duplicate",
          "color": "f7c6c7",
          "default": false,
          "description": "An existing issue was already created"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-07-10T00:05:29Z",
      "updated_at": "2021-07-12T16:38:49Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\nFunction overloading, sum types, function parameters, type inferrence\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about function overloading and type inferrence\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABFApgZygChmADiKALmQCcQUBKYgIijJWoChRJYFl0sd8jFgBDADZpKNAcIbNw0eElQZseAsQBGcOIJT8wVRLXrUAPtXEjqiAN6NEiEiiggSSbgQB0UOAGU6OAOaYKRH40PTpyIxMhM0YAX0YpVlkODAAmANV1TW1La2QACxI4AHdEMBQSgFESQpJMajA4KEQYAFtcTRaUMFQAE2oKWPiIBAwgjI0tJABeZKg0gfksfgogA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\nfunction test(input: true): \"true\"\r\nfunction test(input: false): \"false\"\r\nfunction test(input: boolean): \"true\"|\"false\" {\r\n  return input.toString() as \"true\"|\"false\"\r\n}\r\n\r\nfunction test2(): boolean {\r\n  throw new Error(\"not implemented\")\r\n}\r\n\r\nconst a: boolean = test2()\r\ntest(a)\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n```\r\nNo overload matches this call.\r\n  Overload 1 of 2, '(input: true): \"true\"', gave the following error.\r\n    Argument of type 'boolean' is not assignable to parameter of type 'true'.\r\n  Overload 2 of 2, '(input: false): \"false\"', gave the following error.\r\n    Argument of type 'boolean' is not assignable to parameter of type 'false'.\r\n```\r\n\r\n### üôÇ Expected behavior\r\n\r\nCode compiles, `test(a)` result is inferred to be `\"true\"|\"false\"`.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44966",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44966/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44966/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44966/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44966",
      "id": 941113406,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg3MDc5ODQ1",
      "number": 44966,
      "title": "Use realpathSync.native on case-insensitive file systems",
      "user": {
        "login": "amcasey",
        "id": 10508071,
        "node_id": "MDQ6VXNlcjEwNTA4MDcx",
        "avatar_url": "https://avatars.githubusercontent.com/u/10508071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amcasey",
        "html_url": "https://github.com/amcasey",
        "followers_url": "https://api.github.com/users/amcasey/followers",
        "following_url": "https://api.github.com/users/amcasey/following{/other_user}",
        "gists_url": "https://api.github.com/users/amcasey/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/amcasey/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/amcasey/subscriptions",
        "organizations_url": "https://api.github.com/users/amcasey/orgs",
        "repos_url": "https://api.github.com/users/amcasey/repos",
        "events_url": "https://api.github.com/users/amcasey/events{/privacy}",
        "received_events_url": "https://api.github.com/users/amcasey/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1503029093,
          "node_id": "MDU6TGFiZWwxNTAzMDI5MDkz",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team",
          "name": "Author: Team",
          "color": "3178C6",
          "default": false,
          "description": ""
        },
        {
          "id": 1820418576,
          "node_id": "MDU6TGFiZWwxODIwNDE4NTc2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug",
          "name": "For Milestone Bug",
          "color": "001f77",
          "default": false,
          "description": "PRs that fix a bug with a specific milestone"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "amcasey",
        "id": 10508071,
        "node_id": "MDQ6VXNlcjEwNTA4MDcx",
        "avatar_url": "https://avatars.githubusercontent.com/u/10508071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amcasey",
        "html_url": "https://github.com/amcasey",
        "followers_url": "https://api.github.com/users/amcasey/followers",
        "following_url": "https://api.github.com/users/amcasey/following{/other_user}",
        "gists_url": "https://api.github.com/users/amcasey/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/amcasey/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/amcasey/subscriptions",
        "organizations_url": "https://api.github.com/users/amcasey/orgs",
        "repos_url": "https://api.github.com/users/amcasey/repos",
        "events_url": "https://api.github.com/users/amcasey/events{/privacy}",
        "received_events_url": "https://api.github.com/users/amcasey/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "orta",
          "id": 49038,
          "node_id": "MDQ6VXNlcjQ5MDM4",
          "avatar_url": "https://avatars.githubusercontent.com/u/49038?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/orta",
          "html_url": "https://github.com/orta",
          "followers_url": "https://api.github.com/users/orta/followers",
          "following_url": "https://api.github.com/users/orta/following{/other_user}",
          "gists_url": "https://api.github.com/users/orta/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/orta/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/orta/subscriptions",
          "organizations_url": "https://api.github.com/users/orta/orgs",
          "repos_url": "https://api.github.com/users/orta/repos",
          "events_url": "https://api.github.com/users/orta/events{/privacy}",
          "received_events_url": "https://api.github.com/users/orta/received_events",
          "type": "User",
          "site_admin": false
        },
        {
          "login": "amcasey",
          "id": 10508071,
          "node_id": "MDQ6VXNlcjEwNTA4MDcx",
          "avatar_url": "https://avatars.githubusercontent.com/u/10508071?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/amcasey",
          "html_url": "https://github.com/amcasey",
          "followers_url": "https://api.github.com/users/amcasey/followers",
          "following_url": "https://api.github.com/users/amcasey/following{/other_user}",
          "gists_url": "https://api.github.com/users/amcasey/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/amcasey/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/amcasey/subscriptions",
          "organizations_url": "https://api.github.com/users/amcasey/orgs",
          "repos_url": "https://api.github.com/users/amcasey/repos",
          "events_url": "https://api.github.com/users/amcasey/events{/privacy}",
          "received_events_url": "https://api.github.com/users/amcasey/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2021-07-09T23:08:57Z",
      "updated_at": "2021-07-09T23:53:59Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44966",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44966",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44966.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44966.patch"
      },
      "body": "...chiefly, on Windows.\r\n\r\nAfter re-reviewing all usages of realpath in the codebase, I believe there were three places where the input and output of realpath were being compared without specifically taking case into account.  Fixing the two in module resolution as a little involved, since they didn't formerly have access to the case-sensitivity flag.\r\n\r\nFixes #43105\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44965",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44965/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44965/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44965/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44965",
      "id": 941107848,
      "node_id": "MDU6SXNzdWU5NDExMDc4NDg=",
      "number": 44965,
      "title": "TypeScript doesn't show type checking error in the parameter decorator",
      "user": {
        "login": "aristocr2t",
        "id": 15344468,
        "node_id": "MDQ6VXNlcjE1MzQ0NDY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15344468?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aristocr2t",
        "html_url": "https://github.com/aristocr2t",
        "followers_url": "https://api.github.com/users/aristocr2t/followers",
        "following_url": "https://api.github.com/users/aristocr2t/following{/other_user}",
        "gists_url": "https://api.github.com/users/aristocr2t/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aristocr2t/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aristocr2t/subscriptions",
        "organizations_url": "https://api.github.com/users/aristocr2t/orgs",
        "repos_url": "https://api.github.com/users/aristocr2t/repos",
        "events_url": "https://api.github.com/users/aristocr2t/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aristocr2t/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971226,
          "node_id": "MDU6TGFiZWwxMTM5NzEyMjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Duplicate",
          "name": "Duplicate",
          "color": "f7c6c7",
          "default": false,
          "description": "An existing issue was already created"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-09T22:52:27Z",
      "updated_at": "2021-07-12T21:01:58Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\nIts very helpful feature, but it doesn't work... see Playground Link\r\n\r\n### üïó Version & Regression Information\r\n\r\nI use the latest (4.3.5) version of TypeScript.\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?#code/FAUwHgDg9gTgLgAjgTwiBAVVIAmBZEOACyhwBEQBjWAQzlgB4A1BAXgRoDtkA+NhBsAQIA8gnBwQnHAGcEAJSqwcDANIAaBAAoAbjQA2AVxAAuBEwCUbPoc4BrTlADunHuqEJV4sJOlyZcDAAlpwA5u48WhAwUPQoaGYimpw0ALamnlasfDpQQTgA3MCgkLCI1JwBCACSMgBCUFD6IFxmWGj4hCTkSjB0jABGjc1cfOxaWXwA3gC+RSXQ8EjYmNg4AAo0femSMBTUffQwzPxcvPyCwmISUrIKvSoa2gB0r1uhMmYAgpMItg7OVzuYReG5+BABYJhYE1by+O6cQypAYgGAwr5w25yM4AbQAuggAGQIKYIHHrBAhGp4swsGZEkkIZphYhmM4IGYRKIxOLYRKaOwgZBmJ4hHDgMzVX65fLzcCLcpQSqIWoAZUCIVCbTWm22hFR+1oRwYkM1Y20v1m80o+hoMjkGBAVSmHgA9K7KYgnLA7DIPAABWoNJotTgeIhcHDNYMjThaIZNMyI5GoixmGU4EkzYrCd2ehA4KBOzgAci9Ptez3Dkea6qhoS0gZkdc1EMCSaRKJgaYQGazwGzwDzQXLMF9wCDw1DWlJdjMug7Ke71izHM0JbsJYsRTVGrCM4Qc+0OkXXct9M5CA3Jc0AAZt8AgA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\nexport type TypedMethodDecorator<V = any> = <\r\n  O extends Record<K, (value: V) => unknown>,\r\n  K extends string,\r\n>(prototype: O, name: K) => void;\r\n\r\nexport const IsBoolean: TypedMethodDecorator<boolean> = () => {};\r\n\r\nexport type TypedParameterDecorator<V = any> = <\r\n  O extends Record<K, (...args: A) => unknown>,\r\n  K extends string,\r\n  I extends number,\r\n  A extends any[] & { [P in I]: V } & { length: any },\r\n>(prototype: O, key: K, index: I) => void;\r\n\r\nexport const IsString: TypedParameterDecorator<string> = () => {};\r\n\r\nclass Test {\r\n  // it works\r\n  @IsBoolean\r\n  handleBoolean(bool: number): void {}\r\n\r\n  // it doesn't work...\r\n  handleString(@IsString str: number): void {}\r\n}\r\n\r\n// it works\r\nIsBoolean({ k: (v: number) => {} }, 'k');\r\nIsString({ k: (v: number) => {} }, 'k', 0);\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nTypeScript doesn't show type checking error, when I use TypedParameterDecorator (see Code)\r\n\r\n### üôÇ Expected behavior\r\n\r\nTypeScript should show type checking error.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44964",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44964/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44964/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44964/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44964",
      "id": 940885132,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg2ODkwMDQ1",
      "number": 44964,
      "title": "Add support for raising if you set a tsconfig entry of target/module with the right setting in the root",
      "user": {
        "login": "orta",
        "id": 49038,
        "node_id": "MDQ6VXNlcjQ5MDM4",
        "avatar_url": "https://avatars.githubusercontent.com/u/49038?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/orta",
        "html_url": "https://github.com/orta",
        "followers_url": "https://api.github.com/users/orta/followers",
        "following_url": "https://api.github.com/users/orta/following{/other_user}",
        "gists_url": "https://api.github.com/users/orta/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/orta/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/orta/subscriptions",
        "organizations_url": "https://api.github.com/users/orta/orgs",
        "repos_url": "https://api.github.com/users/orta/repos",
        "events_url": "https://api.github.com/users/orta/events{/privacy}",
        "received_events_url": "https://api.github.com/users/orta/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1503029093,
          "node_id": "MDU6TGFiZWwxNTAzMDI5MDkz",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team",
          "name": "Author: Team",
          "color": "3178C6",
          "default": false,
          "description": ""
        },
        {
          "id": 1883362416,
          "node_id": "MDU6TGFiZWwxODgzMzYyNDE2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug",
          "name": "For Uncommitted Bug",
          "color": "ededed",
          "default": false,
          "description": "PR for untriaged, rejected, closed or missing bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "orta",
        "id": 49038,
        "node_id": "MDQ6VXNlcjQ5MDM4",
        "avatar_url": "https://avatars.githubusercontent.com/u/49038?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/orta",
        "html_url": "https://github.com/orta",
        "followers_url": "https://api.github.com/users/orta/followers",
        "following_url": "https://api.github.com/users/orta/following{/other_user}",
        "gists_url": "https://api.github.com/users/orta/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/orta/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/orta/subscriptions",
        "organizations_url": "https://api.github.com/users/orta/orgs",
        "repos_url": "https://api.github.com/users/orta/repos",
        "events_url": "https://api.github.com/users/orta/events{/privacy}",
        "received_events_url": "https://api.github.com/users/orta/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "orta",
          "id": 49038,
          "node_id": "MDQ6VXNlcjQ5MDM4",
          "avatar_url": "https://avatars.githubusercontent.com/u/49038?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/orta",
          "html_url": "https://github.com/orta",
          "followers_url": "https://api.github.com/users/orta/followers",
          "following_url": "https://api.github.com/users/orta/following{/other_user}",
          "gists_url": "https://api.github.com/users/orta/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/orta/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/orta/subscriptions",
          "organizations_url": "https://api.github.com/users/orta/orgs",
          "repos_url": "https://api.github.com/users/orta/repos",
          "events_url": "https://api.github.com/users/orta/events{/privacy}",
          "received_events_url": "https://api.github.com/users/orta/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-09T15:55:50Z",
      "updated_at": "2021-07-12T16:42:35Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44964",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44964",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44964.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44964.patch"
      },
      "body": "Fixes #43293 ",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44962",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44962/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44962/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44962/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44962",
      "id": 940612691,
      "node_id": "MDU6SXNzdWU5NDA2MTI2OTE=",
      "number": 44962,
      "title": "Docs: Incorrect link to d.ts declaration file in wiki doc JavaScript Language Service in Visual Studio",
      "user": {
        "login": "thernstig",
        "id": 30827238,
        "node_id": "MDQ6VXNlcjMwODI3MjM4",
        "avatar_url": "https://avatars.githubusercontent.com/u/30827238?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thernstig",
        "html_url": "https://github.com/thernstig",
        "followers_url": "https://api.github.com/users/thernstig/followers",
        "following_url": "https://api.github.com/users/thernstig/following{/other_user}",
        "gists_url": "https://api.github.com/users/thernstig/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thernstig/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thernstig/subscriptions",
        "organizations_url": "https://api.github.com/users/thernstig/orgs",
        "repos_url": "https://api.github.com/users/thernstig/repos",
        "events_url": "https://api.github.com/users/thernstig/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thernstig/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-09T09:59:15Z",
      "updated_at": "2021-07-09T09:59:15Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "https://github.com/microsoft/TypeScript/wiki/JavaScript-Language-Service-in-Visual-Studio#-intellisense-based-on-typescript-declaration-files has a link to [more info](https://github.com/Microsoft/TypeScript-Handbook/blob/master/pages/declaration%20files/Introduction.md) which is archived.\r\n\r\nIt should probably be pointed somewhere else. i am unsure where.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44961",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44961/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44961/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44961/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44961",
      "id": 940607816,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg2NjUzMTY5",
      "number": 44961,
      "title": "Avoid provide hints for binding patterns",
      "user": {
        "login": "Kingwl",
        "id": 6831019,
        "node_id": "MDQ6VXNlcjY4MzEwMTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6831019?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kingwl",
        "html_url": "https://github.com/Kingwl",
        "followers_url": "https://api.github.com/users/Kingwl/followers",
        "following_url": "https://api.github.com/users/Kingwl/following{/other_user}",
        "gists_url": "https://api.github.com/users/Kingwl/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Kingwl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Kingwl/subscriptions",
        "organizations_url": "https://api.github.com/users/Kingwl/orgs",
        "repos_url": "https://api.github.com/users/Kingwl/repos",
        "events_url": "https://api.github.com/users/Kingwl/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Kingwl/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1883362416,
          "node_id": "MDU6TGFiZWwxODgzMzYyNDE2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug",
          "name": "For Uncommitted Bug",
          "color": "ededed",
          "default": false,
          "description": "PR for untriaged, rejected, closed or missing bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-09T09:52:35Z",
      "updated_at": "2021-07-09T09:52:44Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44961",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44961",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44961.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44961.patch"
      },
      "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n-->\r\n\r\nFixes #44960 \r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44960",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44960/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44960/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44960/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44960",
      "id": 940587940,
      "node_id": "MDU6SXNzdWU5NDA1ODc5NDA=",
      "number": 44960,
      "title": "Crash in inlay hints",
      "user": {
        "login": "Kingwl",
        "id": 6831019,
        "node_id": "MDQ6VXNlcjY4MzEwMTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6831019?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kingwl",
        "html_url": "https://github.com/Kingwl",
        "followers_url": "https://api.github.com/users/Kingwl/followers",
        "following_url": "https://api.github.com/users/Kingwl/following{/other_user}",
        "gists_url": "https://api.github.com/users/Kingwl/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Kingwl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Kingwl/subscriptions",
        "organizations_url": "https://api.github.com/users/Kingwl/orgs",
        "repos_url": "https://api.github.com/users/Kingwl/repos",
        "events_url": "https://api.github.com/users/Kingwl/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Kingwl/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-09T09:25:56Z",
      "updated_at": "2021-07-09T21:26:57Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is a crash\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```\r\nCannot read property 'flags' of undefined\r\n\r\n    TypeError: Cannot read property 'flags' of undefined\r\n        at Object.getCheckFlags (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:18790:23)\r\n        at getTypeOfSymbol (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:53579:33)\r\n        at getTypeOfNode (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:81541:24)\r\n        at Object.getTypeAtLocation (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:45590:31)\r\n        at visitVariableLikeDeclaration (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:135281:47)\r\n        at visitor (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:135213:21)\r\n        at visitNodes (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29204:30)\r\n        at Object.forEachChild (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29450:24)\r\n        at visitor (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:135232:27)\r\n        at visitNode (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29195:24)\r\n        at Object.forEachChild (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29448:21)\r\n        at visitor (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:135232:27)\r\n        at visitNodes (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29204:30)\r\n        at Object.forEachChild (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29441:24)\r\n        at visitor (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:135232:27)\r\n        at visitNode (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29195:24)\r\n        at Object.forEachChild (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29325:21)\r\n        at visitor (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:135232:27)\r\n        at visitNode (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29195:24)\r\n        at Object.forEachChild (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29289:21)\r\n        at visitor (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:135232:27)\r\n        at visitNodes (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29204:30)\r\n        at Object.forEachChild (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29450:24)\r\n        at visitor (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:135232:27)\r\n        at visitNode (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29195:24)\r\n        at Object.forEachChild (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29448:21)\r\n        at visitor (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:135232:27)\r\n        at visitNodes (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29204:30)\r\n        at Object.forEachChild (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:29443:24)\r\n        at visitor (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:135232:27)\r\n        at Object.provideInlayHints (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:135189:13)\r\n        at Proxy.provideInlayHints (D:\\opensource\\TypeScript\\built\\local\\tsserver.js:155768:34)\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n<!-- What happened, and why it was wrong -->\r\n\r\n### üôÇ Expected behavior\r\n\r\n<!-- What you expected to happen instead, and why -->\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44959",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44959/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44959/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44959/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44959",
      "id": 940543257,
      "node_id": "MDU6SXNzdWU5NDA1NDMyNTc=",
      "number": 44959,
      "title": "Show code comments in union types",
      "user": {
        "login": "AlexStacker",
        "id": 7822744,
        "node_id": "MDQ6VXNlcjc4MjI3NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7822744?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AlexStacker",
        "html_url": "https://github.com/AlexStacker",
        "followers_url": "https://api.github.com/users/AlexStacker/followers",
        "following_url": "https://api.github.com/users/AlexStacker/following{/other_user}",
        "gists_url": "https://api.github.com/users/AlexStacker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AlexStacker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AlexStacker/subscriptions",
        "organizations_url": "https://api.github.com/users/AlexStacker/orgs",
        "repos_url": "https://api.github.com/users/AlexStacker/repos",
        "events_url": "https://api.github.com/users/AlexStacker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AlexStacker/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1023321108,
          "node_id": "MDU6TGFiZWwxMDIzMzIxMTA4",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Experience%20Enhancement",
          "name": "Experience Enhancement",
          "color": "556677",
          "default": false,
          "description": "Noncontroversial enhancements"
        },
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2093,
        "closed_issues": 679,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T18:02:19Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-09T08:28:32Z",
      "updated_at": "2021-07-12T20:59:29Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Suggestion\r\n\r\nWhen I use union types in Typescript, the annotations of the types are missing and cannot be given. I would like to be able to show some code its meaning with the help of annotation hints.\r\n\r\n## üîç Search Terms\r\n\r\nunion types comments\r\n\r\n## ‚úÖ Viability Checklist\r\n\r\n<!--\r\n   Suggestions that don't meet all these criteria are very, very unlikely to be accepted.\r\n   We always recommend reviewing the TypeScript design goals before investing time writing\r\n   a proposal for ideas outside the scope of the project.\r\n-->\r\nMy suggestion meets these guidelines:\r\n\r\n* [ ] This wouldn't be a breaking change in existing TypeScript/JavaScript code\r\n* [x] This wouldn't change the runtime behavior of existing JavaScript code\r\n* [ ] This could be implemented without emitting different JS based on the types of the expressions\r\n* [x] This isn't a runtime feature (e.g. library functionality, non-ECMAScript syntax with JavaScript output, new syntax sugar for JS, etc.)\r\n* [x] This feature would agree with the rest of [TypeScript's Design Goals](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Design-Goals).\r\n\r\n\r\n## ‚≠ê Suggestion\r\n![image](https://user-images.githubusercontent.com/7822744/125048204-43ca0880-e0d2-11eb-9202-1c83b4a0f356.png)\r\n\r\n[playground](https://www.typescriptlang.org/play?ts=4.3.5#code/PQKhCgAIUhBBzAppASogjgVwJYCdEAmkAogHYCGARgDaGQD2ukAcvQC5QjCThsCeAB2QB5AAoAhAAySAjABZIAXkgByMVNlyVAbnCgI0SAHFEpAoiZoseOmSq0ijFu07degkROkyArEtXq3j464O5CkADCwgAixP6BmpAAPpAJvrqh2KRsFgBm5ADGyADKAO7YbAUAFpAA3lCQ2ADOdjSEABQF9OYAXJExxACUfZT09LTkpLoAvqG0bJAAbn1lFdX+9ZCNLRRtBJ3diH1RsYN1DVv4bJi4pJD51E2Iuluz0xmLAHTNrQ7tal5ZMFBkA)\r\n\r\n## üìÉ Motivating Example\r\n\r\n<!--\r\n  If you were announcing this feature in a blog post, what's a short explanation that shows\r\n  a developer why this feature improves the language?\r\n-->\r\n\r\n## üíª Use Cases\r\n\r\n<!--\r\n  What do you want to use this for?\r\n  What shortcomings exist with current approaches?\r\n  What workarounds are you using in the meantime?\r\n-->\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44958",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44958/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44958/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44958/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44958",
      "id": 940523586,
      "node_id": "MDU6SXNzdWU5NDA1MjM1ODY=",
      "number": 44958,
      "title": "For checkJS, error when JSDoc `@see` tag text starts with `[`",
      "user": {
        "login": "jaydenseric",
        "id": 1754873,
        "node_id": "MDQ6VXNlcjE3NTQ4NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1754873?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jaydenseric",
        "html_url": "https://github.com/jaydenseric",
        "followers_url": "https://api.github.com/users/jaydenseric/followers",
        "following_url": "https://api.github.com/users/jaydenseric/following{/other_user}",
        "gists_url": "https://api.github.com/users/jaydenseric/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jaydenseric/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jaydenseric/subscriptions",
        "organizations_url": "https://api.github.com/users/jaydenseric/orgs",
        "repos_url": "https://api.github.com/users/jaydenseric/repos",
        "events_url": "https://api.github.com/users/jaydenseric/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jaydenseric/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "sandersn",
        "id": 293473,
        "node_id": "MDQ6VXNlcjI5MzQ3Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/293473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sandersn",
        "html_url": "https://github.com/sandersn",
        "followers_url": "https://api.github.com/users/sandersn/followers",
        "following_url": "https://api.github.com/users/sandersn/following{/other_user}",
        "gists_url": "https://api.github.com/users/sandersn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sandersn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sandersn/subscriptions",
        "organizations_url": "https://api.github.com/users/sandersn/orgs",
        "repos_url": "https://api.github.com/users/sandersn/repos",
        "events_url": "https://api.github.com/users/sandersn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sandersn/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "sandersn",
          "id": 293473,
          "node_id": "MDQ6VXNlcjI5MzQ3Mw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/293473?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sandersn",
          "html_url": "https://github.com/sandersn",
          "followers_url": "https://api.github.com/users/sandersn/followers",
          "following_url": "https://api.github.com/users/sandersn/following{/other_user}",
          "gists_url": "https://api.github.com/users/sandersn/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sandersn/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sandersn/subscriptions",
          "organizations_url": "https://api.github.com/users/sandersn/orgs",
          "repos_url": "https://api.github.com/users/sandersn/repos",
          "events_url": "https://api.github.com/users/sandersn/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sandersn/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/147",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/147",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/147/labels",
        "id": 6886413,
        "node_id": "MDk6TWlsZXN0b25lNjg4NjQxMw==",
        "number": 147,
        "title": "TypeScript 4.5.0",
        "description": "",
        "creator": {
          "login": "RyanCavanaugh",
          "id": 6685088,
          "node_id": "MDQ6VXNlcjY2ODUwODg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6685088?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RyanCavanaugh",
          "html_url": "https://github.com/RyanCavanaugh",
          "followers_url": "https://api.github.com/users/RyanCavanaugh/followers",
          "following_url": "https://api.github.com/users/RyanCavanaugh/following{/other_user}",
          "gists_url": "https://api.github.com/users/RyanCavanaugh/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RyanCavanaugh/subscriptions",
          "organizations_url": "https://api.github.com/users/RyanCavanaugh/orgs",
          "repos_url": "https://api.github.com/users/RyanCavanaugh/repos",
          "events_url": "https://api.github.com/users/RyanCavanaugh/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RyanCavanaugh/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 17,
        "closed_issues": 1,
        "state": "open",
        "created_at": "2021-06-24T19:57:11Z",
        "updated_at": "2021-07-13T18:01:25Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 3,
      "created_at": "2021-07-09T08:04:07Z",
      "updated_at": "2021-07-09T16:45:01Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\nIn a JS file with TS checking enabled, JSDoc `@see` tag text content that begins with `[` (e.g. when the text content is a markdown link) incorrectly results in a TS error `Identifier expected.` at the `[`.\r\n\r\n### üîé Search Terms\r\n\r\n```\r\njsdoc @see tag Identifier expected\r\n```\r\n\r\n### üïó Version & Regression Information\r\n\r\nError seen in v4.1.5 and v4.3.5; probably the bug exists in every version so far that parses JSDoc `@see` tags.\r\n\r\n### ‚èØ Playground Link\r\n\r\n```ts repro\r\n// @checkJs\r\n// @filename: a.js\r\n\r\n/**\r\n * @see [TypeScript docs](https://www.typescriptlang.org/docs).\r\n */\r\n```\r\n\r\n[Workbench Repro](https://www.typescriptlang.org/dev/bug-workbench/?checkJs=true&ts=4.3.5&ssl=6&ssc=4&pln=1&pc=1#code/PTAEAEGMAsFNINYCkDOBYAUCCAzAlgDawB2AhgLawBcopAdAFboabABUbmobEKssoANoAVAJ4AHWAGVIAJzziALqAAmAe0goAugApoixeJRUQAd3N1FE2CjkLFBUsQDmdNbOfB1mgJR0ubMBAA)\r\n\r\n### üíª Code\r\n\r\nIn `a.js`:\r\n\r\n```js\r\n// @ts-check\r\n\r\n/**\r\n * @see [TypeScript docs](https://www.typescriptlang.org/docs).\r\n */\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nTS error `Identifier expected.` at the opening `[` of the JSDoc `@see` tag markdown text.\r\n\r\n### üôÇ Expected behavior\r\n\r\nNo TS error.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44956",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44956/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44956/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44956/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44956",
      "id": 940321220,
      "node_id": "MDU6SXNzdWU5NDAzMjEyMjA=",
      "number": 44956,
      "title": "jsdoc comments - remove hyphen separator",
      "user": {
        "login": "atanasster",
        "id": 6075606,
        "node_id": "MDQ6VXNlcjYwNzU2MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6075606?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/atanasster",
        "html_url": "https://github.com/atanasster",
        "followers_url": "https://api.github.com/users/atanasster/followers",
        "following_url": "https://api.github.com/users/atanasster/following{/other_user}",
        "gists_url": "https://api.github.com/users/atanasster/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/atanasster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/atanasster/subscriptions",
        "organizations_url": "https://api.github.com/users/atanasster/orgs",
        "repos_url": "https://api.github.com/users/atanasster/repos",
        "events_url": "https://api.github.com/users/atanasster/events{/privacy}",
        "received_events_url": "https://api.github.com/users/atanasster/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1023321108,
          "node_id": "MDU6TGFiZWwxMDIzMzIxMTA4",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Experience%20Enhancement",
          "name": "Experience Enhancement",
          "color": "556677",
          "default": false,
          "description": "Noncontroversial enhancements"
        },
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2093,
        "closed_issues": 679,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T18:02:19Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-09T00:46:35Z",
      "updated_at": "2021-07-12T20:59:58Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Suggestion\r\n\r\nRemove the hypen separator from jsdoc property comments\r\n\r\nSuggested in #44932 to open this for discussion\r\n\r\nAccording to https://jsdoc.app/tags-param.html space-hyphen-space is a standard separator for the `@param` tag\r\n\r\n# Example: \r\n\r\n```\r\n**\r\n * Assign the project to an employee.\r\n * @param {string} name - The name of the assigned person\r\n */\r\nProject.prototype.assign = function(name) {\r\n    // ...\r\n};\r\n```\r\n\r\nwill parse the param comment as `- The name of the assigned person`, the suggestion is to clean up the comment to `The name of the assigned person`\r\n\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44955",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44955/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44955/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44955/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44955",
      "id": 940251552,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg2MzUxMjc1",
      "number": 44955,
      "title": "Fix JS auto import of CJS module with --module=es2015+ and allowSyntheticDefaultExports",
      "user": {
        "login": "andrewbranch",
        "id": 3277153,
        "node_id": "MDQ6VXNlcjMyNzcxNTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3277153?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewbranch",
        "html_url": "https://github.com/andrewbranch",
        "followers_url": "https://api.github.com/users/andrewbranch/followers",
        "following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewbranch/orgs",
        "repos_url": "https://api.github.com/users/andrewbranch/repos",
        "events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewbranch/received_events",
        "type": "User",
        "site_admin": true
      },
      "labels": [
        {
          "id": 1503029093,
          "node_id": "MDU6TGFiZWwxNTAzMDI5MDkz",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team",
          "name": "Author: Team",
          "color": "3178C6",
          "default": false,
          "description": ""
        },
        {
          "id": 1820418576,
          "node_id": "MDU6TGFiZWwxODIwNDE4NTc2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug",
          "name": "For Milestone Bug",
          "color": "001f77",
          "default": false,
          "description": "PRs that fix a bug with a specific milestone"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "andrewbranch",
        "id": 3277153,
        "node_id": "MDQ6VXNlcjMyNzcxNTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3277153?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewbranch",
        "html_url": "https://github.com/andrewbranch",
        "followers_url": "https://api.github.com/users/andrewbranch/followers",
        "following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewbranch/orgs",
        "repos_url": "https://api.github.com/users/andrewbranch/repos",
        "events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewbranch/received_events",
        "type": "User",
        "site_admin": true
      },
      "assignees": [
        {
          "login": "andrewbranch",
          "id": 3277153,
          "node_id": "MDQ6VXNlcjMyNzcxNTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3277153?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andrewbranch",
          "html_url": "https://github.com/andrewbranch",
          "followers_url": "https://api.github.com/users/andrewbranch/followers",
          "following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
          "gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
          "organizations_url": "https://api.github.com/users/andrewbranch/orgs",
          "repos_url": "https://api.github.com/users/andrewbranch/repos",
          "events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
          "received_events_url": "https://api.github.com/users/andrewbranch/received_events",
          "type": "User",
          "site_admin": true
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-08T21:59:11Z",
      "updated_at": "2021-07-08T21:59:33Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44955",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44955",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44955.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44955.patch"
      },
      "body": "\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n-->\r\n\r\nFixes #44825 \r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44950",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44950/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44950/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44950/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44950",
      "id": 940153224,
      "node_id": "MDU6SXNzdWU5NDAxNTMyMjQ=",
      "number": 44950,
      "title": "Convert unit tests in 'convertCompilerOptionsFromJson' to use baselines",
      "user": {
        "login": "rbuckton",
        "id": 3902892,
        "node_id": "MDQ6VXNlcjM5MDI4OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3902892?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rbuckton",
        "html_url": "https://github.com/rbuckton",
        "followers_url": "https://api.github.com/users/rbuckton/followers",
        "following_url": "https://api.github.com/users/rbuckton/following{/other_user}",
        "gists_url": "https://api.github.com/users/rbuckton/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rbuckton/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rbuckton/subscriptions",
        "organizations_url": "https://api.github.com/users/rbuckton/orgs",
        "repos_url": "https://api.github.com/users/rbuckton/repos",
        "events_url": "https://api.github.com/users/rbuckton/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rbuckton/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 294084644,
          "node_id": "MDU6TGFiZWwyOTQwODQ2NDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Infrastructure",
          "name": "Infrastructure",
          "color": "fbca04",
          "default": false,
          "description": "Issue relates to TypeScript team infrastructure"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-08T19:23:26Z",
      "updated_at": "2021-07-12T21:00:41Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "Some of the unit tests in `convertCompilerOptionsFromJson.ts` have long lines that are difficult to edit as the message text increases in size:\r\n\r\nhttps://github.com/microsoft/TypeScript/blob/2a01f923caf06b011dbd0d6b0cb1ccc0d5a0f092/src/testRunner/unittests/config/convertCompilerOptionsFromJson.ts#L298\r\n\r\nWe should consider changing these tests to use baselines/snapshots instead of inline code.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44949",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44949/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44949/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44949/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44949",
      "id": 940092864,
      "node_id": "MDU6SXNzdWU5NDAwOTI4NjQ=",
      "number": 44949,
      "title": "Statements in class static blocks do not narrow types",
      "user": {
        "login": "AumyF",
        "id": 46275902,
        "node_id": "MDQ6VXNlcjQ2Mjc1OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/46275902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AumyF",
        "html_url": "https://github.com/AumyF",
        "followers_url": "https://api.github.com/users/AumyF/followers",
        "following_url": "https://api.github.com/users/AumyF/following{/other_user}",
        "gists_url": "https://api.github.com/users/AumyF/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AumyF/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AumyF/subscriptions",
        "organizations_url": "https://api.github.com/users/AumyF/orgs",
        "repos_url": "https://api.github.com/users/AumyF/repos",
        "events_url": "https://api.github.com/users/AumyF/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AumyF/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 1452718701,
          "node_id": "MDU6TGFiZWwxNDUyNzE4NzAx",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Fix%20Available",
          "name": "Fix Available",
          "color": "bfe5bf",
          "default": false,
          "description": "A PR has been opened for this issue"
        },
        {
          "id": 117630704,
          "node_id": "MDU6TGFiZWwxMTc2MzA3MDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/help%20wanted",
          "name": "help wanted",
          "color": "05ba65",
          "default": true,
          "description": "You can do this"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/147",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/147",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/147/labels",
        "id": 6886413,
        "node_id": "MDk6TWlsZXN0b25lNjg4NjQxMw==",
        "number": 147,
        "title": "TypeScript 4.5.0",
        "description": "",
        "creator": {
          "login": "RyanCavanaugh",
          "id": 6685088,
          "node_id": "MDQ6VXNlcjY2ODUwODg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6685088?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RyanCavanaugh",
          "html_url": "https://github.com/RyanCavanaugh",
          "followers_url": "https://api.github.com/users/RyanCavanaugh/followers",
          "following_url": "https://api.github.com/users/RyanCavanaugh/following{/other_user}",
          "gists_url": "https://api.github.com/users/RyanCavanaugh/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RyanCavanaugh/subscriptions",
          "organizations_url": "https://api.github.com/users/RyanCavanaugh/orgs",
          "repos_url": "https://api.github.com/users/RyanCavanaugh/repos",
          "events_url": "https://api.github.com/users/RyanCavanaugh/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RyanCavanaugh/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 17,
        "closed_issues": 1,
        "state": "open",
        "created_at": "2021-06-24T19:57:11Z",
        "updated_at": "2021-07-13T18:01:25Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-08T17:55:08Z",
      "updated_at": "2021-07-10T06:52:13Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\ncontrol flow analysis, class static blocks\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n\r\n- v4.4.0-beta\r\n- v4.4.0-dev.20210708\r\n- This is the behavior in every version I tried, and I reviewed the [proposal](https://github.com/tc39/proposal-class-static-block/blob/main/README.md)\r\n- I was unable to test this on prior versions because class static blocks were added in 4.4.0\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?ts=4.4.0-dev.20210708#code/DYUwLgBAZg9jBcEB2BXAtgIxAJwNwFgAoIgY2AEMBnSiAYQgG8iIJKxywBLEx5l6OBAC8EAMwFCLAL5EZxeSRhJKMUADpgMAOYAKWDACUEoA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\nlet foo: number;\r\n\r\nclass C {\r\n  static {\r\n    foo = 3;\r\n  }\r\n}\r\n\r\nconsole.log(foo);\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n<!-- What happened, and why it was wrong -->\r\n\r\nAn error `Variable 'foo' is used before being assigned.(2454)` occurs at line 10, `console.log(foo)`.\r\n\r\n### üôÇ Expected behavior\r\n\r\n<!-- What you expected to happen instead, and why -->\r\n\r\nCode compiles without errors.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44947",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44947/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44947/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44947/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44947",
      "id": 940055742,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg2MTg0MDc5",
      "number": 44947,
      "title": "Check for watched directories before clearing map",
      "user": {
        "login": "andrewbranch",
        "id": 3277153,
        "node_id": "MDQ6VXNlcjMyNzcxNTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3277153?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewbranch",
        "html_url": "https://github.com/andrewbranch",
        "followers_url": "https://api.github.com/users/andrewbranch/followers",
        "following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewbranch/orgs",
        "repos_url": "https://api.github.com/users/andrewbranch/repos",
        "events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewbranch/received_events",
        "type": "User",
        "site_admin": true
      },
      "labels": [
        {
          "id": 1503029093,
          "node_id": "MDU6TGFiZWwxNTAzMDI5MDkz",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team",
          "name": "Author: Team",
          "color": "3178C6",
          "default": false,
          "description": ""
        },
        {
          "id": 1820418576,
          "node_id": "MDU6TGFiZWwxODIwNDE4NTc2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug",
          "name": "For Milestone Bug",
          "color": "001f77",
          "default": false,
          "description": "PRs that fix a bug with a specific milestone"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "andrewbranch",
        "id": 3277153,
        "node_id": "MDQ6VXNlcjMyNzcxNTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3277153?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewbranch",
        "html_url": "https://github.com/andrewbranch",
        "followers_url": "https://api.github.com/users/andrewbranch/followers",
        "following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewbranch/orgs",
        "repos_url": "https://api.github.com/users/andrewbranch/repos",
        "events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewbranch/received_events",
        "type": "User",
        "site_admin": true
      },
      "assignees": [
        {
          "login": "andrewbranch",
          "id": 3277153,
          "node_id": "MDQ6VXNlcjMyNzcxNTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3277153?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andrewbranch",
          "html_url": "https://github.com/andrewbranch",
          "followers_url": "https://api.github.com/users/andrewbranch/followers",
          "following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
          "gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
          "organizations_url": "https://api.github.com/users/andrewbranch/orgs",
          "repos_url": "https://api.github.com/users/andrewbranch/repos",
          "events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
          "received_events_url": "https://api.github.com/users/andrewbranch/received_events",
          "type": "User",
          "site_admin": true
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-08T17:02:07Z",
      "updated_at": "2021-07-08T17:02:29Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44947",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44947",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44947.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44947.patch"
      },
      "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n-->\r\n\r\nWithout any info about a repro of this crash, I‚Äôm not sure how to come up with a test for this. However, as @DanielRosenwasser pointed out, the PR where this code was added (#42929) uses defensive checks against `config.watchedDirectories` being undefined elsewhere, so perhaps this was just an oversight.\r\n\r\nFixes #44372\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44946",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44946/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44946/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44946/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44946",
      "id": 940046633,
      "node_id": "MDU6SXNzdWU5NDAwNDY2MzM=",
      "number": 44946,
      "title": "checkJs: x.js should use x.d.ts for type inference",
      "user": {
        "login": "Conaclos",
        "id": 2358560,
        "node_id": "MDQ6VXNlcjIzNTg1NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2358560?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Conaclos",
        "html_url": "https://github.com/Conaclos",
        "followers_url": "https://api.github.com/users/Conaclos/followers",
        "following_url": "https://api.github.com/users/Conaclos/following{/other_user}",
        "gists_url": "https://api.github.com/users/Conaclos/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Conaclos/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Conaclos/subscriptions",
        "organizations_url": "https://api.github.com/users/Conaclos/orgs",
        "repos_url": "https://api.github.com/users/Conaclos/repos",
        "events_url": "https://api.github.com/users/Conaclos/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Conaclos/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 373477802,
          "node_id": "MDU6TGFiZWwzNzM0Nzc4MDI=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Awaiting%20More%20Feedback",
          "name": "Awaiting More Feedback",
          "color": "556677",
          "default": false,
          "description": "This means we'd like to hear from more people who would be helped by this feature"
        },
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-08T16:49:47Z",
      "updated_at": "2021-07-13T17:09:29Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Suggestion\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n## üîç Search Terms\r\n\r\ncheckjs, declaration files\r\n\r\n## ‚úÖ Viability Checklist\r\n\r\n* [x] This wouldn't be a breaking change in existing TypeScript/JavaScript code\r\n* [x] This wouldn't change the runtime behavior of existing JavaScript code\r\n* [x] This could be implemented without emitting different JS based on the types of the expressions\r\n* [x] This isn't a runtime feature (e.g. library functionality, non-ECMAScript syntax with JavaScript output, new syntax sugar for JS, etc.)\r\n* [x] This feature would agree with the rest of [TypeScript's Design Goals](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Design-Goals).\r\n\r\n\r\n## ‚≠ê Suggestion\r\n\r\nIf a declaration file with the same name than a JavaScript file is available (in the same location), then the declaration file should be used to check the js file.\r\n\r\n## üìÉ Motivating Example\r\n\r\nAssume that \"checkJs\" and \"strict\" options are enabled.\r\n\r\nGiven the following files:\r\n```ts\r\n// @filename a.d.ts\r\nexport function f(n: number): number;\r\n```\r\n\r\n```ts\r\n// @filename a.js\r\nfunction f(a) {\r\n    // Parameter 'a' implicitly has an 'any' type\r\n    return a + 1\r\n}\r\n```\r\n\r\nthe type of `f` should be inferred and should thus type-check. TSC does not currently use `a.d.ts` to infer types of `a.js`.\r\nNote that importing `f` in another js file, already infer `f`'s type\r\n\r\n```ts\r\n// @filename b.js\r\nimport { f } from \"./a.js\"\r\n// type of f is inferred\r\n```\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44945",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44945/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44945/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44945/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44945",
      "id": 940014056,
      "node_id": "MDU6SXNzdWU5NDAwMTQwNTY=",
      "number": 44945,
      "title": "Conditional types behavior is different when referencing same type with different name",
      "user": {
        "login": "k8w",
        "id": 1681689,
        "node_id": "MDQ6VXNlcjE2ODE2ODk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1681689?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/k8w",
        "html_url": "https://github.com/k8w",
        "followers_url": "https://api.github.com/users/k8w/followers",
        "following_url": "https://api.github.com/users/k8w/following{/other_user}",
        "gists_url": "https://api.github.com/users/k8w/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/k8w/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/k8w/subscriptions",
        "organizations_url": "https://api.github.com/users/k8w/orgs",
        "repos_url": "https://api.github.com/users/k8w/repos",
        "events_url": "https://api.github.com/users/k8w/events{/privacy}",
        "received_events_url": "https://api.github.com/users/k8w/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "weswigham",
        "id": 2932786,
        "node_id": "MDQ6VXNlcjI5MzI3ODY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2932786?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/weswigham",
        "html_url": "https://github.com/weswigham",
        "followers_url": "https://api.github.com/users/weswigham/followers",
        "following_url": "https://api.github.com/users/weswigham/following{/other_user}",
        "gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
        "organizations_url": "https://api.github.com/users/weswigham/orgs",
        "repos_url": "https://api.github.com/users/weswigham/repos",
        "events_url": "https://api.github.com/users/weswigham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/weswigham/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "weswigham",
          "id": 2932786,
          "node_id": "MDQ6VXNlcjI5MzI3ODY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2932786?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/weswigham",
          "html_url": "https://github.com/weswigham",
          "followers_url": "https://api.github.com/users/weswigham/followers",
          "following_url": "https://api.github.com/users/weswigham/following{/other_user}",
          "gists_url": "https://api.github.com/users/weswigham/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/weswigham/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/weswigham/subscriptions",
          "organizations_url": "https://api.github.com/users/weswigham/orgs",
          "repos_url": "https://api.github.com/users/weswigham/repos",
          "events_url": "https://api.github.com/users/weswigham/events{/privacy}",
          "received_events_url": "https://api.github.com/users/weswigham/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/147",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/147",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/147/labels",
        "id": 6886413,
        "node_id": "MDk6TWlsZXN0b25lNjg4NjQxMw==",
        "number": 147,
        "title": "TypeScript 4.5.0",
        "description": "",
        "creator": {
          "login": "RyanCavanaugh",
          "id": 6685088,
          "node_id": "MDQ6VXNlcjY2ODUwODg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6685088?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RyanCavanaugh",
          "html_url": "https://github.com/RyanCavanaugh",
          "followers_url": "https://api.github.com/users/RyanCavanaugh/followers",
          "following_url": "https://api.github.com/users/RyanCavanaugh/following{/other_user}",
          "gists_url": "https://api.github.com/users/RyanCavanaugh/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RyanCavanaugh/subscriptions",
          "organizations_url": "https://api.github.com/users/RyanCavanaugh/orgs",
          "repos_url": "https://api.github.com/users/RyanCavanaugh/repos",
          "events_url": "https://api.github.com/users/RyanCavanaugh/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RyanCavanaugh/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 17,
        "closed_issues": 1,
        "state": "open",
        "created_at": "2021-06-24T19:57:11Z",
        "updated_at": "2021-07-13T18:01:25Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-08T16:08:27Z",
      "updated_at": "2021-07-08T17:14:31Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\nconditional types different name \r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\n### üïó Version & Regression Information\r\nv4.4.0-beta\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about *conditional types*\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?ts=4.4.0-beta#code/C4TwDgpgBAMhBmwA8AtAfFAvFJAVNAFAJRYYG5QQAewEAdgCYDOUKUA-FAIxQBcUAJiIBuAFChIUAEoBLAOYALZOiw58xUlHKUa9Zqw7c+gkaPHhoAUQCOAVwCGAGy5IAGgBooATQzY4iNwxqWkYWWUVkH0NgACdbaH54JyYIMQkrOycBN08ovwRkVyDdUNgCpCjOWPjjJMcUsVEAeiaoOpTzSVcebBsHZyQAb3teJliZOjkAX09BmIh7BgB7OkcQKBGoMZiJ6bRm1uqITuhXAVU+rKGR7d2ZqDmF5dX1zdvJqbQgA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\ntype Left<Z> = <T>() => (T extends Z ? 1 : 2);\r\ntype Right<Z> = <T>() => (T extends Z ? 1 : 2);\r\n\r\ntype Equal1<X, Y> = Left<X> extends Right<Y> ? true : false;\r\ntype Equal2<X, Y> = Left<X> extends Left<Y> ? true : false;\r\n\r\n// false\r\ntype X1 = Equal1<{a:string}, {readonly a: string}>\r\n// true\r\ntype X2 = Equal2<{a:string}, {readonly a: string}>\r\n```\r\n\r\n### üôÅ Actual behavior\r\n \r\n`X1` and `X2` is different.\r\n\r\n### üôÇ Expected behavior\r\n\r\n`X1` and `X2` is the same.\r\n\r\nActually, `Left` and `Right` are the same, `Equal1` and `Equal2` are the same.\r\nBut the result of `Equal1` and `Equal2` with the same parameters are different.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44943",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44943/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44943/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44943/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44943",
      "id": 939864338,
      "node_id": "MDU6SXNzdWU5Mzk4NjQzMzg=",
      "number": 44943,
      "title": "\"Extract to method in class\" in angular template not working correctly",
      "user": {
        "login": "stefanrybacki",
        "id": 29799350,
        "node_id": "MDQ6VXNlcjI5Nzk5MzUw",
        "avatar_url": "https://avatars.githubusercontent.com/u/29799350?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stefanrybacki",
        "html_url": "https://github.com/stefanrybacki",
        "followers_url": "https://api.github.com/users/stefanrybacki/followers",
        "following_url": "https://api.github.com/users/stefanrybacki/following{/other_user}",
        "gists_url": "https://api.github.com/users/stefanrybacki/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/stefanrybacki/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/stefanrybacki/subscriptions",
        "organizations_url": "https://api.github.com/users/stefanrybacki/orgs",
        "repos_url": "https://api.github.com/users/stefanrybacki/repos",
        "events_url": "https://api.github.com/users/stefanrybacki/events{/privacy}",
        "received_events_url": "https://api.github.com/users/stefanrybacki/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971304,
          "node_id": "MDU6TGFiZWwxMTM5NzEzMDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Needs%20More%20Info",
          "name": "Needs More Info",
          "color": "556b75",
          "default": false,
          "description": "The issue still hasn't been fully clarified"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-08T13:31:52Z",
      "updated_at": "2021-07-12T19:50:43Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Also see: \r\nhttps://github.com/angular/vscode-ng-language-service/issues/533\r\nhttps://github.com/microsoft/vscode-typescript-next/issues/18\r\n\r\n**Describe the bug**\r\n\r\n\"Extract to method in class\" ability doesn't seem to behave correctly on a inline template function call. In below\r\n\r\n**To Reproduce**\r\n\r\nsee GIF for clear reproduction. the inline template is missing the function addChildElement and is listed correctly. Using the autosuggested 'extract method' call in context menu removes the whole template properly and swaps it with a templateURL one, with a weird function call.\r\n\r\n![image](https://user-images.githubusercontent.com/9585787/71540948-89116400-298c-11ea-918f-641ecfa621b0.gif)\r\n\r\n**Expected**\r\n\r\nA correctly named method in the class is generated and the template stays untouched.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44942",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44942/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44942/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44942/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44942",
      "id": 939800572,
      "node_id": "MDU6SXNzdWU5Mzk4MDA1NzI=",
      "number": 44942,
      "title": "Missing excess property errors when assigning to intersection",
      "user": {
        "login": "OliverJAsh",
        "id": 921609,
        "node_id": "MDQ6VXNlcjkyMTYwOQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/921609?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/OliverJAsh",
        "html_url": "https://github.com/OliverJAsh",
        "followers_url": "https://api.github.com/users/OliverJAsh/followers",
        "following_url": "https://api.github.com/users/OliverJAsh/following{/other_user}",
        "gists_url": "https://api.github.com/users/OliverJAsh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/OliverJAsh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/OliverJAsh/subscriptions",
        "organizations_url": "https://api.github.com/users/OliverJAsh/orgs",
        "repos_url": "https://api.github.com/users/OliverJAsh/repos",
        "events_url": "https://api.github.com/users/OliverJAsh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/OliverJAsh/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2093,
        "closed_issues": 679,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-07-13T18:02:19Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-08T12:19:43Z",
      "updated_at": "2021-07-12T19:49:53Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about excess property checking\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?ts=4.3.5#code/C4TwDgpgBACgTgezAZygXigbygMwQgLimWDgEsA7AcygF8BuAKEdEigBEIBbBdLRqIKhhEKIvCTImtKADJ+Q4aOTjl0pi3DQAwggA2eiAGNgZBBT6YBQgCbdCHe9LkLb9opx7rmR8ySjAAIxEugbGpuaW1oJ2PERWiooikvHRiYp4DgDkmVkANGnpggBGAIZwRIF5UAD0NVAQAB6QJhA2DXCIcFA2AK7QwLxNRhDIqMlg1cW9wFBUCLMU5hCFQrQFiuuMDEA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\ntype Props = { foo: string };\r\n\r\ntype Demo = {\r\n    props: Props;\r\n} & {\r\n    props: Props;\r\n};\r\n\r\ntype Collection = {\r\n    demo: Demo;\r\n} & {\r\n    demo: Demo;\r\n};\r\n\r\nconst t1: Collection = {\r\n    demo: {\r\n        props: {\r\n            foo: 'foo',\r\n            bar: 1, // expected error due to excess prop, but got none ‚ùå\r\n        },\r\n    },\r\n};\r\n```\r\n\r\nIf we remove one of the intersections, excess property checks kick in again.\r\n\r\nThis is clearly a contrived example however I have reduced it from a much more complicated example where we do actually need to use intersections in a similar way. I can elaborate if needed.\r\n\r\nI have been able to workaround the issue using this `Compact` helper:\r\n\r\n```ts\r\ntype Compact<A> = A extends Function ? A : { [K in keyof A]: A[K] } & {};\r\n\r\ntype Collection = Compact<{\r\n    demo: Demo;\r\n} & {\r\n    demo: Demo;\r\n}>;\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nSee comment in code above.\r\n\r\n### üôÇ Expected behavior\r\n\r\nSee comment in code above.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44953",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44953/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44953/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44953/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44953",
      "id": 940194153,
      "node_id": "MDU6SXNzdWU5NDAxOTQxNTM=",
      "number": 44953,
      "title": "TS Server fatal error:  Cannot read property 'lastIndexOf' of undefined",
      "user": {
        "login": "JakeTompkins",
        "id": 36250865,
        "node_id": "MDQ6VXNlcjM2MjUwODY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/36250865?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JakeTompkins",
        "html_url": "https://github.com/JakeTompkins",
        "followers_url": "https://api.github.com/users/JakeTompkins/followers",
        "following_url": "https://api.github.com/users/JakeTompkins/following{/other_user}",
        "gists_url": "https://api.github.com/users/JakeTompkins/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JakeTompkins/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JakeTompkins/subscriptions",
        "organizations_url": "https://api.github.com/users/JakeTompkins/orgs",
        "repos_url": "https://api.github.com/users/JakeTompkins/repos",
        "events_url": "https://api.github.com/users/JakeTompkins/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JakeTompkins/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-07-08T06:54:14Z",
      "updated_at": "2021-07-08T22:50:22Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "\nIssue Type: <b>Bug</b>\n\n‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è Please fill in the sections below to help us diagnose the issue ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è\n\n**TypeScript Version:** 4.4.0-dev.20210707\n\n**Steps to reproduce crash**\n1. I just opended the project\n2.\n3.\n\n**TS Server Log**\n‚ùóÔ∏è Please review and upload this log file to help us diagnose this crash:\n`/Users/jake/Library/Application Support/Code/logs/20210627T002751/exthost17/vscode.typescript-language-features/tsserver-log-jDF14S/tsserver.log`\nThe log file may contain personal data, including full paths and source code from your workspace. You can scrub the log file to remove paths or other personal information.\n\n\n**TS Server Error Stack**\nServer: `semantic`\n```\nTypeError: Cannot read property 'lastIndexOf' of undefined\n    at Object.startsWith (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:2064:20)\n    at isNodeModulesOrScopedPackageDirectory (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:19667:65)\n    at guessDirectorySymlink (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:19655:17)\n    at processResolution (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:19644:22)\n    at /Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:19635:162\n    at Map.forEach (<anonymous>)\n    at Object.setSymlinksFromResolutions (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:19635:123)\n    at ConfiguredProject.Project.getSymlinkCache (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:160332:35)\n    at Object.getSymlinkCache (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:113527:29)\n    at Object.host.compilerHost.realpath (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:113592:36)\n    at realPath (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:41457:42)\n    at Object.resolveTypeReferenceDirective (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:40825:74)\n    at /Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:161687:112\n    at Object.map (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:455:29)\n    at Function.AutoImportProviderProject.getRootFileNames (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:161687:42)\n    at Function.AutoImportProviderProject.create (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:161720:38)\n    at ConfiguredProject.Project.getPackageJsonAutoImportProvider (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:161525:77)\n    at ConfiguredProject.Project.updateGraph (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:160948:26)\n    at ConfiguredProject.updateGraph (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:161889:63)\n    at ProjectService.createLoadAndUpdateConfiguredProject (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:163613:25)\n    at ProjectService.assignProjectToOpenedScriptInfo (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:164694:44)\n    at /Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:165034:97\n    at Object.flatMap (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:519:25)\n    at ProjectService.applyChangesInOpenFiles (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:165034:41)\n    at Session.handlers.ts.Map.ts.getEntries._a.<computed> (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:166194:46)\n    at /Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:168121:88\n    at IOSession.Session.executeWithRequestId (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:168112:28)\n    at IOSession.Session.executeCommand (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:168121:33)\n    at IOSession.Session.onMessage (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:168147:35)\n    at Interface.<anonymous> (/Users/jake/.vscode-insiders/extensions/ms-vscode.vscode-typescript-next-4.4.20210707/node_modules/typescript/lib/tsserver.js:170746:31)\n    at Interface.emit (events.js:315:20)\n    at Interface._onLine (readline.js:337:10)\n    at Interface._normalWrite (readline.js:482:12)\n    at Socket.ondata (readline.js:194:10)\n    at Socket.emit (events.js:315:20)\n    at addChunk (internal/streams/readable.js:309:12)\n    at readableAddChunk (internal/streams/readable.js:284:9)\n    at Socket.Readable.push (internal/streams/readable.js:223:10)\n    at Pipe.onStreamRead (internal/stream_base_commons.js:188:23)\n```\n\nVS Code version: Code 1.57.1 (507ce72a4466fbb27b715c3722558bb15afa9f48, 2021-06-17T13:28:32.912Z)\nOS version: Darwin x64 20.5.0\nRestricted Mode: No\n\n<details>\n<summary>System Info</summary>\n\n|Item|Value|\n|---|---|\n|CPUs|Intel(R) Core(TM) i5-1038NG7 CPU @ 2.00GHz (8 x 2000)|\n|GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\n|Load (avg)|6, 5, 4|\n|Memory (System)|16.00GB (0.48GB free)|\n|Process Argv|. --crash-reporter-id 18502848-7f0c-420a-ac31-a1e1385e09ba|\n|Screen Reader|no|\n|VM|0%|\n</details><details><summary>Extensions (87)</summary>\n\nExtension|Author (truncated)|Version\n---|---|---\nbetter-comments|aar|2.1.0\nvscode-javascript-repl|ach|0.7.2\nBookmarks|ale|13.1.0\njest-snippets|and|1.8.0\nvscode-apollo|apo|1.19.3\nemojisense|bie|0.8.0\nmarkdown-checkbox|bie|0.1.3\nvscode-tailwindcss|bra|0.6.13\npgformatter|bra|1.17.0\nmulti-cursor-case-preserve|Car|1.0.5\nnpm-intellisense|chr|1.3.1\npath-intellisense|chr|2.3.0\ncodeswing|cod|0.0.19\ngitignore|cod|0.7.0\nbracket-pair-colorizer-2|Coe|0.2.1\nvscode-eslint|dba|2.1.23\nes7-react-js-snippets|dsz|3.1.1\ndocthis-customize-tags|dwe|0.4.5\ngitlens|eam|11.5.1\nvscode-npm-script|eg2|0.3.22\nvscode-great-icons|emm|2.1.79\nmoxer-icons|Equ|5.8.0\nvsc-material-theme-icons|equ|1.2.2\nprettier-vscode|esb|8.0.1\ncode-runner|for|0.11.4\nvscode-pull-request-github|Git|0.27.1\nruby|gro|0.1.0\ntodo-tree|Gru|0.0.213\nruby-linter|hoo|1.0.0\nrest-client|hum|0.24.5\noutput-colorizer|IBM|0.1.2\nmonkey-patch|ioc|0.1.15\nvscode-essentials|jab|1.5.0\nsearch-editor-apply-changes|jak|0.1.1\nvscode-edit-csv|jan|0.6.0\nrainbow-end|jdu|0.7.8\nvscode-peacock|joh|3.9.1\nsublime-babel-vscode|jos|0.2.10\nchat|kar|0.35.0\nsequelize-vscode-association-snippet|lou|0.0.2\nvscode-language-babel|mgm|0.0.31\ndotenv|mik|1.0.1\nruby-rubocop|mis|0.8.5\nHTMLHint|mka|0.10.0\nprettify-json|moh|0.0.3\nvscode-postgresql|ms-|0.3.0\npython|ms-|2021.6.944021595\nvscode-pylance|ms-|2021.7.2\njupyter|ms-|2021.6.999662501\nremote-containers|ms-|0.183.0\nremote-ssh|ms-|0.65.7\nremote-ssh-edit|ms-|0.65.7\nremote-wsl|ms-|0.56.5\nvscode-remote-extensionpack|ms-|0.21.0\ncpptools|ms-|1.4.1\njs-debug-nightly|ms-|2021.6.1117\ntypescript-javascript-grammar|ms-|0.0.55\nvscode-typescript-next|ms-|4.4.20210707\nvsliveshare|ms-|1.0.4531\nvsliveshare-audio|ms-|0.1.91\ndebugger-for-chrome|msj|4.12.12\ncolor-highlight|nau|2.3.0\nvscode-javascript-comment|Nic|0.0.7\nleaper|Onl|0.6.0\nmaterial-icon-theme|PKi|4.8.0\npolacode|pnp|0.3.4\nsubtle-brackets|raf|3.0.0\nvscode-commons|red|0.0.6\nvscode-xml|red|0.17.0\nvscode-yaml|red|0.20.0\nLiveServer|rit|5.6.1\nrust|rus|0.7.8\npartial-diff|ryu|1.4.3\nvscode-sql-beautify|sen|0.0.4\ntrailing-spaces|sha|0.3.1\nvscode-smoothtype|spi|1.2.0\nrewrap|stk|1.14.0\nhyper-javascript-snippets|t7y|3.2.1\nvscode-status-bar-format-toggle|tom|2.0.0\nlodash-snippets|tom|1.0.0\nvscodeintellicode|Vis|1.2.14\ncodetour|vsl|0.0.56\ngistfs|vsl|0.3.0\nvscode-ruby|win|0.28.0\nJavaScriptSnippets|xab|1.8.0\nvscode-surround|yat|1.1.2\nmarkdown-all-in-one|yzh|3.4.0\n\n(17 theme extensions excluded)\n\n</details><details>\n<summary>A/B Experiments</summary>\n\n```\nvsliv368cf:30146710\nvsreu685:30147344\npython383cf:30185419\npythonvspyt602:30300191\nvspor879:30202332\nvspor708:30202333\nvspor363:30204092\npythonvspyt639:30300192\npythontb:30283811\npythonvspyt551:30311712\nvspre833:30321513\npythonptprofiler:30281270\nvshan820:30294714\npythondataviewer:30285071\nvscus158:30321503\npythonvsuse255:30323308\nvscorehov:30309549\nvscod805:30301674\npythonvspyt200:30331937\nvscextlangct:30333562\nbinariesv615:30325510\n\n```\n\n</details>\n\n<!-- generated by issue reporter -->",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44939",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44939/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44939/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44939/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44939",
      "id": 939407087,
      "node_id": "MDU6SXNzdWU5Mzk0MDcwODc=",
      "number": 44939,
      "title": "Dynamically named tuples",
      "user": {
        "login": "cursorsdottsx",
        "id": 65373746,
        "node_id": "MDQ6VXNlcjY1MzczNzQ2",
        "avatar_url": "https://avatars.githubusercontent.com/u/65373746?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cursorsdottsx",
        "html_url": "https://github.com/cursorsdottsx",
        "followers_url": "https://api.github.com/users/cursorsdottsx/followers",
        "following_url": "https://api.github.com/users/cursorsdottsx/following{/other_user}",
        "gists_url": "https://api.github.com/users/cursorsdottsx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cursorsdottsx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cursorsdottsx/subscriptions",
        "organizations_url": "https://api.github.com/users/cursorsdottsx/orgs",
        "repos_url": "https://api.github.com/users/cursorsdottsx/repos",
        "events_url": "https://api.github.com/users/cursorsdottsx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cursorsdottsx/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 373477802,
          "node_id": "MDU6TGFiZWwzNzM0Nzc4MDI=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Awaiting%20More%20Feedback",
          "name": "Awaiting More Feedback",
          "color": "556677",
          "default": false,
          "description": "This means we'd like to hear from more people who would be helped by this feature"
        },
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-08T02:27:50Z",
      "updated_at": "2021-07-11T19:17:59Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Suggestion\r\n\r\nTypeScript's type system is extremely expansive and powerful, but one thing that I cannot seem to do is give tuples dynamic names. Eg:\r\n\r\n```ts\r\ntype Test00 = [[\"name\"]: number];\r\n```\r\n\r\nOr even:\r\n\r\n```ts\r\ntype Test01 = [`name`: number];\r\n```\r\n\r\nJust like objects, we should be able to use bracket syntax to indicate that the expression inside should be used as the name.\r\n\r\nWe can then proceed to use other types to \"calculate\" the names.\r\n\r\n## üîç Search Terms\r\n\r\n- tuple names\r\n- dynamic tuple names\r\n- changing tuple names\r\n- editing tuple names\r\n- calculated tuple names\r\n\r\n## ‚úÖ Viability Checklist\r\n\r\nMy suggestion meets these guidelines:\r\n\r\n* [x] This wouldn't be a breaking change in existing TypeScript/JavaScript code\r\n* [x] This wouldn't change the runtime behavior of existing JavaScript code\r\n* [x] This could be implemented without emitting different JS based on the types of the expressions\r\n* [x] This isn't a runtime feature (e.g. library functionality, non-ECMAScript syntax with JavaScript output, new syntax sugar for JS, etc.)\r\n* [x] This feature would agree with the rest of [TypeScript's Design Goals](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Design-Goals).\r\n\r\n*I believe this one meets the last guideline because of goals 2 and 4.*\r\n\r\n## ‚≠ê Suggestion\r\n\r\nDynamically/calculated/inserted tuple names instead of static ones.\r\n\r\n## üìÉ Motivating Example\r\n\r\nConsider the following example (ripped from a project of mine):\r\n\r\n```ts\r\ntype Components = -1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26;\r\n\r\ntype Decrement<X extends number> = [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][X];\r\n\r\ntype CreateArray<T, L extends number> = L extends -1 ? [] : [T, ...CreateArray<T, Decrement<L>>];\r\n\r\ntype CanonicalAxisNames = [\"\", \"x\", \"y\", \"z\", \"w\", \"v\", \"u\", \"t\", \"s\", \"r\", \"q\", \"p\", \"o\", \"n\", \"m\", \"l\", \"k\", \"j\", \"i\", \"h\", \"g\", \"f\", \"e\", \"d\", \"c\", \"b\", \"a\"];\r\n\r\ntype GetCanonicalAxisNames<C extends Components, R extends string[] = []> = C extends 0 | -1 ? R : GetCanonicalAxisNames<Decrement<C>, [CanonicalAxisNames[C], ...R]>;\r\n\r\ntype CreateVector<C extends Components> = {\r\n    new (): VectorStruct<C>;\r\n};\r\n\r\ntype VectorStruct<C extends Components> = {\r\n    add(vector: VectorStruct<C>): VectorStruct<C>;\r\n    add(...components: CreateArray<number, Decrement<C>>): VectorStruct<C>;\r\n    add(scalar: number): VectorStruct<C>;\r\n} & {\r\n    [N in GetCanonicalAxisNames<C>[number]]: number;\r\n}\r\n\r\ndeclare function createVector<C extends Exclude<Components, -1 | 0>>(components: C): CreateVector<C>;\r\n\r\nconst Vector = createVector(3);\r\n\r\nconst v = new Vector();\r\n\r\nv.add(0, 0, 0); // arguments are listed as components_0, components_1, and components_2\r\n```\r\n\r\nInstead of boring, bland names, I could use this new feature to give them more descriptive/detailed names.\r\nNames are important because they describe the object in as few words as possible.\r\n`components_0` simply does not convey the same idea as `x`.\r\n\r\nSuppose I create a type `InsertTupleNames` to create a tuple whose names are calculated, then I could use:\r\n\r\n```ts\r\nadd(...components: InsertTupleNames<CreateArray<number, Decrement<C>>>): VectorStruct<C>;\r\n```\r\n\r\nWhich means, the parameters are now named the correct names, and they make more sense to the end user.\r\n\r\nCurrently, I have to settle for a massive tuple containing all possible lists of parameter names, which is not ideal or maintainable.\r\n\r\n## üíª Use Cases\r\n\r\nIt would make more complex types/functions more readable/usable.\r\n\r\nI think this example I have shown demonstrates that TypeScript's type system is extremely powerful, and so powerful that we can already create standalone types based on another one (aka `CreateVector` creates `VectorStruct<...>` and `VectorStruct` is a standalone type, functional, and solely created from `CreateVector`).\r\n\r\nIf we had this then we could make spread parameters and the outputted JavaScript easier to read with higher legibility.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44938",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44938/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44938/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44938/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44938",
      "id": 939397032,
      "node_id": "MDU6SXNzdWU5MzkzOTcwMzI=",
      "number": 44938,
      "title": "Unable to override a getter when inheriting from a mixin class",
      "user": {
        "login": "whzx5byb",
        "id": 6128692,
        "node_id": "MDQ6VXNlcjYxMjg2OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6128692?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whzx5byb",
        "html_url": "https://github.com/whzx5byb",
        "followers_url": "https://api.github.com/users/whzx5byb/followers",
        "following_url": "https://api.github.com/users/whzx5byb/following{/other_user}",
        "gists_url": "https://api.github.com/users/whzx5byb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/whzx5byb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/whzx5byb/subscriptions",
        "organizations_url": "https://api.github.com/users/whzx5byb/orgs",
        "repos_url": "https://api.github.com/users/whzx5byb/repos",
        "events_url": "https://api.github.com/users/whzx5byb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/whzx5byb/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-08T02:04:13Z",
      "updated_at": "2021-07-08T02:04:13Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\nmixin getter override\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is the behavior in every version I tried\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?#code/MYGwhgzhAECC0G8CwAoa7rAPYDsIBcAnAV2Hy0IAoA6WsQgcwgC5owcBPAbQF0BKRAF9UGaAwCm+aAFsOAOTDTxlPqwKEAljgaJoI0RkKTihHNADkscwG49aDMJSPUAM2I4yG3NACyGgB5aADwAKtDi-vjiOAAmMPgcAA7iWC5wAHyUAMrEyYSsIQLI9uhG+CZmoJAwAELhkdFx0Dl5iPoGYpIy8orKqtDqWjrFHR1lFRY1Nu0GjqKOzihVUNAAwvVRsTB+gTiUsEUzElKyCkoqakRDujOi46YWq+Z286iLAG70mNAAvNA44gA7msVNZUNg8FgQOJqCAsAxKMBqKdenxbAB6dHQQEaEAgaCJTQ4KTmJ5sGARZJkcQxaD4AAWWGIDHpQA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\nclass A {\r\n    constructor(...args: any[]) {}\r\n    get myName(): string { \r\n        return 'A'; \r\n    }\r\n}\r\n\r\nfunction Mixin<T extends typeof A>(Super: T) {\r\n    return class B extends Super {\r\n        get myName(): string {\r\n            return 'B';\r\n        }\r\n    }\r\n}\r\n\r\nclass C extends Mixin(A) {\r\n    get myName(): string { \r\n    // Unexpected Error:\r\n    // 'myName' is defined as a property in class 'Mixin<typeof A>.B & A', but is overridden here in 'C' as an accessor.\r\n        return 'C' \r\n    }\r\n}\r\n\r\nvar c = new C();\r\nconsole.log(c.myName); // will print 'C' as expected though\r\n\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nError in `get myName()` of class C:\r\n`'myName' is defined as a property in class 'Mixin<typeof A>.B & A', but is overridden here in 'C' as an accessor.` \r\n\r\nIt is obviously incorrect because `myName` is defined as a getter (NOT a property) in either A or B.\r\n\r\n### üôÇ Expected behavior\r\n\r\nNo error. \r\n\r\n<!-- What you expected to happen instead, and why -->\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44936",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44936/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44936/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44936/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44936",
      "id": 939355107,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg1NTkwODA5",
      "number": 44936,
      "title": "Fix symbol display exception when handling incomplete class",
      "user": {
        "login": "amcasey",
        "id": 10508071,
        "node_id": "MDQ6VXNlcjEwNTA4MDcx",
        "avatar_url": "https://avatars.githubusercontent.com/u/10508071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amcasey",
        "html_url": "https://github.com/amcasey",
        "followers_url": "https://api.github.com/users/amcasey/followers",
        "following_url": "https://api.github.com/users/amcasey/following{/other_user}",
        "gists_url": "https://api.github.com/users/amcasey/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/amcasey/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/amcasey/subscriptions",
        "organizations_url": "https://api.github.com/users/amcasey/orgs",
        "repos_url": "https://api.github.com/users/amcasey/repos",
        "events_url": "https://api.github.com/users/amcasey/events{/privacy}",
        "received_events_url": "https://api.github.com/users/amcasey/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1503029093,
          "node_id": "MDU6TGFiZWwxNTAzMDI5MDkz",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team",
          "name": "Author: Team",
          "color": "3178C6",
          "default": false,
          "description": ""
        },
        {
          "id": 1883362416,
          "node_id": "MDU6TGFiZWwxODgzMzYyNDE2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug",
          "name": "For Uncommitted Bug",
          "color": "ededed",
          "default": false,
          "description": "PR for untriaged, rejected, closed or missing bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "amcasey",
        "id": 10508071,
        "node_id": "MDQ6VXNlcjEwNTA4MDcx",
        "avatar_url": "https://avatars.githubusercontent.com/u/10508071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amcasey",
        "html_url": "https://github.com/amcasey",
        "followers_url": "https://api.github.com/users/amcasey/followers",
        "following_url": "https://api.github.com/users/amcasey/following{/other_user}",
        "gists_url": "https://api.github.com/users/amcasey/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/amcasey/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/amcasey/subscriptions",
        "organizations_url": "https://api.github.com/users/amcasey/orgs",
        "repos_url": "https://api.github.com/users/amcasey/repos",
        "events_url": "https://api.github.com/users/amcasey/events{/privacy}",
        "received_events_url": "https://api.github.com/users/amcasey/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "amcasey",
          "id": 10508071,
          "node_id": "MDQ6VXNlcjEwNTA4MDcx",
          "avatar_url": "https://avatars.githubusercontent.com/u/10508071?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/amcasey",
          "html_url": "https://github.com/amcasey",
          "followers_url": "https://api.github.com/users/amcasey/followers",
          "following_url": "https://api.github.com/users/amcasey/following{/other_user}",
          "gists_url": "https://api.github.com/users/amcasey/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/amcasey/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/amcasey/subscriptions",
          "organizations_url": "https://api.github.com/users/amcasey/orgs",
          "repos_url": "https://api.github.com/users/amcasey/repos",
          "events_url": "https://api.github.com/users/amcasey/events{/privacy}",
          "received_events_url": "https://api.github.com/users/amcasey/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-08T00:16:44Z",
      "updated_at": "2021-07-08T08:37:48Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44936",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44936",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44936.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44936.patch"
      },
      "body": "When a class declaration lacks a name, don't throw an exception when\r\nproducing the display parts (e.g. for QuickInfo).\r\n\r\nRemaining issues:\r\n 1. The name shows as \"__missing\", the name of the underlying symbol,\r\n    rather than \"(Missing)\", as it is for the corresponding function\r\n    declaration case (because the parse constructs a missing identifier\r\n    node for the function declaration).\r\n 2. \"(Missing)\" is hard-coded, rather than being a localizable resource\r\n    string.\r\n 3. When an anonymous class declaration is a default export, the\r\n    corresponding symbol is named \"default\", resulting in the confusing\r\n    display string \"class default\".\r\n\r\nSince display parts are built using existing `symbolToString`\r\nfunctionality, it wasn't clear whether detecting special symbol names\r\nand replacing them with user-friendly strings could be done without\r\nbreaking other functionality.\r\n\r\nSimilarly, changing the shape of the parse tree seemed riskier than the\r\nproblem justified (the user experience is just not getting QuickInfo for\r\nthe incomplete declaration, which seems acceptable).",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44932",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44932/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44932/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44932/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44932",
      "id": 939161429,
      "node_id": "MDU6SXNzdWU5MzkxNjE0Mjk=",
      "number": 44932,
      "title": "JSDoc param tag's default value parsing should support non-TS expressions",
      "user": {
        "login": "atanasster",
        "id": 6075606,
        "node_id": "MDQ6VXNlcjYwNzU2MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6075606?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/atanasster",
        "html_url": "https://github.com/atanasster",
        "followers_url": "https://api.github.com/users/atanasster/followers",
        "following_url": "https://api.github.com/users/atanasster/following{/other_user}",
        "gists_url": "https://api.github.com/users/atanasster/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/atanasster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/atanasster/subscriptions",
        "organizations_url": "https://api.github.com/users/atanasster/orgs",
        "repos_url": "https://api.github.com/users/atanasster/repos",
        "events_url": "https://api.github.com/users/atanasster/events{/privacy}",
        "received_events_url": "https://api.github.com/users/atanasster/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 114201833,
          "node_id": "MDU6TGFiZWwxMTQyMDE4MzM=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Needs%20Proposal",
          "name": "Needs Proposal",
          "color": "556b75",
          "default": false,
          "description": "This issue needs a plan that clarifies the finer details of how it could be implemented."
        },
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 5,
      "created_at": "2021-07-07T18:41:17Z",
      "updated_at": "2021-07-08T23:45:30Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Suggestion\r\n\r\nprobably related to #44930 but a different use case. default values on `@param`: https://jsdoc.app/tags-param.html\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n## üîç Search Terms\r\n`jsdoc param default value`\r\n\r\n## ‚≠ê Suggestion\r\n\r\nPlease allow for default value params parsing\r\n```\r\n/**\r\n * @param {string} [somebody=John Doe] - Somebody's name.\r\n */\r\nexport function sayHello(somebody) {\r\n}\r\n```\r\ncurrently parses to tags:\r\n```\r\n[\r\n  {\r\n    name: \"param\",\r\n    text: [\r\n      {\r\n        text: \"somebody\",\r\n        kind: \"parameterName\"\r\n      },\r\n      {\r\n        text: \" \",\r\n        kind: \"space\"\r\n      },\r\n      {\r\n        text: \"Doe] - Somebody's name.\",\r\n        kind: \"text\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\npossibly add a new node\r\n```\r\n{\r\n    text: \"John Doe\",\r\n    kind: \"defaultValue\"\r\n  },\r\n```\r\nand clean up the description from\r\n```\r\n{\r\n  text: \"Doe] - Somebody's name.\",\r\n  kind: \"text\"\r\n}\r\n```\r\nto \r\n```\r\n{\r\n  text: \"- Somebody's name.\",\r\n  kind: \"text\"\r\n}\r\n```\r\n\r\np.s. it mighy also be worth in general to clean up parameter descriptions `text` from the leading hyphen\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44927",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44927/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44927/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44927/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44927",
      "id": 939029010,
      "node_id": "MDU6SXNzdWU5MzkwMjkwMTA=",
      "number": 44927,
      "title": "[Proposal] Limit the compiler error about overriding the base class property with getter/setter accessors pair to the `useDefineForClassFields : true` case only",
      "user": {
        "login": "canonic-epicure",
        "id": 72431,
        "node_id": "MDQ6VXNlcjcyNDMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/72431?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/canonic-epicure",
        "html_url": "https://github.com/canonic-epicure",
        "followers_url": "https://api.github.com/users/canonic-epicure/followers",
        "following_url": "https://api.github.com/users/canonic-epicure/following{/other_user}",
        "gists_url": "https://api.github.com/users/canonic-epicure/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/canonic-epicure/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/canonic-epicure/subscriptions",
        "organizations_url": "https://api.github.com/users/canonic-epicure/orgs",
        "repos_url": "https://api.github.com/users/canonic-epicure/repos",
        "events_url": "https://api.github.com/users/canonic-epicure/events{/privacy}",
        "received_events_url": "https://api.github.com/users/canonic-epicure/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 373477802,
          "node_id": "MDU6TGFiZWwzNzM0Nzc4MDI=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Awaiting%20More%20Feedback",
          "name": "Awaiting More Feedback",
          "color": "556677",
          "default": false,
          "description": "This means we'd like to hear from more people who would be helped by this feature"
        },
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-07T15:47:16Z",
      "updated_at": "2021-07-07T22:00:29Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "As suggested by @sandersn, opening a sibling issue to track the proposal from the https://github.com/microsoft/TypeScript/pull/37894\r\n\r\nTopic\r\n------\r\nCurrently, when a property in the base class is overridden with a getter/setter pair, compiler always generates an error:\r\n[Playground link](https://www.typescriptlang.org/play?&useDefineForClassFields=true#code/MYGwhgzhAEBCkFMDC4rQN4Cho+gBwCcB7PXM6ALmggBcCBLAOwHNzcBeaAcgCNEB9UJAhdMAX0yYhaAMoBXHimHQEADxoJGAExjwIyVDCxl+hEm0rU6TVhc5cICwYdHZczBDXzFSACgCUlrQMLBhubASecgSM0DQAFvQQAHSmPuHQEmT6XmZ+AG5gIHIIQdYsgcYWCUmpedCchcUIGRISUkSMEEQgCMkgRMy+vowIAO7Q8oqG-sl5-kA)\r\n```ts\r\nclass BaseClass {\r\n    prop        : string        = 'base_class'\r\n}\r\n\r\nclass SubClass extends BaseClass {\r\n    _prop       : string        = 'sub_class'\r\n\r\n    /*\r\n       ERROR: 'prop' is defined as a property in class 'BaseClass', but is overridden here in 'SubClass' as an accessor.\r\n    */\r\n    get prop () : string {\r\n        return this._prop\r\n    }\r\n    set prop (value : string) {\r\n        this._prop = value\r\n    }\r\n}\r\n// try running this snippet with `useDefineForClassFields : true` and `useDefineForClassFields : false`\r\nconsole.log((new SubClass).prop)\r\n```\r\nThis error is motivated by the fact, that in modern JavaScript, class fields have DEFINE semantic and the above example won't work as intuitively expected if `useDefineForClassFields` compiler option is set to `true`. \r\n\r\nThe property access augmentation pattern\r\n-----------------------------------\r\nNeed to note, that historically nobody was ever using the DEFINE semantic for class properties. Pretty much all the JavaScript and TypeScript code in the world currently assumes the SET semantic for class fields.\r\n\r\nSET semantic makes it possible to use the property access augmentation pattern. Its main use case is to trigger some arbitrary code on property read/write. This is very useful for variety of purposes and is done by simply overriding the property of the base class with getter/setter accessors pair.\r\n\r\nFor example, lets say we have some 3rd party library with a class with `parent` property.\r\n```ts\r\nclass ExternalClass {\r\n    parent      : this      = undefined\r\n    children    : this[]    = []\r\n\r\n    appendChild (child : this) {\r\n        child.parent    = this        ‚Äã\r\n   ‚Äã}\r\n}\r\n```\r\nIn the whole library, the `parent` is assumed to be a regular property and is accessed with dot notation. \r\n\r\nNow lets say we want to plug this 3rd party library in our codebase, which has reactive capabilities. We need to track the access to the `parent` property and trigger some extra code on property write:\r\n```ts\r\nconst reactive : any = undefined\r\ntype Reactive<V> = V\r\n\r\nclass OurClass extends ExternalClass {\r\n   ‚Äã@reactive()\r\n   ‚ÄãreactiveParent     : Reactive<this>     = undefined\r\n\r\n   ‚Äãprivate _parent : this\r\n   ‚Äãget parent () : this {\r\n       ‚Äãreturn this._parent\r\n   ‚Äã}\r\n   ‚Äãset parent (value : this) {\r\n       ‚Äãthis._parent = value\r\n       ‚Äãthis.reactiveParent = value\r\n   ‚Äã}\r\n}\r\n```\r\nWith this simple subclass, we can use the 3rd party library code _unchanged_ and mirror the writes to the `parent` property to the `reactiveParent` (which is plugged into the rendering process elsewhere).\r\n\r\nDEFINE / SET semantic\r\n-------------\r\nTypeScript and JavaScript historically were using SET semantic for class fields. Pretty much all the code in the world assumes it. However, TC39 committee decided that class fields should use DEFINE semantic and to provide the way to migrate to new behavior, TypeScript introduced the new compiler config, `useDefineForClassFields`, disabled by default, because its a breaking change. Obviously, the \"classic\", historical behavior will need to be supported for a very long time.\r\n\r\nWith this option enabled, the \"property access augmentation\" pattern becomes invalid, as demonstrated by the example in the beginning (see however, the \"Additional considerations\" below). It is probably reasonable to generate a compiler error being discussed in this case.\r\n\r\nWith this option disabled, the pattern remains valid. In this case there are no reasons to limit the language expressiveness and restrict the user from using the pattern. \r\n\r\nProposal\r\n------------\r\n\r\nProposal is to generate the compiler error being discussed only for the \"DEFINE\" semantic (`useDefineForClassFields : true`) case.\r\n\r\n\r\nAdditional considerations\r\n--------------------\r\nThere's a [promise from TC39 committee](https://github.com/tc39/proposal-class-fields#public-fields-created-with-objectdefineproperty) to provide an opt-in escape route to the \"classic\" SET semantic for class fields, using a decorator. This means, that the \"property access augmentation\" pattern will probably remain valid in JavaScript, even for native class fields, a user will just need to opt-in for it, using the decorator. \r\n\r\nIdeally, compiler will need to be smart, to determine which semantic the field is actually using, to avoid the needless restrictions. Perhaps the nature of this error is that it should be handled better by the linter, rather than compiler.\r\n\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44925",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44925/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44925/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44925/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44925",
      "id": 938844769,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg1MTU1NDAw",
      "number": 44925,
      "title": "Fix(DeprecationWarning): Work around in testRunner",
      "user": {
        "login": "Luxcium",
        "id": 42672814,
        "node_id": "MDQ6VXNlcjQyNjcyODE0",
        "avatar_url": "https://avatars.githubusercontent.com/u/42672814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Luxcium",
        "html_url": "https://github.com/Luxcium",
        "followers_url": "https://api.github.com/users/Luxcium/followers",
        "following_url": "https://api.github.com/users/Luxcium/following{/other_user}",
        "gists_url": "https://api.github.com/users/Luxcium/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Luxcium/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Luxcium/subscriptions",
        "organizations_url": "https://api.github.com/users/Luxcium/orgs",
        "repos_url": "https://api.github.com/users/Luxcium/repos",
        "events_url": "https://api.github.com/users/Luxcium/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Luxcium/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1883362416,
          "node_id": "MDU6TGFiZWwxODgzMzYyNDE2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug",
          "name": "For Uncommitted Bug",
          "color": "ededed",
          "default": false,
          "description": "PR for untriaged, rejected, closed or missing bug"
        },
        {
          "id": 1820465235,
          "node_id": "MDU6TGFiZWwxODIwNDY1MjM1",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Housekeeping",
          "name": "Housekeeping",
          "color": "d3682a",
          "default": false,
          "description": "Housekeeping PRs"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 4,
      "created_at": "2021-07-07T12:33:41Z",
      "updated_at": "2021-07-10T04:11:02Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44925",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44925",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44925.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44925.patch"
      },
      "body": "DeprecationWarning: \"Runner(suite: Suite, delay: boolean)\" is deprecated. Use \"Runner(suite: Suite, {delay: boolean})\" instead.\r\nfixes #44922 \r\n@sandersn\r\n\r\nSigned-off-by: Benjamin Vincent (Luxcium) <luxcium@neb401.com>\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [X] Code is up-to-date with the `main` branch\r\n* [X] You've successfully run `gulp runtests` locally\r\n* [X] You've successfully run `gulp tests` & `gulp runtests-parallel --light=false` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n* [X] fixes #44922 \r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\n\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n-->\r\n ",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44928",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44928/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44928/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44928/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44928",
      "id": 939061055,
      "node_id": "MDU6SXNzdWU5MzkwNjEwNTU=",
      "number": 44928,
      "title": "Imports IntelliSense in monorepo works incorrectly",
      "user": {
        "login": "lukejagodzinski",
        "id": 1051229,
        "node_id": "MDQ6VXNlcjEwNTEyMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1051229?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lukejagodzinski",
        "html_url": "https://github.com/lukejagodzinski",
        "followers_url": "https://api.github.com/users/lukejagodzinski/followers",
        "following_url": "https://api.github.com/users/lukejagodzinski/following{/other_user}",
        "gists_url": "https://api.github.com/users/lukejagodzinski/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lukejagodzinski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lukejagodzinski/subscriptions",
        "organizations_url": "https://api.github.com/users/lukejagodzinski/orgs",
        "repos_url": "https://api.github.com/users/lukejagodzinski/repos",
        "events_url": "https://api.github.com/users/lukejagodzinski/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lukejagodzinski/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971304,
          "node_id": "MDU6TGFiZWwxMTM5NzEzMDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Needs%20More%20Info",
          "name": "Needs More Info",
          "color": "556b75",
          "default": false,
          "description": "The issue still hasn't been fully clarified"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-07-07T12:23:57Z",
      "updated_at": "2021-07-08T14:14:20Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "\r\nIssue Type: <b>Bug</b>\r\n\r\nI have TypeScript monorepo using Lerna. I have packages configured like that:\r\n\r\n```json\r\n{\r\n  \"name\": \"@namespace/types\",\r\n  \"main\": \"./dist/index.js\",\r\n  \"source\": \"./src/index.ts\"\r\n}\r\n```\r\n\r\nNow, whenever I try to import something from this package in the other package VSCode proposes only imports like:\r\n\r\n```ts\r\nimport { isNil } from \"../../../packages/types/dist\"\r\n```\r\n\r\nIt used to work correctly and propose imports like:\r\n\r\n```ts\r\nimport { isNil } from \"@namespace/types\"\r\n```\r\n\r\nI've tried to fix it by defining `paths` in the tsconfig.json and it kinda works but now I have it proposing imports like:\r\n\r\n```ts\r\nimport { isNil } from \"@namespace/types/dist\"\r\n```\r\n\r\nIt stopped working a few weeks ago.\r\n\r\nVS Code version: Code 1.57.1 (507ce72a4466fbb27b715c3722558bb15afa9f48, 2021-06-17T13:28:32.912Z)\r\nOS version: Darwin x64 19.6.0\r\nRestricted Mode: No\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz (8 x 2900)|\r\n|GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|3, 3, 3|\r\n|Memory (System)|16.00GB (0.47GB free)|\r\n|Process Argv|--crash-reporter-id 379bde90-7250-4e04-9003-abfcf19544c7|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n</details><details><summary>Extensions (25)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\ncucumberautocomplete|ale|2.15.1\r\nhtmltagwrap|bra|0.0.7\r\nvscode-eslint|dba|2.1.23\r\nvscode-deno|den|3.7.0\r\nvscode-new-file|dku|4.0.2\r\neslint-disable-snippets|drK|1.3.0\r\ngitlens|eam|11.5.1\r\nprettier-vscode|esb|8.0.1\r\nvscode-jest-runner|fir|0.4.44\r\nauto-rename-tag|for|0.1.6\r\ncopilot|Git|1.1.1946\r\nvscode-env|Iro|0.1.0\r\nvscode-inline-sql|jtl|0.1.4\r\ngraphql-for-vscode|kum|1.15.3\r\ninline-parameters|lia|0.2.1\r\nvsliveshare|ms-|1.0.4498\r\ndebugger-for-chrome|msj|4.12.12\r\nsqltools|mtx|0.23.0\r\nsass-indented|rob|1.5.1\r\ncode-settings-sync|Sha|3.4.3\r\ncode-spell-checker|str|1.10.2\r\ntabnine-vscode|Tab|3.4.12\r\nquokka-vscode|Wal|1.0.384\r\nlocal-history|xyz|1.8.1\r\nmarkdown-all-in-one|yzh|3.4.0\r\n\r\n\r\n</details><details>\r\n<summary>A/B Experiments</summary>\r\n\r\n```\r\nvsliv368cf:30146710\r\nvsreu685:30147344\r\npython383:30185418\r\npythonvspyt700cf:30270857\r\npythonvspyt602:30300191\r\nvspor879:30202332\r\nvspor708:30202333\r\nvspor363:30204092\r\nvstes627:30244334\r\npythonvspyt639:30300192\r\npythontb:30283811\r\nvspre833:30321513\r\npythonptprofiler:30281270\r\nvsdfh931cf:30280410\r\nvshan820:30294714\r\npythondataviewer:30285071\r\nvscus158:30321503\r\npythonvsuse255:30323308\r\nvscorehov:30309549\r\nvscod805cf:30301675\r\npythonvspyt200cf:30331938\r\nvscextlangct:30333562\r\nbinariesv615:30325510\r\nvsccppwt:30329788\r\naatestflight:30331711\r\n\r\n```\r\n\r\n</details>\r\n\r\n<!-- generated by issue reporter -->",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44924",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44924/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44924/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44924/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44924",
      "id": 938765815,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg1MDg5NDMy",
      "number": 44924,
      "title": "ci(workflows): bump 'setup-node' to v2 and use 'cache' option",
      "user": {
        "login": "oscard0m",
        "id": 2574275,
        "node_id": "MDQ6VXNlcjI1NzQyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2574275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/oscard0m",
        "html_url": "https://github.com/oscard0m",
        "followers_url": "https://api.github.com/users/oscard0m/followers",
        "following_url": "https://api.github.com/users/oscard0m/following{/other_user}",
        "gists_url": "https://api.github.com/users/oscard0m/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/oscard0m/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/oscard0m/subscriptions",
        "organizations_url": "https://api.github.com/users/oscard0m/orgs",
        "repos_url": "https://api.github.com/users/oscard0m/repos",
        "events_url": "https://api.github.com/users/oscard0m/events{/privacy}",
        "received_events_url": "https://api.github.com/users/oscard0m/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1883362416,
          "node_id": "MDU6TGFiZWwxODgzMzYyNDE2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug",
          "name": "For Uncommitted Bug",
          "color": "ededed",
          "default": false,
          "description": "PR for untriaged, rejected, closed or missing bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-07-07T10:58:50Z",
      "updated_at": "2021-07-07T11:16:51Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44924",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44924",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44924.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44924.patch"
      },
      "body": "## Description\r\n\r\n- Add `cache` to workflows using `actions/setup-node`\r\n- Bump `actions/setup-node` to `v2` to give support to this `cache` option\r\n\r\n## Context\r\n\r\n`setup-node` GitHub Action just released a new option to add cache to steps using it.\r\n\r\nYou can find the details here: https://github.blog/changelog/2021-07-02-github-actions-setup-node-now-supports-dependency-caching/\r\n\r\nFix #44898\r\n\r\n---\r\n\r\nü§ñ This PR has been generated automatically by [this octoherd script](https://github.com/oscard0m/octoherd-script-add-cache-to-node-github-action), feel free to run it in your GitHub user/org repositories! üí™üèæ\r\n\r\n---\r\n\r\nMigrated from https://github.com/microsoft/TypeScript/pull/44897 due to indentation changes problem (GitHub was still showing indentation changes even I was restoring back the original indentation)",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44922",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44922/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44922/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44922/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44922",
      "id": 938721318,
      "node_id": "MDU6SXNzdWU5Mzg3MjEzMTg=",
      "number": 44922,
      "title": "DeprecationWarning: in testRunner ",
      "user": {
        "login": "Luxcium",
        "id": 42672814,
        "node_id": "MDQ6VXNlcjQyNjcyODE0",
        "avatar_url": "https://avatars.githubusercontent.com/u/42672814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Luxcium",
        "html_url": "https://github.com/Luxcium",
        "followers_url": "https://api.github.com/users/Luxcium/followers",
        "following_url": "https://api.github.com/users/Luxcium/following{/other_user}",
        "gists_url": "https://api.github.com/users/Luxcium/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Luxcium/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Luxcium/subscriptions",
        "organizations_url": "https://api.github.com/users/Luxcium/orgs",
        "repos_url": "https://api.github.com/users/Luxcium/repos",
        "events_url": "https://api.github.com/users/Luxcium/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Luxcium/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 294084644,
          "node_id": "MDU6TGFiZWwyOTQwODQ2NDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Infrastructure",
          "name": "Infrastructure",
          "color": "fbca04",
          "default": false,
          "description": "Issue relates to TypeScript team infrastructure"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-07T10:07:23Z",
      "updated_at": "2021-07-10T04:10:38Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\nMocha, Runner\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\n### üïó Version & Regression Information\r\n\r\non the branch, [main](https://github.com/microsoft/TypeScript/blob/1de29af70922dc38218936f8acd246a94207acc1/src/testRunner/parallel/worker.ts#L212) with mocha out of sync with is definition  9.0.2/8.2\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n\r\n- This is a crash\r\n- This changed between versions ______ and _______\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about _________\r\n- I was unable to test this on prior versions because _______\r\n\r\n### ‚èØ Playground Link\r\n\r\n\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?#code/PTAEFkE9QYwewCYFNQHM5IM6gBZIE5JA)\r\n-->\r\n### üíª Code\r\nrunning `npm test` in main branch  \r\n<!-- Please post the relevant code sample here as well\r\n```ts\r\n// We can quickly address your report if:\r\n//  - The code sample is short. Nearly all TypeScript bugs can be demonstrated in 20-30 lines of code!\r\n//  - It doesn't use external libraries. These are often issues with the type definitions rather than TypeScript bugs.\r\n//  - The incorrectness of the behavior is readily apparent from reading the sample.\r\n// Reports are slower to investigate if:\r\n//  - We have to pare too much extraneous code.\r\n//  - We have to clone a large repo and validate that the problem isn't elsewhere.\r\n//  - The sample is confusing or doesn't clearly demonstrate what's wrong.\r\n```\r\n-->\r\n\r\n### üôÅ Actual behavior\r\n`[Worker XX] (node:386YYY) DeprecationWarning: \"Runner(suite: Suite, delay: boolean)\" is deprecated. Use \"Runner(suite: Suite, {delay: boolean})\" instead.\r\n(Use 'node --trace-deprecation ...' to show where the warning was created)`\r\n![Screenshot_20210707_060054](https://user-images.githubusercontent.com/42672814/124742116-68fc2280-deea-11eb-91c3-f0923392f1ce.png)\r\n\r\n\r\n<!-- What happened, and why it was wrong -->\r\n\r\n### üôÇ Expected behavior\r\n![Screenshot_20210707_060637](https://user-images.githubusercontent.com/42672814/124741279-84b2f900-dee9-11eb-8f5d-9d396308920d.png)\r\n\r\n<!-- What you expected to happen instead, and why -->\r\n* [X] Code is up-to-date with the `main` branch\r\n* [X] Successfully run `gulp runtests` locally\r\n* [X] Successfully run gulp tests & gulp runtests-parallel --light=false locally\r\n* [X]  ~~fixed by #44923~~\r\n* [X]  fixed by #44925",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44919",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44919/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44919/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44919/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44919",
      "id": 938543198,
      "node_id": "MDU6SXNzdWU5Mzg1NDMxOTg=",
      "number": 44919,
      "title": "Incorrect method overload resolution for some union types (e.g. in String.prototype.replace)",
      "user": {
        "login": "noomorph",
        "id": 1962469,
        "node_id": "MDQ6VXNlcjE5NjI0Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1962469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/noomorph",
        "html_url": "https://github.com/noomorph",
        "followers_url": "https://api.github.com/users/noomorph/followers",
        "following_url": "https://api.github.com/users/noomorph/following{/other_user}",
        "gists_url": "https://api.github.com/users/noomorph/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/noomorph/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/noomorph/subscriptions",
        "organizations_url": "https://api.github.com/users/noomorph/orgs",
        "repos_url": "https://api.github.com/users/noomorph/repos",
        "events_url": "https://api.github.com/users/noomorph/events{/privacy}",
        "received_events_url": "https://api.github.com/users/noomorph/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 117630560,
          "node_id": "MDU6TGFiZWwxMTc2MzA1NjA=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/In%20Discussion",
          "name": "In Discussion",
          "color": "556b75",
          "default": false,
          "description": "Not yet reached consensus"
        },
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 7,
      "created_at": "2021-07-07T06:39:55Z",
      "updated_at": "2021-07-07T16:34:51Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\n\r\n`string`, `replace`, `overload`, `union types`\r\n\r\n### üïó Version & Regression Information\r\n\r\nIt looks like this bug exists in all versions of TypeScript, including nightly, and yes, I've checked this: https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\n### ‚èØ Playground Link\r\n\r\nhttps://www.typescriptlang.org/play?ts=4.4.0-beta#code/PTAEGMHsAcEsFMAmoDOAXATgQ1gcwBZqgBmGkAtqAMqawB2uAdNGWpGgJ7TyMbzQAbLOHio8dLGgCufAFwAoeAA9okDEU7dQAJX5CRGAGJ1QAXlAAKFFIBG6DPVyzUtBgBpQjL1gy4UzrDoOAG0AXQBKMwA+FwcGAG5FFTUNLlFdQWF4DDNYx1AAHx09LKM6RPliKTpwNFhIExR8SCkBRAB1NQBrCz5Mg2cM-Wzw53t8gG95UBnQPmkMEwByAAl4AQFIDwB3NTaAQiXeEpELYECONHxHYA8+4YxwxIBfeUrq2vqTXYwunxa6IgACr4SSdX4oXonbKDaGPMauXCgKazUCwYiWTTwSAY+6lMymcxLcYMJaRFGo2bzGTLNYbLagH4HI5407nIJXG53OFPaazZ6gdYoUQUylzeALWnrTY7PaIQ7HfrwM4XTkMW7ipWPRKo16vIA\r\n\r\n### üíª Code\r\n\r\n```ts\r\n// copied straight from String.prototype.replace signature:\r\nexport type ReplacerFn = (substring: string, ...args: any[]) => string;\r\nexport type Replacer = string | ReplacerFn;\r\n\r\nfunction shouldWork(replacer: Replacer): string {\r\n    return 'Hello, world!'.replace(/anything/, replacer);\r\n}\r\n\r\nfunction workaroundThatWorks(replacer: Replacer): string {\r\n    if (typeof replacer === 'string') {\r\n        return 'Hello, world!'.replace(/anything/, replacer);\r\n    } else {\r\n        return 'Hello, world!'.replace(/anything/, replacer);\r\n    }\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nTypeScript prints a compilation error for the contents of `shouldWork` function:\r\n\r\n```\r\nNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type 'Replacer' is not assignable to parameter of type '(substring: string, ...args: any[]) => string'.\r\n      Type 'string' is not assignable to type '(substring: string, ...args: any[]) => string'.(2769)\r\nlib.es5.d.ts(454, 5): The last overload is declared here.\r\n```\r\n\r\n### üôÇ Expected behavior\r\n\r\nI expect that the compiler would recognize that my argument of a custom union type `Replacer` will always fit one of the existing overloads since `String.prototype.replace` has them both:\r\n\r\n```ts\r\ninterface String {\r\n//...\r\n    replace(searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string;\r\n    replace(searchValue: { [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string; }, replacer: (substring: string, ...args: any[]) => string): string;\r\n}\r\n```",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44918",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44918/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44918/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44918/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/44918",
      "id": 938303185,
      "node_id": "MDU6SXNzdWU5MzgzMDMxODU=",
      "number": 44918,
      "title": "Keyword to make a generic \"whatever its requirements are.\"",
      "user": {
        "login": "SephReed",
        "id": 14002040,
        "node_id": "MDQ6VXNlcjE0MDAyMDQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/14002040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SephReed",
        "html_url": "https://github.com/SephReed",
        "followers_url": "https://api.github.com/users/SephReed/followers",
        "following_url": "https://api.github.com/users/SephReed/following{/other_user}",
        "gists_url": "https://api.github.com/users/SephReed/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SephReed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SephReed/subscriptions",
        "organizations_url": "https://api.github.com/users/SephReed/orgs",
        "repos_url": "https://api.github.com/users/SephReed/repos",
        "events_url": "https://api.github.com/users/SephReed/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SephReed/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        },
        {
          "id": 117630959,
          "node_id": "MDU6TGFiZWwxMTc2MzA5NTk=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Too%20Complex",
          "name": "Too Complex",
          "color": "556677",
          "default": false,
          "description": "An issue which adding support for may be too complex for the value it adds"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 6,
      "created_at": "2021-07-06T22:19:57Z",
      "updated_at": "2021-07-09T16:41:53Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Suggestion\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n## üîç Search Terms\r\n\r\n<!--\r\n  üí° Did you know? TypeScript has over 2,000 open suggestions!\r\n  üîé Please search thoroughly before logging new feature requests as most common ideas already have a proposal in progress.\r\n  The \"Common Feature Requests\" section of the FAQ lists many popular requests: https://github.com/Microsoft/TypeScript/wiki/FAQ#common-feature-requests\r\n\r\n  Replace the text below:\r\n-->\r\n\r\ninfer generics, generic any, make generic match its requirements, auto generic\r\n\r\n## ‚úÖ Viability Checklist\r\n\r\n<!--\r\n   Suggestions that don't meet all these criteria are very, very unlikely to be accepted.\r\n   We always recommend reviewing the TypeScript design goals before investing time writing\r\n   a proposal for ideas outside the scope of the project.\r\n-->\r\nMy suggestion meets these guidelines:\r\n\r\n* [x] This wouldn't be a breaking change in existing TypeScript/JavaScript code\r\n* [x] This wouldn't change the runtime behavior of existing JavaScript code\r\n* [x] This could be implemented without emitting different JS based on the types of the expressions\r\n* [x] This isn't a runtime feature (e.g. library functionality, non-ECMAScript syntax with JavaScript output, new syntax sugar for JS, etc.)\r\n* [x] This feature would agree with the rest of [TypeScript's Design Goals](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Design-Goals).\r\n\r\n\r\n## ‚≠ê Suggestion\r\n\r\nThe TS compiler knows exactly what type of generics it is willing to allow.  That type is known by the compiler, but sometimes extremely tormentful to try to recreate.\r\n\r\nIt would save unimaginable amounts of user time to be able to say: \"this generic is whatever typescript thinks it must be\".\r\n\r\n## üìÉ Motivating Example\r\n\r\n<!--\r\n  If you were announcing this feature in a blog post, what's a short explanation that shows\r\n  a developer why this feature improves the language?\r\n-->\r\n\r\n```\r\ntype Foo<T extends { foo: string}> = Array<T>\r\ntype Bar<T extends { bar: string}> = Map<string, T>\r\n\r\nclass Qux<T extends auto = auto>() {\r\n   public foo(): Foo<T> { return []; }\r\n   public bar(): Bar<T> { return new Map(); }\r\n}\r\n\r\n// based off the generics which T is passed to, auto should become:\r\n// { foo: string;  bar: string }\r\n```\r\n\r\n## üíª Use Cases\r\n\r\n<!--\r\n  What do you want to use this for?\r\n  What shortcomings exist with current approaches?\r\n  What workarounds are you using in the meantime?\r\n-->\r\n\r\n1. Pretty much every single time you try to pass a generic type from one template to another, and you get an extremely complex error.\r\n\r\n2. In general, there needs to be more \"escape hatches\" on generics, because they have a very bad habit of taking a project hostage if ever you try to do something complex with them.\r\n\r\n3. Absolutely every single time the (user) error occurs of: \"X meets requirements, but T could be instantiated with a bad (user error) type\"\r\n\r\n4. Seriously, just all the time.  For everything that it possibly can be used for, because wrestling generics is so rarely a satisfying or efficient use of time.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/44915",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44915/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44915/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/44915/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/44915",
      "id": 938182037,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg0NjEzMTYx",
      "number": 44915,
      "title": "Fix decorator metadata references to type-only-imported namespaces",
      "user": {
        "login": "andrewbranch",
        "id": 3277153,
        "node_id": "MDQ6VXNlcjMyNzcxNTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3277153?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewbranch",
        "html_url": "https://github.com/andrewbranch",
        "followers_url": "https://api.github.com/users/andrewbranch/followers",
        "following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewbranch/orgs",
        "repos_url": "https://api.github.com/users/andrewbranch/repos",
        "events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewbranch/received_events",
        "type": "User",
        "site_admin": true
      },
      "labels": [
        {
          "id": 1503029093,
          "node_id": "MDU6TGFiZWwxNTAzMDI5MDkz",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team",
          "name": "Author: Team",
          "color": "3178C6",
          "default": false,
          "description": ""
        },
        {
          "id": 1820418576,
          "node_id": "MDU6TGFiZWwxODIwNDE4NTc2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug",
          "name": "For Milestone Bug",
          "color": "001f77",
          "default": false,
          "description": "PRs that fix a bug with a specific milestone"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "andrewbranch",
        "id": 3277153,
        "node_id": "MDQ6VXNlcjMyNzcxNTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3277153?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewbranch",
        "html_url": "https://github.com/andrewbranch",
        "followers_url": "https://api.github.com/users/andrewbranch/followers",
        "following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewbranch/orgs",
        "repos_url": "https://api.github.com/users/andrewbranch/repos",
        "events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewbranch/received_events",
        "type": "User",
        "site_admin": true
      },
      "assignees": [
        {
          "login": "andrewbranch",
          "id": 3277153,
          "node_id": "MDQ6VXNlcjMyNzcxNTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3277153?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andrewbranch",
          "html_url": "https://github.com/andrewbranch",
          "followers_url": "https://api.github.com/users/andrewbranch/followers",
          "following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
          "gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
          "organizations_url": "https://api.github.com/users/andrewbranch/orgs",
          "repos_url": "https://api.github.com/users/andrewbranch/repos",
          "events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
          "received_events_url": "https://api.github.com/users/andrewbranch/received_events",
          "type": "User",
          "site_admin": true
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-06T19:09:10Z",
      "updated_at": "2021-07-06T19:26:00Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/44915",
        "html_url": "https://github.com/microsoft/TypeScript/pull/44915",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/44915.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/44915.patch"
      },
      "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n-->\r\n\r\nFixes #42624 \r\n",
      "performed_via_github_app": null
    }
  ],
  "facebook": [
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21868",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21868/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21868/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21868/events",
      "html_url": "https://github.com/facebook/react/issues/21868",
      "id": 943673001,
      "node_id": "MDU6SXNzdWU5NDM2NzMwMDE=",
      "number": 21868,
      "title": "[DevTools] Improve named hooks support for create-react-app",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "bvaughn",
          "id": 29597,
          "node_id": "MDQ6VXNlcjI5NTk3",
          "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bvaughn",
          "html_url": "https://github.com/bvaughn",
          "followers_url": "https://api.github.com/users/bvaughn/followers",
          "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
          "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
          "organizations_url": "https://api.github.com/users/bvaughn/orgs",
          "repos_url": "https://api.github.com/users/bvaughn/repos",
          "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
          "received_events_url": "https://api.github.com/users/bvaughn/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-13T17:38:20Z",
      "updated_at": "2021-07-13T17:38:20Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "Something about the source maps config causes problems for a simple create-react-app running in DEV mode. The column numbers for hooks end up with a value of 0 which causes the AST node matching to fail and hook names can't be located. We should really fix this, since a lot of people use create-react-app for prototyping.\r\n\r\nRepro: https://github.com/bvaughn/test-named-hooks",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21866",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21866/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21866/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21866/events",
      "html_url": "https://github.com/facebook/react/issues/21866",
      "id": 943661993,
      "node_id": "MDU6SXNzdWU5NDM2NjE5OTM=",
      "number": 21866,
      "title": "[DevTools] Release the Scheduling Profiler in the Chrome extension",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "bvaughn",
          "id": 29597,
          "node_id": "MDQ6VXNlcjI5NTk3",
          "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bvaughn",
          "html_url": "https://github.com/bvaughn",
          "followers_url": "https://api.github.com/users/bvaughn/followers",
          "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
          "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
          "organizations_url": "https://api.github.com/users/bvaughn/orgs",
          "repos_url": "https://api.github.com/users/bvaughn/repos",
          "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
          "received_events_url": "https://api.github.com/users/bvaughn/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-13T17:25:27Z",
      "updated_at": "2021-07-13T17:32:31Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "The [Scheduling Profiler](https://github.com/facebook/react/tree/main/packages/react-devtools-scheduling-profiler) is currently only accessible at [react-scheduling-profiler.vercel.app](https://react-scheduling-profiler.vercel.app/) and very few people know about it. Furthermore, the User Timing API marks that power this profiler are only enabled in the experimental release channel, which almost no one uses. We believe this profiler is an important part of understanding React‚Äôs concurrent scheduling and app performance.\r\n\r\nThis task encompasses several items:\r\n - [ ] #21867: Enable the `enableSchedulingProfiler` flag for all _profiling_ builds (not just in the _experimental_ release channel).\r\n - [ ] Embed the scheduling Profiler into the Chrome build of the React DevTools extension. (The profiler currently only supports User Timing marks extracted from Chrome‚Äôs profiling format.) Add this profiler as a new tab within the ‚öõÔ∏è Profiler panel.\r\n - [ ] Implement some sort of feature detection to hide this panel for `react-dom` builds that don't have `enableSchedulingProfiler` enabled?\r\n - [ ] Design a splash page with instructions on how to record and import data.\r\n - [ ] Create a discussion thread on the [React 18 Working Group](https://github.com/reactwg/react-18/discussions/) about it and gather usability feedback.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21857",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21857/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21857/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21857/events",
      "html_url": "https://github.com/facebook/react/pull/21857",
      "id": 942489397,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg4MjEyNzc5",
      "number": 21857,
      "title": "Update test comments with explanations",
      "user": {
        "login": "rickhanlonii",
        "id": 2440089,
        "node_id": "MDQ6VXNlcjI0NDAwODk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rickhanlonii",
        "html_url": "https://github.com/rickhanlonii",
        "followers_url": "https://api.github.com/users/rickhanlonii/followers",
        "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
        "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
        "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
        "repos_url": "https://api.github.com/users/rickhanlonii/repos",
        "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        },
        {
          "id": 1775958285,
          "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
          "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
          "name": "React Core Team",
          "color": "9149d1",
          "default": false,
          "description": "Opened by a member of the React Core Team"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-12T22:07:27Z",
      "updated_at": "2021-07-12T22:15:04Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21857",
        "html_url": "https://github.com/facebook/react/pull/21857",
        "diff_url": "https://github.com/facebook/react/pull/21857.diff",
        "patch_url": "https://github.com/facebook/react/pull/21857.patch"
      },
      "body": "I understand this well enough to explain these now.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21856",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21856/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21856/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21856/events",
      "html_url": "https://github.com/facebook/react/issues/21856",
      "id": 942448417,
      "node_id": "MDU6SXNzdWU5NDI0NDg0MTc=",
      "number": 21856,
      "title": "[DevTools] Show which hooks (names) changed in the Profiler",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-12T21:06:23Z",
      "updated_at": "2021-07-12T21:06:23Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "Hooks are the preferred way for writing stateful React components, but there are a few things about them that still lag behind the class component API: profiling (since DevTools just shows ‚Äúhooks changed‚Äù rather than which ones changed).\r\n\r\nBuilding on top of the initial named hooks release _and_ the experimental `enableProfilerChangedHookIndices` feature flag, the Profiler should show the ‚Äúnames‚Äù of hooks that changed between renders. (Because this would be expensive to eagerly calculate, we would need to add a post-processing phase to the profiler, like Chrome has, where we loaded and parsed names<sup>1</sup>.) \r\n\r\n<sup>1</sup> We may only want to do this for components that are still mounted in the Fiber tree.\r\n\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21855",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21855/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21855/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21855/events",
      "html_url": "https://github.com/facebook/react/issues/21855",
      "id": 942446430,
      "node_id": "MDU6SXNzdWU5NDI0NDY0MzA=",
      "number": 21855,
      "title": "[DevTools] Parse named source AST in a worker",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-12T21:04:01Z",
      "updated_at": "2021-07-12T21:04:01Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "Hooks are the preferred way for writing stateful React components, but there are a few things about them that still lag behind the class component API: inspecting state in DevTools (since hooks aren‚Äôt ‚Äúnamed‚Äù). Even once this feature is available, it will have to be disabled by default because the size of DEV bundles in larger apps (e.g. Facebook) makes parsing the AST very slow.\r\n\r\nTo alleviate this, we plan to provide an additional compilation tool that adds hook names to an extended source map during build time (#21782). However not every application will use this and so DevTools will still need to fall back to parsing source into an AST.\r\n\r\nCurrently this is done using the '@babel/parser' package on the main thread:\r\nhttps://github.com/facebook/react/blob/c2c6ea1fdead7a33a33664675365b1575315276e/packages/react-devtools-extensions/src/parseHookNames.js#L536-L540\r\n\r\nIt would be nice to move this into a worker so that DevTools remains responsive even when parsing large sources.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21853",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21853/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21853/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21853/events",
      "html_url": "https://github.com/facebook/react/pull/21853",
      "id": 942204204,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg3OTY1MDQy",
      "number": 21853,
      "title": "Suspense layout effects: Failing test case",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        },
        {
          "id": 1775958285,
          "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
          "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
          "name": "React Core Team",
          "color": "9149d1",
          "default": false,
          "description": "Opened by a member of the React Core Team"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "acdlite",
        "id": 3624098,
        "node_id": "MDQ6VXNlcjM2MjQwOTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/acdlite",
        "html_url": "https://github.com/acdlite",
        "followers_url": "https://api.github.com/users/acdlite/followers",
        "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
        "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
        "organizations_url": "https://api.github.com/users/acdlite/orgs",
        "repos_url": "https://api.github.com/users/acdlite/repos",
        "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
        "received_events_url": "https://api.github.com/users/acdlite/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "acdlite",
          "id": 3624098,
          "node_id": "MDQ6VXNlcjM2MjQwOTg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/acdlite",
          "html_url": "https://github.com/acdlite",
          "followers_url": "https://api.github.com/users/acdlite/followers",
          "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
          "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
          "organizations_url": "https://api.github.com/users/acdlite/orgs",
          "repos_url": "https://api.github.com/users/acdlite/repos",
          "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
          "received_events_url": "https://api.github.com/users/acdlite/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2021-07-12T15:54:36Z",
      "updated_at": "2021-07-12T19:13:41Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21853",
        "html_url": "https://github.com/facebook/react/pull/21853",
        "diff_url": "https://github.com/facebook/react/pull/21853.diff",
        "patch_url": "https://github.com/facebook/react/pull/21853.patch"
      },
      "body": "The key components to this are:\r\n1. State updater function as a `ref` setter.\r\n2. Render-phase update, e.g. mirrored props-to-state ([not a generally recommended patter](https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#anti-pattern-unconditionally-copying-props-to-state)).\r\n3. Suspend in an update ([also not a common or recommended pattern](https://github.com/reactwg/react-18/discussions/31)).\r\n\r\nThis causes a cycle:\r\n1. Ref gets set to null by React, which schedules a state update (because ref is `useState`)\r\n2. Component schedules more work during the render phase (b'c of the mirrored value in state)\r\n3. Repeat...\r\n\r\nThe reason `enableSuspenseLayoutEffectSemantics` is related to this issue is because React doesn't otherwise reset refs to `null` when an update suspends. (Note that React does eventually set the ref to null when the component unmounts, but since the component doesn't render again after, there's no render-phase update to cycle.)",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21852",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21852/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21852/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21852/events",
      "html_url": "https://github.com/facebook/react/pull/21852",
      "id": 942174751,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg3OTQwMTUz",
      "number": 21852,
      "title": "Tidy up early bailout logic at start of begin phase",
      "user": {
        "login": "acdlite",
        "id": 3624098,
        "node_id": "MDQ6VXNlcjM2MjQwOTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/acdlite",
        "html_url": "https://github.com/acdlite",
        "followers_url": "https://api.github.com/users/acdlite/followers",
        "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
        "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
        "organizations_url": "https://api.github.com/users/acdlite/orgs",
        "repos_url": "https://api.github.com/users/acdlite/repos",
        "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
        "received_events_url": "https://api.github.com/users/acdlite/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        },
        {
          "id": 1775958285,
          "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
          "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
          "name": "React Core Team",
          "color": "9149d1",
          "default": false,
          "description": "Opened by a member of the React Core Team"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-12T15:20:06Z",
      "updated_at": "2021-07-12T15:27:43Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21852",
        "html_url": "https://github.com/facebook/react/pull/21852",
        "diff_url": "https://github.com/facebook/react/pull/21852.diff",
        "patch_url": "https://github.com/facebook/react/pull/21852.patch"
      },
      "body": "An early bailout is when there are no scheduled changes to props, state, or context, so we bail out at the start of the begin phase without running the component body.\r\n\r\nThe logic in this path is getting hard to follow, so I refactored it a bit. There shouldn't be any behavioral change.\r\n\r\nI suggest reviewing each commit separately ‚Äî the first one looks big but that's only because I extracted a bunch of lines into a separate function. The second commit is slightly more interesting.\r\n\r\nAs a bonus, this should make bailouts slightly faster because it moves `checkIfContextChanged` out of the common path.\r\n\r\nIdeally this early bailout path would happen even earlier, before the begin phase. Perhaps during reconciliation of the parent fiber's children. That would require a much bigger refactor, but something to consider for the future.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21851",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21851/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21851/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21851/events",
      "html_url": "https://github.com/facebook/react/issues/21851",
      "id": 942135140,
      "node_id": "MDU6SXNzdWU5NDIxMzUxNDA=",
      "number": 21851,
      "title": "Bug: event Handler on React Component not invoked when React Component is rendered inside a Web Component",
      "user": {
        "login": "AChaoZJU",
        "id": 17509647,
        "node_id": "MDQ6VXNlcjE3NTA5NjQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/17509647?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AChaoZJU",
        "html_url": "https://github.com/AChaoZJU",
        "followers_url": "https://api.github.com/users/AChaoZJU/followers",
        "following_url": "https://api.github.com/users/AChaoZJU/following{/other_user}",
        "gists_url": "https://api.github.com/users/AChaoZJU/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AChaoZJU/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AChaoZJU/subscriptions",
        "organizations_url": "https://api.github.com/users/AChaoZJU/orgs",
        "repos_url": "https://api.github.com/users/AChaoZJU/repos",
        "events_url": "https://api.github.com/users/AChaoZJU/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AChaoZJU/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-12T14:40:13Z",
      "updated_at": "2021-07-12T14:55:21Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\nI wrap the react component with an HTMLDivElemnt to match the reponse type of the function `getContent`. The onClick event on the react component, `<div>` is not triggered.\r\n```\r\ngetContent(evt) {\r\n    const content = document.createElement(\"div\");\r\n    ReactDOM.render(\r\n      <div\r\n        onClick={() =>\r\n          console.log(\"The onClick event on the react component is triggered.\")\r\n        }\r\n      >\r\n        test\r\n      </div>,\r\n      content\r\n    );\r\n    return content;\r\n  },\r\n```\r\n\r\n_Note:  you may need to open chrome devtool or codesandbox React devtool to render the graph._ \r\nFor details, please refer to the gif below.\r\n![Kapture 2021-07-12 at 22 36 57](https://user-images.githubusercontent.com/17509647/125306705-011e5f80-e362-11eb-8965-aec136010a9d.gif)\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nhttps://codesandbox.io/s/determined-tdd-jdmbj?file=/index.js\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nThe onClick event is not triggered.\r\n\r\n## The expected behavior\r\nThe onClick event should be triggered.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21849",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21849/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21849/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21849/events",
      "html_url": "https://github.com/facebook/react/issues/21849",
      "id": 941984087,
      "node_id": "MDU6SXNzdWU5NDE5ODQwODc=",
      "number": 21849,
      "title": "Should have a queue. This is likely a bug in React. Please file an issue.Bug: ",
      "user": {
        "login": "aanarkulov",
        "id": 35723065,
        "node_id": "MDQ6VXNlcjM1NzIzMDY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/35723065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aanarkulov",
        "html_url": "https://github.com/aanarkulov",
        "followers_url": "https://api.github.com/users/aanarkulov/followers",
        "following_url": "https://api.github.com/users/aanarkulov/following{/other_user}",
        "gists_url": "https://api.github.com/users/aanarkulov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aanarkulov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aanarkulov/subscriptions",
        "organizations_url": "https://api.github.com/users/aanarkulov/orgs",
        "repos_url": "https://api.github.com/users/aanarkulov/repos",
        "events_url": "https://api.github.com/users/aanarkulov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aanarkulov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 620368407,
          "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
          "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
          "name": "Resolution: Needs More Information",
          "color": "fffde7",
          "default": false,
          "description": null
        },
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "aanarkulov",
        "id": 35723065,
        "node_id": "MDQ6VXNlcjM1NzIzMDY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/35723065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aanarkulov",
        "html_url": "https://github.com/aanarkulov",
        "followers_url": "https://api.github.com/users/aanarkulov/followers",
        "following_url": "https://api.github.com/users/aanarkulov/following{/other_user}",
        "gists_url": "https://api.github.com/users/aanarkulov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aanarkulov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aanarkulov/subscriptions",
        "organizations_url": "https://api.github.com/users/aanarkulov/orgs",
        "repos_url": "https://api.github.com/users/aanarkulov/repos",
        "events_url": "https://api.github.com/users/aanarkulov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aanarkulov/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "aanarkulov",
          "id": 35723065,
          "node_id": "MDQ6VXNlcjM1NzIzMDY1",
          "avatar_url": "https://avatars.githubusercontent.com/u/35723065?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/aanarkulov",
          "html_url": "https://github.com/aanarkulov",
          "followers_url": "https://api.github.com/users/aanarkulov/followers",
          "following_url": "https://api.github.com/users/aanarkulov/following{/other_user}",
          "gists_url": "https://api.github.com/users/aanarkulov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/aanarkulov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/aanarkulov/subscriptions",
          "organizations_url": "https://api.github.com/users/aanarkulov/orgs",
          "repos_url": "https://api.github.com/users/aanarkulov/repos",
          "events_url": "https://api.github.com/users/aanarkulov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/aanarkulov/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-12T11:57:43Z",
      "updated_at": "2021-07-12T13:40:38Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "https://sentry.io/share/issue/9b4a3b588cd34fcea5f2d461516afd2b/",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21847",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21847/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21847/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21847/events",
      "html_url": "https://github.com/facebook/react/issues/21847",
      "id": 941545121,
      "node_id": "MDU6SXNzdWU5NDE1NDUxMjE=",
      "number": 21847,
      "title": "Bug: video and audio elements invoking wasteful dispatches when there are no related handlers declared",
      "user": {
        "login": "ArmorDarks",
        "id": 4460311,
        "node_id": "MDQ6VXNlcjQ0NjAzMTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4460311?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ArmorDarks",
        "html_url": "https://github.com/ArmorDarks",
        "followers_url": "https://api.github.com/users/ArmorDarks/followers",
        "following_url": "https://api.github.com/users/ArmorDarks/following{/other_user}",
        "gists_url": "https://api.github.com/users/ArmorDarks/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ArmorDarks/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ArmorDarks/subscriptions",
        "organizations_url": "https://api.github.com/users/ArmorDarks/orgs",
        "repos_url": "https://api.github.com/users/ArmorDarks/repos",
        "events_url": "https://api.github.com/users/ArmorDarks/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ArmorDarks/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-11T22:37:42Z",
      "updated_at": "2021-07-11T22:37:42Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "React version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Render video or audio element with auto played source using React\r\n2. Do not declare any `on*` handlers on the element\r\n3. Run performance recording while not touching anything on the page\r\n\r\nLink to code example: https://jsfiddle.net/ArmorDarks/2ugd80tm/2/\r\n\r\n## The current behavior\r\n\r\nPerformance recording will show that React constantly triggers event dispatcher despite actually no handlers were added to the element and no interaction was done with the element at all.\r\n\r\n![Screenshot 2021-07-11 231528](https://user-images.githubusercontent.com/4460311/125211548-c52ac200-e2af-11eb-8d06-0d0044248d0d.png)\r\n\r\nUpon inspection of the video element, there will be already attached event listeners despite we handle non of them. That becomes problematic for media elements since they have listeners like \"progress\" which are executed constantly hence wasting CPU and adding up to the stack.\r\n\r\n![listeners](https://user-images.githubusercontent.com/4460311/125211585-07ec9a00-e2b0-11eb-91ed-599552d47c86.png)\r\n\r\nThat becomes especially noticeable in applications like [Restream Studio](https://restream.io/studio) which have a lot of video elements on the page and already heavily rely on CPU for encoding and video processing. For such apps, anything that adds for no reason to a stack affects performance on weaker machines.\r\n\r\n## The expected behavior\r\n\r\nThere should be no additional listeners on the elements if handlers actually were never declared in React. The mechanism is understandable with events like `onClick` which are not executed anyway unless you click the element, but it's noticeable with `progress`  and other similar listeners which will fire even when there's no interaction with the page.\r\n\r\nThe issue can be workaround by simply creating the element manually in the `useEffect` and appending it somewhere via `ref` manually, but that a bit defies the point of React rendering model.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21836",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21836/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21836/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21836/events",
      "html_url": "https://github.com/facebook/react/pull/21836",
      "id": 940209280,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg2MzE1MjQx",
      "number": 21836,
      "title": "DevTools: Show numbers of children by hover or select element",
      "user": {
        "login": "behnammodi",
        "id": 1549069,
        "node_id": "MDQ6VXNlcjE1NDkwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1549069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/behnammodi",
        "html_url": "https://github.com/behnammodi",
        "followers_url": "https://api.github.com/users/behnammodi/followers",
        "following_url": "https://api.github.com/users/behnammodi/following{/other_user}",
        "gists_url": "https://api.github.com/users/behnammodi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/behnammodi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/behnammodi/subscriptions",
        "organizations_url": "https://api.github.com/users/behnammodi/orgs",
        "repos_url": "https://api.github.com/users/behnammodi/repos",
        "events_url": "https://api.github.com/users/behnammodi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/behnammodi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 4,
      "created_at": "2021-07-08T20:47:09Z",
      "updated_at": "2021-07-13T17:37:07Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21836",
        "html_url": "https://github.com/facebook/react/pull/21836",
        "diff_url": "https://github.com/facebook/react/pull/21836.diff",
        "patch_url": "https://github.com/facebook/react/pull/21836.patch"
      },
      "body": "For knowing numbers of children by hover or select element\r\n\r\n<img width=\"266\" alt=\"Screen Shot 2021-07-09 at 01 12 18\" src=\"https://user-images.githubusercontent.com/1549069/124988320-17bb7280-e053-11eb-8afe-501d9a0ceecc.png\">\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21830",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21830/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21830/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21830/events",
      "html_url": "https://github.com/facebook/react/issues/21830",
      "id": 939981337,
      "node_id": "MDU6SXNzdWU5Mzk5ODEzMzc=",
      "number": 21830,
      "title": "Bug: [eslint-plugin-react-hooks] Functions returning new dates should be flagged as missing dependencies ",
      "user": {
        "login": "amanmahajan7",
        "id": 1452717,
        "node_id": "MDQ6VXNlcjE0NTI3MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1452717?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amanmahajan7",
        "html_url": "https://github.com/amanmahajan7",
        "followers_url": "https://api.github.com/users/amanmahajan7/followers",
        "following_url": "https://api.github.com/users/amanmahajan7/following{/other_user}",
        "gists_url": "https://api.github.com/users/amanmahajan7/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/amanmahajan7/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/amanmahajan7/subscriptions",
        "organizations_url": "https://api.github.com/users/amanmahajan7/orgs",
        "repos_url": "https://api.github.com/users/amanmahajan7/repos",
        "events_url": "https://api.github.com/users/amanmahajan7/events{/privacy}",
        "received_events_url": "https://api.github.com/users/amanmahajan7/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-07-08T15:31:01Z",
      "updated_at": "2021-07-09T08:31:51Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "React version: 17.0.1\r\n\r\n## Steps To Reproduce\r\n\r\n ```\r\nimport \"./styles.css\";\r\nimport { useMemo, useState } from \"react\";\r\n\r\nexport default function App() {\r\n  const [, rerender] = useState({});\r\n  function getCurrentDate() {\r\n    return new Date();\r\n  }\r\n\r\n  const currentTime = useMemo(() => {\r\n    return getCurrentDate().toISOString();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {currentTime}\r\n      <button onClick={() => rerender({})}>Rerender</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n```\r\nLink to code example:\r\nhttps://codesandbox.io/s/unruffled-wiles-cfiig?file=/src/App.js\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nNo warning appears for `getCurrentDate`. It returns a new date everytime it is called\r\n\r\n\r\n## The expected behavior\r\nShould flag `getCurrentDate` as missing dependency. \r\n\r\nI am not sure if this a limitation. \r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21829",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21829/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21829/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21829/events",
      "html_url": "https://github.com/facebook/react/pull/21829",
      "id": 939879416,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg2MDMyNTA2",
      "number": 21829,
      "title": "[package:react-dom] updateREADME's Class Component to Function Component",
      "user": {
        "login": "ryota-murakami",
        "id": 5501268,
        "node_id": "MDQ6VXNlcjU1MDEyNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5501268?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryota-murakami",
        "html_url": "https://github.com/ryota-murakami",
        "followers_url": "https://api.github.com/users/ryota-murakami/followers",
        "following_url": "https://api.github.com/users/ryota-murakami/following{/other_user}",
        "gists_url": "https://api.github.com/users/ryota-murakami/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ryota-murakami/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ryota-murakami/subscriptions",
        "organizations_url": "https://api.github.com/users/ryota-murakami/orgs",
        "repos_url": "https://api.github.com/users/ryota-murakami/repos",
        "events_url": "https://api.github.com/users/ryota-murakami/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ryota-murakami/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-08T13:47:40Z",
      "updated_at": "2021-07-08T13:47:45Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21829",
        "html_url": "https://github.com/facebook/react/pull/21829",
        "diff_url": "https://github.com/facebook/react/pull/21829.diff",
        "patch_url": "https://github.com/facebook/react/pull/21829.patch"
      },
      "body": "## Summary\r\nThe summary is the same as the title.\r\n\r\n## Why\r\nIn these day many developer facing this content while opening `package.json` with modern editor like this.\r\n\r\n<img width=\"652\" alt=\"Screen Shot 2021-07-08 at 22 37 32\" src=\"https://user-images.githubusercontent.com/5501268/124931983-a9b88080-e03d-11eb-8761-4c1889bc2f00.png\">\r\n\r\nRide on the traction [New React Docs #3308](https://github.com/reactjs/reactjs.org/issues/3308) üöÄ",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21828",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21828/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21828/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21828/events",
      "html_url": "https://github.com/facebook/react/issues/21828",
      "id": 939480451,
      "node_id": "MDU6SXNzdWU5Mzk0ODA0NTE=",
      "number": 21828,
      "title": "[Devtools] Indicate or print which element causes suspense fallback",
      "user": {
        "login": "otakustay",
        "id": 639549,
        "node_id": "MDQ6VXNlcjYzOTU0OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/639549?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/otakustay",
        "html_url": "https://github.com/otakustay",
        "followers_url": "https://api.github.com/users/otakustay/followers",
        "following_url": "https://api.github.com/users/otakustay/following{/other_user}",
        "gists_url": "https://api.github.com/users/otakustay/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/otakustay/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/otakustay/subscriptions",
        "organizations_url": "https://api.github.com/users/otakustay/orgs",
        "repos_url": "https://api.github.com/users/otakustay/repos",
        "events_url": "https://api.github.com/users/otakustay/events{/privacy}",
        "received_events_url": "https://api.github.com/users/otakustay/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        },
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        },
        {
          "id": 40929153,
          "node_id": "MDU6TGFiZWw0MDkyOTE1Mw==",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Enhancement",
          "name": "Type: Enhancement",
          "color": "84b6eb",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-08T05:19:31Z",
      "updated_at": "2021-07-08T09:23:46Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "In a deep component tree, we sometimes modify a deeply nested component to use suspense but failed to wrap `Suspense` at a suitable place, this causes the root `Suspense` into fallback and is hard to location where this fallback is introduced.\r\n\r\n\"Whether a component is throwing Promise\" is an implicit convention of component, this is not detectable by any static analyzer, so in a complex app this missing `Suspense` issue can happen frequently.\r\n\r\nI've tested error boundaries but they cannot catch Promise, maybe devtools can provide functionality to report where Promises are thrown.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21827",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21827/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21827/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21827/events",
      "html_url": "https://github.com/facebook/react/issues/21827",
      "id": 939444379,
      "node_id": "MDU6SXNzdWU5Mzk0NDQzNzk=",
      "number": 21827,
      "title": "[Devtools] Make link style value clickable",
      "user": {
        "login": "otakustay",
        "id": 639549,
        "node_id": "MDQ6VXNlcjYzOTU0OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/639549?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/otakustay",
        "html_url": "https://github.com/otakustay",
        "followers_url": "https://api.github.com/users/otakustay/followers",
        "following_url": "https://api.github.com/users/otakustay/following{/other_user}",
        "gists_url": "https://api.github.com/users/otakustay/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/otakustay/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/otakustay/subscriptions",
        "organizations_url": "https://api.github.com/users/otakustay/orgs",
        "repos_url": "https://api.github.com/users/otakustay/repos",
        "events_url": "https://api.github.com/users/otakustay/events{/privacy}",
        "received_events_url": "https://api.github.com/users/otakustay/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        },
        {
          "id": 717031390,
          "node_id": "MDU6TGFiZWw3MTcwMzEzOTA=",
          "url": "https://api.github.com/repos/facebook/react/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "6ce26a",
          "default": true,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 8,
      "created_at": "2021-07-08T04:02:20Z",
      "updated_at": "2021-07-10T09:24:07Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "I didn't find a suitable place to open feature request of react devtools.\r\n\r\nWe're developing a babel plugin to inject a `useDebugValue` into every component so that developers can immediately see the source file path of inspecting component like:\r\n\r\n![image](https://user-images.githubusercontent.com/639549/124860336-0f781e80-dfe4-11eb-875f-d8715b625dba.png)\r\n\r\nWe are expecting this `file://` url clickable and open the default code editor on clicked, like those image urls in DOM panel:\r\n\r\n![image](https://user-images.githubusercontent.com/639549/124860429-3a627280-dfe4-11eb-805d-fb99ad783f00.png)\r\n\r\nThis can be a helpful feature to help developers quickly location source files, stackoverflow questions and more",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21823",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21823/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21823/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21823/events",
      "html_url": "https://github.com/facebook/react/pull/21823",
      "id": 939383614,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg1NjE0OTQz",
      "number": 21823,
      "title": "[fizz] Add comments about task",
      "user": {
        "login": "taichiyi",
        "id": 11924426,
        "node_id": "MDQ6VXNlcjExOTI0NDI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11924426?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/taichiyi",
        "html_url": "https://github.com/taichiyi",
        "followers_url": "https://api.github.com/users/taichiyi/followers",
        "following_url": "https://api.github.com/users/taichiyi/following{/other_user}",
        "gists_url": "https://api.github.com/users/taichiyi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/taichiyi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/taichiyi/subscriptions",
        "organizations_url": "https://api.github.com/users/taichiyi/orgs",
        "repos_url": "https://api.github.com/users/taichiyi/repos",
        "events_url": "https://api.github.com/users/taichiyi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/taichiyi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-08T01:27:23Z",
      "updated_at": "2021-07-12T07:41:11Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21823",
        "html_url": "https://github.com/facebook/react/pull/21823",
        "diff_url": "https://github.com/facebook/react/pull/21823.diff",
        "patch_url": "https://github.com/facebook/react/pull/21823.patch"
      },
      "body": "Add comments about task",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21812",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21812/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21812/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21812/events",
      "html_url": "https://github.com/facebook/react/issues/21812",
      "id": 939062805,
      "node_id": "MDU6SXNzdWU5MzkwNjI4MDU=",
      "number": 21812,
      "title": "Bug: onContextMenu not fired in iOS 13 and later",
      "user": {
        "login": "robatwilliams",
        "id": 3041926,
        "node_id": "MDQ6VXNlcjMwNDE5MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3041926?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robatwilliams",
        "html_url": "https://github.com/robatwilliams",
        "followers_url": "https://api.github.com/users/robatwilliams/followers",
        "following_url": "https://api.github.com/users/robatwilliams/following{/other_user}",
        "gists_url": "https://api.github.com/users/robatwilliams/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/robatwilliams/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robatwilliams/subscriptions",
        "organizations_url": "https://api.github.com/users/robatwilliams/orgs",
        "repos_url": "https://api.github.com/users/robatwilliams/repos",
        "events_url": "https://api.github.com/users/robatwilliams/events{/privacy}",
        "received_events_url": "https://api.github.com/users/robatwilliams/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-07T16:27:09Z",
      "updated_at": "2021-07-08T09:12:57Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\nFrom v13 onwards, iOS doesn't fire `contextmenu` events on long-press. It only displays the \"touch callout\".\r\n\r\nThis inconsistency with all other browser seems, like something [synthetic events](https://reactjs.org/docs/events.html) could handle:\r\n\r\n> Your event handlers will be passed instances of SyntheticEvent, a cross-browser wrapper around the browser‚Äôs native event. It has the same interface as the browser‚Äôs native event, including stopPropagation() and preventDefault(), **except the events work identically across all browsers**.\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Long-press an element with an `onContextMenu` listener\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://www.quirksmode.org/dom/events/tests/contextmenu.html\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nReact `onContextMenu` listeners are not called.\r\n\r\n## The expected behavior\r\nReact `onContextMenu` listeners are called.\r\n\r\n## Workarounds\r\n* Use a timer to detect long-press, or a [library](https://www.npmjs.com/package/use-long-press) that does that\r\n* Use an alternative user interaction - which is perhaps what Apple would rather you do, but degrades the experience for non-native apps\r\n\r\n## References\r\n* #17596\r\n* https://github.com/Leaflet/Leaflet/issues/6817\r\n* https://github.com/mdn/browser-compat-data/issues/6376\r\n* https://github.com/w3c/touch-events/issues/68\r\n* https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-touch-callout (still doesn't fire even when callout disabled)",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21810",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21810/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21810/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21810/events",
      "html_url": "https://github.com/facebook/react/issues/21810",
      "id": 938984369,
      "node_id": "MDU6SXNzdWU5Mzg5ODQzNjk=",
      "number": 21810,
      "title": "Bug: unstable_flushDiscreteUpdates when rendering <video muted />",
      "user": {
        "login": "reaktivo",
        "id": 13637,
        "node_id": "MDQ6VXNlcjEzNjM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/13637?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reaktivo",
        "html_url": "https://github.com/reaktivo",
        "followers_url": "https://api.github.com/users/reaktivo/followers",
        "following_url": "https://api.github.com/users/reaktivo/following{/other_user}",
        "gists_url": "https://api.github.com/users/reaktivo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/reaktivo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/reaktivo/subscriptions",
        "organizations_url": "https://api.github.com/users/reaktivo/orgs",
        "repos_url": "https://api.github.com/users/reaktivo/repos",
        "events_url": "https://api.github.com/users/reaktivo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/reaktivo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-07T14:59:18Z",
      "updated_at": "2021-07-07T14:59:18Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "React version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Rendering `<video muted />` triggers \"Warning: unstable_flushDiscreteUpdates: Cannot flush updates when React is already rendering\"\r\n\r\n```jsx\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\ntest(\"should render without calling console error\", () => {\r\n  jest.spyOn(console, \"error\").mockImplementation(() => {});\r\n  const container = document.createElement(\"div\");\r\n  document.body.appendChild(container);\r\n\r\n  ReactDOM.render(<video muted />, container);\r\n  expect(console.error).not.toHaveBeenCalled();\r\n});\r\n\r\n```\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/s/sad-waterfall-ks59l?file=/index.test.js:0-384\r\n\r\n## The current behavior\r\nCalls `console.error` with un-actionable error\r\n\r\n## The expected behavior\r\nDoesn't call `console.error` or calls it with a potential solution\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21809",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21809/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21809/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21809/events",
      "html_url": "https://github.com/facebook/react/issues/21809",
      "id": 938877612,
      "node_id": "MDU6SXNzdWU5Mzg4Nzc2MTI=",
      "number": 21809,
      "title": "Bug: Safari does not load lazy-imported components when re-entering site",
      "user": {
        "login": "sendrauskas",
        "id": 5622744,
        "node_id": "MDQ6VXNlcjU2MjI3NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5622744?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sendrauskas",
        "html_url": "https://github.com/sendrauskas",
        "followers_url": "https://api.github.com/users/sendrauskas/followers",
        "following_url": "https://api.github.com/users/sendrauskas/following{/other_user}",
        "gists_url": "https://api.github.com/users/sendrauskas/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sendrauskas/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sendrauskas/subscriptions",
        "organizations_url": "https://api.github.com/users/sendrauskas/orgs",
        "repos_url": "https://api.github.com/users/sendrauskas/repos",
        "events_url": "https://api.github.com/users/sendrauskas/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sendrauskas/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-07T13:10:14Z",
      "updated_at": "2021-07-08T07:43:03Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "On the iOS version of Safari lazy load of components (with React.lazy) does not always work correctly. If you enter the website everything works fine, but if you then close Safari through the app drawer and open it up again - the website does not load the components again and the site is stuck in Suspense fallback. The only way to get it to work again is to click refresh in the browser. Then all the components are fetched again.  \r\n\r\nReact version: 16.14.0\r\n\r\n## Steps To Reproduce\r\n(Does. not work on iOS simulators, encountered on deployed production builds only)\r\n\r\n1. Enter a deployed site that users React lazy loading and React Suspense on iOS device\r\n2. Open app drawer\r\n3. Close Safari\r\n4. Open Safari again\r\n\r\n\r\n## The current behavior\r\n\r\nResult: the app is stuck on Suspense fallback (loading spinner in my case). Maybe iOS safari caching or storage optimization has something to do with it. It seems that resuming the app does not prompt component load.\r\n\r\n## The expected behavior\r\n\r\nWhen resuming the website (by opening Safari again) everything should load up again.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21807",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21807/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21807/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21807/events",
      "html_url": "https://github.com/facebook/react/issues/21807",
      "id": 938630412,
      "node_id": "MDU6SXNzdWU5Mzg2MzA0MTI=",
      "number": 21807,
      "title": "React's JSX doesn't support namespace tags How do I set `throwIfNamespace: false`",
      "user": {
        "login": "krishnadevz",
        "id": 42638797,
        "node_id": "MDQ6VXNlcjQyNjM4Nzk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/42638797?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/krishnadevz",
        "html_url": "https://github.com/krishnadevz",
        "followers_url": "https://api.github.com/users/krishnadevz/followers",
        "following_url": "https://api.github.com/users/krishnadevz/following{/other_user}",
        "gists_url": "https://api.github.com/users/krishnadevz/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/krishnadevz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/krishnadevz/subscriptions",
        "organizations_url": "https://api.github.com/users/krishnadevz/orgs",
        "repos_url": "https://api.github.com/users/krishnadevz/repos",
        "events_url": "https://api.github.com/users/krishnadevz/events{/privacy}",
        "received_events_url": "https://api.github.com/users/krishnadevz/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-07T08:26:52Z",
      "updated_at": "2021-07-07T08:26:52Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\nError \r\n\r\n> ./src/components/svg/traveller.js\r\n> SyntaxError: /home/krishnadevz/jadoo/src/components/svg/traveller.js: Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.\r\n>    5 |         return (\r\n>    6 |             <div>\r\n> >  7 | <svg width=\"765\" height=\"764\" viewBox=\"0 0 765 764\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n>      |                                                                                                    ^^^^^^^^^^^\r\n>    8 | <rect width=\"765\" height=\"764\" fill=\"url(#pattern0)\"/>\r\n>    9 | <defs>\r\n>   10 | <pattern id=\"pattern0\" patternContentUnits=\"objectBoundingBox\" width=\"1\" height=\"1\">\r\n\r\nReact version:18\r\n\r\n## Steps To Reproduce\r\n\r\n1.I am importing a Figma file as an SVG and then I saving it in class-based react component and then export and using it in other components and that file is throwing an error. \r\n\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:https://codesandbox.io/s/traveller-9q5qy\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nThrowing error React's JSX doesn't support namespace tags\r\n\r\n## The expected behavior\r\nIt should be worked fine and also there is no .babelrc file so that I can set namespace : false i created and did it but still, it is not working please fix this issue or give a temp fix.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21806",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21806/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21806/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21806/events",
      "html_url": "https://github.com/facebook/react/issues/21806",
      "id": 938255509,
      "node_id": "MDU6SXNzdWU5MzgyNTU1MDk=",
      "number": 21806,
      "title": "React 17/18 custom Synthetic Events",
      "user": {
        "login": "lifeiscontent",
        "id": 180963,
        "node_id": "MDQ6VXNlcjE4MDk2Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/180963?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lifeiscontent",
        "html_url": "https://github.com/lifeiscontent",
        "followers_url": "https://api.github.com/users/lifeiscontent/followers",
        "following_url": "https://api.github.com/users/lifeiscontent/following{/other_user}",
        "gists_url": "https://api.github.com/users/lifeiscontent/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lifeiscontent/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lifeiscontent/subscriptions",
        "organizations_url": "https://api.github.com/users/lifeiscontent/orgs",
        "repos_url": "https://api.github.com/users/lifeiscontent/repos",
        "events_url": "https://api.github.com/users/lifeiscontent/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lifeiscontent/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 3079053919,
          "node_id": "MDU6TGFiZWwzMDc5MDUzOTE5",
          "url": "https://api.github.com/repos/facebook/react/labels/React%2018",
          "name": "React 18",
          "color": "26B0E4",
          "default": false,
          "description": "Bug reports, questions, and general feedback about React 18"
        },
        {
          "id": 710375792,
          "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
          "name": "Type: Discussion",
          "color": "fef2c0",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-06T20:59:28Z",
      "updated_at": "2021-07-06T20:59:28Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "The Previous solution in #10135 no longer works for React 17 or React 18.\r\n\r\nIt would be really convenient to be able to craft events that react handles for custom inputs.\r\n\r\ne.g. I have an accordion component and would like to add the ability to use it as an input, when the user clicks a button I'd like to dispatch a change event so their handlers get called. ",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21804",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21804/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21804/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21804/events",
      "html_url": "https://github.com/facebook/react/issues/21804",
      "id": 938044647,
      "node_id": "MDU6SXNzdWU5MzgwNDQ2NDc=",
      "number": 21804,
      "title": "[react 17] Bug: Click event being picked up by component rendered by the click",
      "user": {
        "login": "tholman",
        "id": 794999,
        "node_id": "MDQ6VXNlcjc5NDk5OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/794999?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tholman",
        "html_url": "https://github.com/tholman",
        "followers_url": "https://api.github.com/users/tholman/followers",
        "following_url": "https://api.github.com/users/tholman/following{/other_user}",
        "gists_url": "https://api.github.com/users/tholman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tholman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tholman/subscriptions",
        "organizations_url": "https://api.github.com/users/tholman/orgs",
        "repos_url": "https://api.github.com/users/tholman/repos",
        "events_url": "https://api.github.com/users/tholman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-06T15:59:10Z",
      "updated_at": "2021-07-06T15:59:10Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "React version: 17.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Using a class component, if a click event changes some state, which renders a new component, and the new component adds an event listener on its `componentDidMount` checking for clicks, the new component will trigger that event\r\n\r\nLink to code example: https://codepen.io/tholman/pen/87c661f0c893a2f8727db927c48d6d12\r\n\r\n(this does not happen if the created component uses hooks to add its event listener)\r\n\r\n## The current behavior\r\nA state change via a click that causes a new component to be rendered, that new component can pick up the original click event that created it, which seems like its reaching back in time, to so speak.\r\n\r\n## The expected behavior\r\nPerhaps this is now intended behavior with the react 17 event changes (although it doesn't happen if I add the event listener with a hook on a functional component, but I would expect that if a click event causes a render, and the listener is added on the `componentDidMount` function, I would assume the \"click\" is complete, and wouldn't be detected.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21802",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21802/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21802/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21802/events",
      "html_url": "https://github.com/facebook/react/issues/21802",
      "id": 937377813,
      "node_id": "MDU6SXNzdWU5MzczNzc4MTM=",
      "number": 21802,
      "title": "[React 18] Possible Suspense Bug - Thrown error causes corrupted page",
      "user": {
        "login": "flybayer",
        "id": 8813276,
        "node_id": "MDQ6VXNlcjg4MTMyNzY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8813276?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flybayer",
        "html_url": "https://github.com/flybayer",
        "followers_url": "https://api.github.com/users/flybayer/followers",
        "following_url": "https://api.github.com/users/flybayer/following{/other_user}",
        "gists_url": "https://api.github.com/users/flybayer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flybayer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flybayer/subscriptions",
        "organizations_url": "https://api.github.com/users/flybayer/orgs",
        "repos_url": "https://api.github.com/users/flybayer/repos",
        "events_url": "https://api.github.com/users/flybayer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flybayer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 3079053919,
          "node_id": "MDU6TGFiZWwzMDc5MDUzOTE5",
          "url": "https://api.github.com/repos/facebook/react/labels/React%2018",
          "name": "React 18",
          "color": "26B0E4",
          "default": false,
          "description": "Bug reports, questions, and general feedback about React 18"
        },
        {
          "id": 710722093,
          "node_id": "MDU6TGFiZWw3MTA3MjIwOTM=",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation",
          "name": "Type: Needs Investigation",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-07-05T21:41:27Z",
      "updated_at": "2021-07-07T23:54:16Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "I've found what I think to be a React bug, although it could be something we are doing wrong inside Blitz.js\r\n\r\n`React 18.0.0-alpha-ed6c091fe-20210701`\r\n\r\n## Basic Explanation\r\n\r\nThe position of a top level, unneeded `<Suspense>` component next to an `<ErrorBoundary>` causes odd UI rendering or totally corrupted page.\r\n\r\nFollowing are different variations of [this code](https://github.com/flybayer/blitz-react18/blob/main/app/pages/_app.tsx#L15-L22) inside `_app.tsx` (which is the same top level root as Next.js)\r\n\r\nThis code in `_app.tsx` causes a totally corrupted page (shows content on page that's no longer managed by React):\r\n```tsx\r\n    <Suspense fallback=\"Loading...\">\r\n      <ErrorBoundary FallbackComponent={RootErrorFallback}>\r\n        <Component {...pageProps} />\r\n      </ErrorBoundary>\r\n    </Suspense>\r\n```\r\n\r\nThis code in `_app.tsx` results in a correct end-result but has janky page transition.\r\n\r\n```tsx\r\n    <ErrorBoundary FallbackComponent={RootErrorFallback}>\r\n      <Suspense fallback=\"Loading...\">\r\n        <Component {...pageProps} />\r\n      </Suspense>\r\n    </ErrorBoundary>\r\n```\r\n\r\nThis code in `_app.tsx` without `<Suspense>` works flawless.\r\n\r\n```tsx\r\n    <ErrorBoundary FallbackComponent={RootErrorFallback}>\r\n      <Component {...pageProps} />\r\n    </ErrorBoundary>\r\n```\r\n\r\nI feel like this is a React bug because, to my knowledge, position of a `<Suspense>` component should have zero affect on a thrown error or ErrorBoundary.\r\n\r\n## Further Explanation\r\n\r\nIn Blitz.js, we have a feature for restricting access to certain pages based on the user login status. We implement this [by throwing a custom `RedirectError`](https://github.com/blitz-js/blitz/blob/canary/packages/core/src/auth/auth-client.ts#L68-L74). And then inside our `<ErrorBoundary>` component, [we call `router.push()`](https://github.com/blitz-js/blitz/blob/canary/packages/core/src/error-boundary.tsx#L94-L98) when RedirectError is caught. And while the ErrorBoundary is in that temporary in-between state, we [render null](https://github.com/blitz-js/blitz/blob/canary/packages/core/src/error-boundary.tsx#L154-L156). The issue described above occurs when a page transition is initiated via RedirectError.\r\n\r\nPlease let me know if there's something wrong with this approach or if there's a better way to implement the pattern. üôè \r\n\r\n## To Reproduce\r\n\r\n1. Open this codesandbox: https://codesandbox.io/s/sharp-antonelli-u982e\r\n1. Wait for the deps to install and home page to load (takes a bit)\r\n1. See both the contents of `/protected` and `/` on the same page:\r\n   - React dev tools shows that the `/protected` contents are no longer in the React tree\r\n![image](https://user-images.githubusercontent.com/8813276/124835823-f3c33880-df4f-11eb-9371-e8d0aee570b9.png)",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21801",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21801/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21801/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21801/events",
      "html_url": "https://github.com/facebook/react/issues/21801",
      "id": 937321829,
      "node_id": "MDU6SXNzdWU5MzczMjE4Mjk=",
      "number": 21801,
      "title": "Bug: radio and checkbox controlled checked property is not updated when browser restores form state",
      "user": {
        "login": "TheCloudlessSky",
        "id": 613788,
        "node_id": "MDQ6VXNlcjYxMzc4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/613788?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCloudlessSky",
        "html_url": "https://github.com/TheCloudlessSky",
        "followers_url": "https://api.github.com/users/TheCloudlessSky/followers",
        "following_url": "https://api.github.com/users/TheCloudlessSky/following{/other_user}",
        "gists_url": "https://api.github.com/users/TheCloudlessSky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TheCloudlessSky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TheCloudlessSky/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCloudlessSky/orgs",
        "repos_url": "https://api.github.com/users/TheCloudlessSky/repos",
        "events_url": "https://api.github.com/users/TheCloudlessSky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TheCloudlessSky/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 5,
      "created_at": "2021-07-05T19:25:33Z",
      "updated_at": "2021-07-06T19:48:35Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Add a textbox, two radio buttons (or checkboxes) controlling the `checked` property with state, and a `button[type=submit]`.\r\n2. Check off the second item (\"Bananas\").\r\n3. Enter text into the \"Your name\" textbox.\r\n4. Right click on the tab and duplicate it. Alternative: close + re-open the tab, or navigate away to a different page and go back.\r\n\r\n```javascript\r\nfunction App() {\r\n  const [fruit, updateFruit] = useState(\"apple\");\r\n  const [name, updateName] = useState(\"\");\r\n\r\n  function onFruitChange(e) {\r\n    const newFruit = e.target.value;\r\n    updateFruit(newFruit);\r\n  }\r\n\r\n  function onNameChange(e) {\r\n    const newName = e.target.value;\r\n    updateName(newName);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        <input type=\"radio\" name=\"fruit\" value=\"apple\" checked={fruit === \"apple\"} onChange={onFruitChange} />\r\n        Apples\r\n      </label>\r\n      <label>\r\n        <input type=\"radio\" name=\"fruit\" value=\"banana\" checked={fruit === \"banana\"} onChange={onFruitChange} />\r\n        Bananas\r\n      </label>\r\n      <div>\r\n        <input type=\"text\" name=\"name\" placeholder=\"Your name\" value={name} onChange={onNameChange} />\r\n      </div>\r\n      <div>\r\n        Preferred fruit:\r\n        {fruit === \"apple\" ? \"Apples\" : \"Bananas\"}\r\n      </div>\r\n      <br />\r\n      <div>Your name: {name}</div>\r\n      <hr />\r\n      <br />\r\n      <div>\r\n        <button type=\"submit\">Save</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nhttps://user-images.githubusercontent.com/613788/124511769-e9187000-dda4-11eb-99f9-e1334d4057c3.mp4\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/s/hungry-glitter-ut79s\r\n\r\n**IMPORTANT**: This CodeSandbox won't work because the browser will be too early when restoring the form state (transpiling is too slow). I suggest taking this script to a local server to confirm that the browser was able to properly restore form state when loading the page.\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nThe `banana` radio is checked and `Preferred fruit: Apples` is shown. The react state has `fruit === 'apple'` but the browser has the opposite state.\r\n\r\nI've confirmed that this behavior happens with `input[type=checkbox]` too.\r\n\r\n## The expected behavior\r\n\r\nTo match the behavior of other controlled inputs like the textbox, `apple` radio should be checked and `Preferred fruit: Apples` should be shown. The input `checked` property isn't being synced. \r\n\r\n## Related issues\r\n\r\n- https://github.com/facebook/react/issues/10657\r\n  - I'm not using SSR though.\r\n- https://github.com/facebook/react/issues/18502\r\n  - Maybe related, but I'm not using `defaultChecked`.\r\n- https://github.com/vercel/next.js/issues/6128\r\n  - Similar issues.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21798",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21798/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21798/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21798/events",
      "html_url": "https://github.com/facebook/react/issues/21798",
      "id": 936295652,
      "node_id": "MDU6SXNzdWU5MzYyOTU2NTI=",
      "number": 21798,
      "title": "[DevTools] Named hooks umbrella",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-03T17:26:23Z",
      "updated_at": "2021-07-13T17:38:27Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "This is an umbrella issue to track outstanding issues related to the DevTools named hooks project:\r\n\r\n### MVP\r\n* #16474\r\n* #21794\r\n* #21811\r\n* #21793\r\n* #21817\r\n* #21822\r\n* #21818\r\n* #21834\r\n* #21792\r\n* #21868\r\n* #21796\r\n\r\n### Post-MVP\r\n* #21782\r\n* #21855\r\n* #21856",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21796",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21796/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21796/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21796/events",
      "html_url": "https://github.com/facebook/react/issues/21796",
      "id": 936295015,
      "node_id": "MDU6SXNzdWU5MzYyOTUwMTU=",
      "number": 21796,
      "title": "[DevTools] Improve Fast Refresh support for named hook detection",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-03T17:22:22Z",
      "updated_at": "2021-07-03T17:22:22Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "#21641 added support to DevTools for showing hook names for the inspected component. For performance reasons, this feature caches source maps and ASTs by file name to avoid re-parsing any time a new component is inspected.\r\n\r\nAs https://github.com/facebook/react/pull/21790#issuecomment-873289051 mentions:\r\n> A new compiled script can be loaded into the VM that has the same URL (`hookSource.fileName`), same source map URL and even the same original source URL(s) as a previously loaded script, but contains completely different code.\r\n\r\nSo our cache may be incorrect in the case of Fast Refresh (or other hot-reloading system).\r\n\r\nThe comment goes on to say:\r\n> We may want to just invalidate the world during Fast Refresh.\r\n\r\nThe trouble with this idea is that DevTools is not explicitly notified when Fast Refresh reloads a component.\r\n\r\nThe React core team has talked about the idea of adding a new, DEV-only `Remount` bit/flag to Fibers to notify DevTools of this case. That would be a helpful signal here too that any cached source/AST should be cleared when hooks are next inspected. (The flag would need to be passed from backend to frontend as part of the [\"inspected element\" payload](https://github.com/facebook/react/blob/master/packages/react-devtools/OVERVIEW.md#inspecting-an-element).)",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21787",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21787/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21787/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21787/events",
      "html_url": "https://github.com/facebook/react/issues/21787",
      "id": 935436824,
      "node_id": "MDU6SXNzdWU5MzU0MzY4MjQ=",
      "number": 21787,
      "title": "React 18 Enable Better ES6 Class Integration With Hooks",
      "user": {
        "login": "mbostwick",
        "id": 547590,
        "node_id": "MDQ6VXNlcjU0NzU5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/547590?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mbostwick",
        "html_url": "https://github.com/mbostwick",
        "followers_url": "https://api.github.com/users/mbostwick/followers",
        "following_url": "https://api.github.com/users/mbostwick/following{/other_user}",
        "gists_url": "https://api.github.com/users/mbostwick/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mbostwick/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mbostwick/subscriptions",
        "organizations_url": "https://api.github.com/users/mbostwick/orgs",
        "repos_url": "https://api.github.com/users/mbostwick/repos",
        "events_url": "https://api.github.com/users/mbostwick/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mbostwick/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 3079053919,
          "node_id": "MDU6TGFiZWwzMDc5MDUzOTE5",
          "url": "https://api.github.com/repos/facebook/react/labels/React%2018",
          "name": "React 18",
          "color": "26B0E4",
          "default": false,
          "description": "Bug reports, questions, and general feedback about React 18"
        },
        {
          "id": 710375792,
          "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
          "name": "Type: Discussion",
          "color": "fef2c0",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-07-02T05:44:05Z",
      "updated_at": "2021-07-04T07:19:49Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Problem Statement\r\nOne of the hardest part of working with javascript over the years has been keeping dealing with version support and change over time of third party code. It seems like react 18 is going to focus on performance and server side viewing framework.  **However, one of the big divides in many products, components and libraries is using ES6 Classes vs Purely Functional Components.** \r\n\r\n# Timing Details\r\nIn past versions of react life cycle methods required use of classes. Modern javascript can use hoisting to make functional components faster to load. However, class components are also more consistent with larger market share of developers. The main motivation behind hooks in react though was to enable code to be branched and worked on more independently and by concurrent developers. Right now, functional components are seen as a place to make things faster but es class components are still considered ok. \r\n\r\n# Future Outlook\r\nIn the future hooks are likely to grow, developers who are use to older versions of react or who are use to OOP are likely to prefer class components, leading to lots of react code styles in lots of ways. This may make maintenance and community packages more likely to break as future versions of react try to take advantage of browsers IDL's and ECMA advancements.  React 18 is also likely to add more of a footprint and more use cases. React native should also be considered, as more and more companies find value in javascript.  Overall the community effect and the maintenance of react is likely to get harder and not easier, but the sooner es6 class components and functional components patterns  can be well defined the more developers can adjust. \r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21783",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21783/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21783/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21783/events",
      "html_url": "https://github.com/facebook/react/issues/21783",
      "id": 935136652,
      "node_id": "MDU6SXNzdWU5MzUxMzY2NTI=",
      "number": 21783,
      "title": "Community feedback on console silencing",
      "user": {
        "login": "billyjanitsch",
        "id": 1158733,
        "node_id": "MDQ6VXNlcjExNTg3MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1158733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/billyjanitsch",
        "html_url": "https://github.com/billyjanitsch",
        "followers_url": "https://api.github.com/users/billyjanitsch/followers",
        "following_url": "https://api.github.com/users/billyjanitsch/following{/other_user}",
        "gists_url": "https://api.github.com/users/billyjanitsch/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/billyjanitsch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/billyjanitsch/subscriptions",
        "organizations_url": "https://api.github.com/users/billyjanitsch/orgs",
        "repos_url": "https://api.github.com/users/billyjanitsch/repos",
        "events_url": "https://api.github.com/users/billyjanitsch/events{/privacy}",
        "received_events_url": "https://api.github.com/users/billyjanitsch/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710375792,
          "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
          "name": "Type: Discussion",
          "color": "fef2c0",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 21,
      "created_at": "2021-07-01T19:08:35Z",
      "updated_at": "2021-07-13T14:27:47Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "Hi, I know this issue has been discussed endlessly so I apologize for bringing it up again. I hope this issue is net helpful. ü§û \r\n\r\nQuick summary: as of https://github.com/facebook/react/pull/18547, React 17 silences console logs during the second rendering pass in strict mode, in dev. It's a trade-off between the confusion of logging multiple times for a single render pass and the confusion of only logging once even though the code was actually called twice.\r\n\r\nNote that there's an outstanding PR to make it configurable (https://github.com/facebook/react/pull/19710) but it seems to be stalled awaiting review.\r\n\r\nSince the change was released, I've seen a number of issues in which folks have been confused by the behavior, e.g.:\r\n\r\n- https://github.com/facebook/react/issues/20835\r\n- https://github.com/facebook/react/issues/20982\r\n- https://github.com/facebook/react/issues/20367\r\n- https://github.com/facebook/react/issues/20090\r\n- https://github.com/facebook/react/issues/21178\r\n- https://github.com/facebook/react/issues/21126\r\n- https://github.com/facebook/react/issues/20851\r\n- https://github.com/facebook/react/issues/20575\r\n\r\nThe response from the core team has generally been that, yes, this behavior can be confusing, but the previous behavior was equally if not more confusing. It's a trade-off without a clear answer. (Examples: [1](https://github.com/facebook/react/issues/20090#issuecomment-715926549), [2](https://github.com/facebook/react/issues/20835#issuecomment-781393974), [3](https://github.com/facebook/react/issues/20367#issuecomment-737610144).)\r\n\r\nI totally understand this perspective and I've tried to internalize it, but, frankly, the longer it's been since the release, the more it seems to me like the new behavior is actually just significantly more confusing for most people. My signal is:\r\n1. Anecdotally, it's a recurring source of confusion within my company, much more so than the old behavior was. It's also probably the source of the most \"oh, that's weird\" reactions (vs. \"oh, I get it now\") when explained, compared with other React nuances.\r\n2. The change was only released 8 months ago and there are already many GitHub issues expressing confusion about it, seemingly more than there ever were for the old behavior. (There used to be more instances where people weren't aware that strict mode double-invokes components, but it's not that the new behavior makes this any more clear, it just means that fewer people are now learning this fact, which doesn't seem good?) The rate of new issues also doesn't seem to be slowing as was [hypothesized](https://github.com/facebook/react/issues/20367#issuecomment-737764279).\r\n3. The implementing PR ([#18547](https://github.com/facebook/react/pull/18547)) currently has 19 downvotes vs. 2 upvotes. Obviously people who dislike the change are more likely to downvote, but PRs are rarely this controversial and in fact this is the [most downvoted non-docs PR](https://github.com/facebook/react/pulls?q=is%3Apr+sort%3Areactions--1-desc+is%3Aclosed) in the whole repo.\r\n\r\nAltogether, the change was clearly well-reasoned and well-intentioned, but now that it's had some time to settle, what I'm asking is:\r\n1. Does my perspective on the community reaction align with your perception?\r\n2. Have you observed a different reaction internally at FB?\r\n3. In aggregate, does any of this change your original perspective at all?\r\n\r\nI hope this is a fair take and a helpful set of questions to ask. Thanks for taking the time to read.\r\n\r\n---\r\n\r\n(FWIW, if I had to guess, I'd propose that one reason for the new behavior being more confusing is that the old behavior is only confusing until you learn that strict mode = double render, whereas the new behavior continues to be confusing after you learn it because there are subtleties. e.g., \"which pass gets silenced again?\", \"oh, right, it's the second one, so if you log a value and render it, the console might show something different than the screen\", \"what about when you set state in render?\", \"what about refs?\", etc.)",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21782",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21782/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21782/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21782/events",
      "html_url": "https://github.com/facebook/react/issues/21782",
      "id": 935067126,
      "node_id": "MDU6SXNzdWU5MzUwNjcxMjY=",
      "number": 21782,
      "title": "[DevTools] Improve hook names performance with extended source maps",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "bvaughn",
          "id": 29597,
          "node_id": "MDQ6VXNlcjI5NTk3",
          "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bvaughn",
          "html_url": "https://github.com/bvaughn",
          "followers_url": "https://api.github.com/users/bvaughn/followers",
          "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
          "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
          "organizations_url": "https://api.github.com/users/bvaughn/orgs",
          "repos_url": "https://api.github.com/users/bvaughn/repos",
          "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
          "received_events_url": "https://api.github.com/users/bvaughn/received_events",
          "type": "User",
          "site_admin": false
        },
        {
          "login": "jstejada",
          "id": 1271509,
          "node_id": "MDQ6VXNlcjEyNzE1MDk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1271509?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jstejada",
          "html_url": "https://github.com/jstejada",
          "followers_url": "https://api.github.com/users/jstejada/followers",
          "following_url": "https://api.github.com/users/jstejada/following{/other_user}",
          "gists_url": "https://api.github.com/users/jstejada/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jstejada/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jstejada/subscriptions",
          "organizations_url": "https://api.github.com/users/jstejada/orgs",
          "repos_url": "https://api.github.com/users/jstejada/repos",
          "events_url": "https://api.github.com/users/jstejada/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jstejada/received_events",
          "type": "User",
          "site_admin": false
        },
        {
          "login": "motiz88",
          "id": 2246565,
          "node_id": "MDQ6VXNlcjIyNDY1NjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2246565?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/motiz88",
          "html_url": "https://github.com/motiz88",
          "followers_url": "https://api.github.com/users/motiz88/followers",
          "following_url": "https://api.github.com/users/motiz88/following{/other_user}",
          "gists_url": "https://api.github.com/users/motiz88/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/motiz88/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/motiz88/subscriptions",
          "organizations_url": "https://api.github.com/users/motiz88/orgs",
          "repos_url": "https://api.github.com/users/motiz88/repos",
          "events_url": "https://api.github.com/users/motiz88/events{/privacy}",
          "received_events_url": "https://api.github.com/users/motiz88/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 16,
      "created_at": "2021-07-01T17:32:15Z",
      "updated_at": "2021-07-09T14:32:31Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "#21641 adds the ability for DevTools to display hook \"names\". The way this works is:\r\n\r\n1. Run the component function to detect where all the hook calls are made (by inspecting the call stack).\r\n2. Load source files.\r\n3. Look for source maps and load them (if they exist).\r\n4. Parse source maps.\r\n5. Convert line/column number in compiled code to original source code.\r\n6. Parse original source code into AST (this is expensive).\r\n7. Extract names.\r\n\r\nWhat if we had a custom transform that inferred these names during compilation and _inserted metadata into the source map itself_? Then DevTools could bail after step 4 and skip the expensive AST parsing step and the heuristics for inferring hook names.\r\n\r\nIt could still fall back to the more expensive step if this metadata wasn't available, but this would enable the feature to better support large apps where parsing the AST is prohibitively expensive.\r\n\r\nSee this comment below for a detailed explanation of how this might be implemented: https://github.com/facebook/react/issues/21782#issuecomment-872599422\r\n\r\n---\r\n\r\nNote that this issue has been tagged \"**good first issue**\" because it's a standalone contribution that doesn't require knowledge of React internals, but it's a pretty involved task. Experience with ASTs and Source Map extensions would be very helpful.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21777",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21777/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21777/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21777/events",
      "html_url": "https://github.com/facebook/react/issues/21777",
      "id": 934888896,
      "node_id": "MDU6SXNzdWU5MzQ4ODg4OTY=",
      "number": 21777,
      "title": "[DevTools] Combine view highlighting code",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        },
        {
          "id": 725156255,
          "node_id": "MDU6TGFiZWw3MjUxNTYyNTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/good%20first%20issue%20(taken)",
          "name": "good first issue (taken)",
          "color": "b60205",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "sj-rai",
        "id": 36308078,
        "node_id": "MDQ6VXNlcjM2MzA4MDc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/36308078?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sj-rai",
        "html_url": "https://github.com/sj-rai",
        "followers_url": "https://api.github.com/users/sj-rai/followers",
        "following_url": "https://api.github.com/users/sj-rai/following{/other_user}",
        "gists_url": "https://api.github.com/users/sj-rai/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sj-rai/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sj-rai/subscriptions",
        "organizations_url": "https://api.github.com/users/sj-rai/orgs",
        "repos_url": "https://api.github.com/users/sj-rai/repos",
        "events_url": "https://api.github.com/users/sj-rai/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sj-rai/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "sj-rai",
          "id": 36308078,
          "node_id": "MDQ6VXNlcjM2MzA4MDc4",
          "avatar_url": "https://avatars.githubusercontent.com/u/36308078?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sj-rai",
          "html_url": "https://github.com/sj-rai",
          "followers_url": "https://api.github.com/users/sj-rai/followers",
          "following_url": "https://api.github.com/users/sj-rai/following{/other_user}",
          "gists_url": "https://api.github.com/users/sj-rai/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sj-rai/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sj-rai/subscriptions",
          "organizations_url": "https://api.github.com/users/sj-rai/orgs",
          "repos_url": "https://api.github.com/users/sj-rai/repos",
          "events_url": "https://api.github.com/users/sj-rai/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sj-rai/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2021-07-01T14:09:05Z",
      "updated_at": "2021-07-08T06:24:44Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "DevTools currently has two views that manage highlighting things in the DOM:\r\n* [`backend/views/Highlighter`](https://github.com/facebook/react/tree/main/packages/react-devtools-shared/src/backend/views/Highlighter): highlights the DOM for the currently selected element\r\n* [`backend/views/TraceUpdates`](https://github.com/facebook/react/tree/main/packages/react-devtools-shared/src/backend/views/TraceUpdates): highlights the DOM when a component renders/updates\r\n\r\nIt would be nice if this was refactored to use a single, Canvas-based solution.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21770",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21770/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21770/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21770/events",
      "html_url": "https://github.com/facebook/react/pull/21770",
      "id": 933095777,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjgwMzU2MjQ3",
      "number": 21770,
      "title": "Bump ini from 1.3.4 to 1.3.8 in /scripts/bench",
      "user": {
        "login": "dependabot[bot]",
        "id": 49699333,
        "node_id": "MDM6Qm90NDk2OTkzMzM=",
        "avatar_url": "https://avatars.githubusercontent.com/in/29110?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dependabot%5Bbot%5D",
        "html_url": "https://github.com/apps/dependabot",
        "followers_url": "https://api.github.com/users/dependabot%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dependabot%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/dependabot%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/dependabot%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dependabot%5Bbot%5D/received_events",
        "type": "Bot",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        },
        {
          "id": 1757816973,
          "node_id": "MDU6TGFiZWwxNzU3ODE2OTcz",
          "url": "https://api.github.com/repos/facebook/react/labels/dependencies",
          "name": "dependencies",
          "color": "0366d6",
          "default": false,
          "description": "Pull requests that update a dependency file"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-29T20:55:20Z",
      "updated_at": "2021-07-01T18:45:02Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21770",
        "html_url": "https://github.com/facebook/react/pull/21770",
        "diff_url": "https://github.com/facebook/react/pull/21770.diff",
        "patch_url": "https://github.com/facebook/react/pull/21770.patch"
      },
      "body": "Bumps [ini](https://github.com/isaacs/ini) from 1.3.4 to 1.3.8.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/ini/commit/a2c5da86604bc2238fe393c5ff083bf23a9910eb\"><code>a2c5da8</code></a> 1.3.8</li>\n<li><a href=\"https://github.com/npm/ini/commit/af5c6bb5dca6f0248c153aa87e25bddfc515ff6e\"><code>af5c6bb</code></a> Do not use Object.create(null)</li>\n<li><a href=\"https://github.com/npm/ini/commit/8b648a1ac49e1b3b7686ea957e0b95e544bc6ec1\"><code>8b648a1</code></a> don't test where our devdeps don't even work</li>\n<li><a href=\"https://github.com/npm/ini/commit/c74c8af35f32b801a7e82a8309eab792a95932f6\"><code>c74c8af</code></a> 1.3.7</li>\n<li><a href=\"https://github.com/npm/ini/commit/024b8b55ac1c980c6225607b007714c54eb501ba\"><code>024b8b5</code></a> update deps, add linting</li>\n<li><a href=\"https://github.com/npm/ini/commit/032fbaf5f0b98fce70c8cc380e0d05177a9c9073\"><code>032fbaf</code></a> Use Object.create(null) to avoid default object property hazards</li>\n<li><a href=\"https://github.com/npm/ini/commit/2da90391ef70db41d10f013e3a87f9a8c5d01a72\"><code>2da9039</code></a> 1.3.6</li>\n<li><a href=\"https://github.com/npm/ini/commit/cfea636f534b5ca7550d2c28b7d1a95d936d56c6\"><code>cfea636</code></a> better git push script, before publish instead of after</li>\n<li><a href=\"https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1\"><code>56d2805</code></a> do not allow invalid hazardous string as section name</li>\n<li><a href=\"https://github.com/npm/ini/commit/738eca59d77d8cfdddf5c477c17a0d8f8fbfe0fd\"><code>738eca5</code></a> v1.3.5</li>\n<li>Additional commits viewable in <a href=\"https://github.com/isaacs/ini/compare/v1.3.4...v1.3.8\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~isaacs\">isaacs</a>, a new releaser for ini since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ini&package-manager=npm_and_yarn&previous-version=1.3.4&new-version=1.3.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/react/network/alerts).\n\n</details>",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21769",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21769/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21769/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21769/events",
      "html_url": "https://github.com/facebook/react/pull/21769",
      "id": 933095755,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjgwMzU2MjMw",
      "number": 21769,
      "title": "Bump dot-prop from 4.2.0 to 4.2.1 in /scripts/bench",
      "user": {
        "login": "dependabot[bot]",
        "id": 49699333,
        "node_id": "MDM6Qm90NDk2OTkzMzM=",
        "avatar_url": "https://avatars.githubusercontent.com/in/29110?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dependabot%5Bbot%5D",
        "html_url": "https://github.com/apps/dependabot",
        "followers_url": "https://api.github.com/users/dependabot%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dependabot%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/dependabot%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/dependabot%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dependabot%5Bbot%5D/received_events",
        "type": "Bot",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        },
        {
          "id": 1757816973,
          "node_id": "MDU6TGFiZWwxNzU3ODE2OTcz",
          "url": "https://api.github.com/repos/facebook/react/labels/dependencies",
          "name": "dependencies",
          "color": "0366d6",
          "default": false,
          "description": "Pull requests that update a dependency file"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-29T20:55:18Z",
      "updated_at": "2021-06-29T21:01:27Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21769",
        "html_url": "https://github.com/facebook/react/pull/21769",
        "diff_url": "https://github.com/facebook/react/pull/21769.diff",
        "patch_url": "https://github.com/facebook/react/pull/21769.patch"
      },
      "body": "Bumps [dot-prop](https://github.com/sindresorhus/dot-prop) from 4.2.0 to 4.2.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/sindresorhus/dot-prop/releases\">dot-prop's releases</a>.</em></p>\n<blockquote>\n<h2>v4.2.1</h2>\n<ul>\n<li>Backport <a href=\"https://github.com/sindresorhus/dot-prop/commit/3039c8c07f6fdaa8b595ec869ae0895686a7a0f2\">https://github.com/sindresorhus/dot-prop/commit/3039c8c07f6fdaa8b595ec869ae0895686a7a0f2</a> to the v4.x release line.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/sindresorhus/dot-prop/commit/c914124f418f55edea27928e89c94d931babe587\"><code>c914124</code></a> feat: patch 4.2.0 with fixes for CVE-2020-8116</li>\n<li>See full diff in <a href=\"https://github.com/sindresorhus/dot-prop/compare/v4.2.0...v4.2.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=dot-prop&package-manager=npm_and_yarn&previous-version=4.2.0&new-version=4.2.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/react/network/alerts).\n\n</details>",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21767",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21767/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21767/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21767/events",
      "html_url": "https://github.com/facebook/react/issues/21767",
      "id": 932934998,
      "node_id": "MDU6SXNzdWU5MzI5MzQ5OTg=",
      "number": 21767,
      "title": "The primary branch has been renamed from \"master\" to \"main\"",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1775958285,
          "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
          "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
          "name": "React Core Team",
          "color": "9149d1",
          "default": false,
          "description": "Opened by a member of the React Core Team"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-06-29T17:19:34Z",
      "updated_at": "2021-06-30T13:35:40Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "# Renaming `master` branch to `main`\r\n\r\nAs a part of a broad effort to avoid problematic terminology in our software, we are renaming our default branch from `master` to `main`. We recognize that this is only a small step, but it is an opportunity to make our project and community more welcoming to historically marginalized communities.\r\n\r\n## How does this impact my development process?\r\n\r\nThere should be very little impact. GitHub will surface the branch name change in your fork, if you have one. For new forks, you will automatically have `main` as the default branch.\r\n\r\nWe encourage the use of feature branches for local development. The only change in practice is changing which branch your feature branch is started from. When sending Pull Requests on GitHub, the target will default to our `main` branch, so there are no changes to make there.\r\n\r\n## I have a lot of tools that depend on `master` being the upstream branch name. How can I fix that?\r\n\r\n`master` has always been only a default value and a number of projects have used other names for their primary development branch for years. We encourage updating your tooling to instead dynamically determine the branch to use. [This article](https://aj.codes/post/branch-agnostic-git-aliases/) provides insight into how you can do that. Additionally, you can always set up a branch locally of any name to track our `main` branch.\r\n\r\n## I'd like to do this for my own projects, do you have any documentation on how this works?\r\n\r\n[GitHub has published a guide documenting their tooling.](https://github.com/github/renaming) We recommend reading that and the accompanying documentation.\r\n\r\nIf you're a Facebook employee looking to do this for a project you maintain, please reach out to the Open Source Team.\r\n\r\n## My PR is failing because of `ci/circleci: get_base_build`\r\nThis is because the `master` branch has been renamed to `main`, but our Circle CI scripts used to refer to `master` by name. To fix this, just rebase your branch on top of `main` to get the latest version of the Circle CI scripts:\r\n```sh\r\ngit fetch origin\r\ngit rebase -i origin/main\r\n```",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21766",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21766/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21766/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21766/events",
      "html_url": "https://github.com/facebook/react/pull/21766",
      "id": 932624509,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc5OTQ2NTIw",
      "number": 21766,
      "title": "fix: restore execution context after RetryAfterError completed",
      "user": {
        "login": "eps1lon",
        "id": 12292047,
        "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eps1lon",
        "html_url": "https://github.com/eps1lon",
        "followers_url": "https://api.github.com/users/eps1lon/followers",
        "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
        "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
        "organizations_url": "https://api.github.com/users/eps1lon/orgs",
        "repos_url": "https://api.github.com/users/eps1lon/repos",
        "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eps1lon/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-29T12:51:53Z",
      "updated_at": "2021-07-13T17:47:32Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21766",
        "html_url": "https://github.com/facebook/react/pull/21766",
        "diff_url": "https://github.com/facebook/react/pull/21766.diff",
        "patch_url": "https://github.com/facebook/react/pull/21766.patch"
      },
      "body": "Restore the previous `executionContext` after we retried. `RetryAfterError` was added in https://github.com/facebook/react/pull/18771\r\n\r\nCloses #21765\r\n\r\nTest passed in \"legacy mode\" but fails in \"concurrent mode\"\r\n\r\n## Test plan\r\n\r\n- [x] CI green",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21765",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21765/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21765/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21765/events",
      "html_url": "https://github.com/facebook/react/issues/21765",
      "id": 932622934,
      "node_id": "MDU6SXNzdWU5MzI2MjI5MzQ=",
      "number": 21765,
      "title": "React 18: \"missing act()\" warnings partially missing if a prior render threw",
      "user": {
        "login": "eps1lon",
        "id": 12292047,
        "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eps1lon",
        "html_url": "https://github.com/eps1lon",
        "followers_url": "https://api.github.com/users/eps1lon/followers",
        "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
        "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
        "organizations_url": "https://api.github.com/users/eps1lon/orgs",
        "repos_url": "https://api.github.com/users/eps1lon/repos",
        "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eps1lon/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 3079053919,
          "node_id": "MDU6TGFiZWwzMDc5MDUzOTE5",
          "url": "https://api.github.com/repos/facebook/react/labels/React%2018",
          "name": "React 18",
          "color": "26B0E4",
          "default": false,
          "description": "Bug reports, questions, and general feedback about React 18"
        },
        {
          "id": 710375792,
          "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
          "name": "Type: Discussion",
          "color": "fef2c0",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-29T12:50:36Z",
      "updated_at": "2021-06-29T12:52:36Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "Specifically `An update to * inside a test was not wrapped in act(...)` is not logged when a prior update threw. \r\n\r\n<details>\r\n<summary>failing test (#21766)</summary>\r\n\r\n```js\r\n// @gate __DEV__\r\nit('warns if a setState is called outside of act(...) after a component threw', () => {\r\n  let setValue = null;\r\n  function App({defaultValue}) {\r\n    if (defaultValue === undefined) {\r\n      throw new Error();\r\n    }\r\n    const [value, _setValue] = React.useState(defaultValue);\r\n    setValue = _setValue;\r\n    return value;\r\n  }\r\n\r\n  expect(() => {\r\n    act(() => {\r\n      render(<App defaultValue={undefined} />, container);\r\n    });\r\n  }).toThrow();\r\n\r\n  act(() => {\r\n    rerender(<App defaultValue={0} />, container);\r\n  });\r\n\r\n  expect(() => setValue(1)).toErrorDev([\r\n    'An update to App inside a test was not wrapped in act(...).',\r\n  ]);\r\n});\r\n```\r\n</details>\r\n\r\nWhat I noticed is that in https://github.com/facebook/react/blob/27c9c95e23ddedb9163373950e364dd62038f6c0/packages/react-reconciler/src/ReactFiberWorkLoop.new.js#L2855-L2865\r\nthe `executionContext` will still equal `RetryAfterError` when we would expect a \"missing act\" warning.\r\n\r\n\"missing act\" warnings are working as expected with legacy roots.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21761",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21761/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21761/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21761/events",
      "html_url": "https://github.com/facebook/react/issues/21761",
      "id": 930986716,
      "node_id": "MDU6SXNzdWU5MzA5ODY3MTY=",
      "number": 21761,
      "title": "Bug: Picture elements fail to update to appropriate source image on window resize in Safari",
      "user": {
        "login": "bruncun",
        "id": 6834144,
        "node_id": "MDQ6VXNlcjY4MzQxNDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6834144?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bruncun",
        "html_url": "https://github.com/bruncun",
        "followers_url": "https://api.github.com/users/bruncun/followers",
        "following_url": "https://api.github.com/users/bruncun/following{/other_user}",
        "gists_url": "https://api.github.com/users/bruncun/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bruncun/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bruncun/subscriptions",
        "organizations_url": "https://api.github.com/users/bruncun/orgs",
        "repos_url": "https://api.github.com/users/bruncun/repos",
        "events_url": "https://api.github.com/users/bruncun/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bruncun/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69105358,
          "node_id": "MDU6TGFiZWw2OTEwNTM1OA==",
          "url": "https://api.github.com/repos/facebook/react/labels/Browser:%20Safari",
          "name": "Browser: Safari",
          "color": "c7def8",
          "default": false,
          "description": null
        },
        {
          "id": 127893911,
          "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
          "name": "Component: DOM",
          "color": "fef2c0",
          "default": false,
          "description": null
        },
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        },
        {
          "id": 40929151,
          "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
          "name": "Type: Bug",
          "color": "b60205",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-06-27T18:00:49Z",
      "updated_at": "2021-06-28T08:25:54Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Using Safari 14.0.3 on macOS Big Sur 11.2.2, `<picture>` elements rendered using React fail to update to the correct image source when the window is resized.\r\n\r\nIf fixing this bug would be considered a good first ticket and some guidance is provided, I'd be happy to fix it.\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Resize window across picture's breakpoint (768px)\r\n\r\nLink to code example: [https://codesandbox.io/s/dazzling-nobel-bh3gh](https://codesandbox.io/s/dazzling-nobel-bh3gh)\r\n\r\n## The current behavior\r\n\r\nThe first image (rendered using React) continues to render the initial source image.\r\n\r\n## The expected behavior\r\n\r\nThe first image should behave the same as the second (rendered statically inside index.html) and switch to the correct source image when a media condition applies.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21760",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21760/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21760/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21760/events",
      "html_url": "https://github.com/facebook/react/issues/21760",
      "id": 930806830,
      "node_id": "MDU6SXNzdWU5MzA4MDY4MzA=",
      "number": 21760,
      "title": "Bug: importing node-vibrant causes react-refresh to crash",
      "user": {
        "login": "BasixKOR",
        "id": 7413880,
        "node_id": "MDQ6VXNlcjc0MTM4ODA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7413880?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BasixKOR",
        "html_url": "https://github.com/BasixKOR",
        "followers_url": "https://api.github.com/users/BasixKOR/followers",
        "following_url": "https://api.github.com/users/BasixKOR/following{/other_user}",
        "gists_url": "https://api.github.com/users/BasixKOR/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/BasixKOR/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/BasixKOR/subscriptions",
        "organizations_url": "https://api.github.com/users/BasixKOR/orgs",
        "repos_url": "https://api.github.com/users/BasixKOR/repos",
        "events_url": "https://api.github.com/users/BasixKOR/events{/privacy}",
        "received_events_url": "https://api.github.com/users/BasixKOR/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-26T22:32:57Z",
      "updated_at": "2021-06-26T22:32:57Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17.0.2\r\n\r\nI experienced this bug first on Next.js latest and was able to reproduce it on CRA on CodeSandbox, so I'm pretty sure this is a bug of react-refresh.\r\n\r\nI also reported this bug on node-vibrant too: Vibrant-Colors/node-vibrant#128\r\n\r\n## Steps To Reproduce\r\n\r\n1. Import `node-vibrant`\r\n2. Use it in somewhere in your code\r\n3. react-refresh fails with `TypeError: second argument to Function.prototype.apply must be an array`\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://codesandbox.io/s/vibrant-react-repro-bx3t9\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nCrashes.\r\n\r\nI have no idea how react-refresh works so sadly I'm unaware the root cause of this.\r\n\r\n## The expected behavior\r\nNot crashes.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21757",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21757/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21757/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21757/events",
      "html_url": "https://github.com/facebook/react/issues/21757",
      "id": 930671645,
      "node_id": "MDU6SXNzdWU5MzA2NzE2NDU=",
      "number": 21757,
      "title": "PointerLeave event listener not fired across renders",
      "user": {
        "login": "dbismut",
        "id": 5003380,
        "node_id": "MDQ6VXNlcjUwMDMzODA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5003380?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dbismut",
        "html_url": "https://github.com/dbismut",
        "followers_url": "https://api.github.com/users/dbismut/followers",
        "following_url": "https://api.github.com/users/dbismut/following{/other_user}",
        "gists_url": "https://api.github.com/users/dbismut/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dbismut/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dbismut/subscriptions",
        "organizations_url": "https://api.github.com/users/dbismut/orgs",
        "repos_url": "https://api.github.com/users/dbismut/repos",
        "events_url": "https://api.github.com/users/dbismut/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dbismut/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-06-26T10:57:41Z",
      "updated_at": "2021-06-29T13:30:37Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "This is a bit of an edge case and might be the logical expected behavior.\r\n\r\nWhen adding two `pointerleave` events listeners to a ref interleaved with renders, the second `pointerleave` doesn't fire.\r\n\r\nhttps://user-images.githubusercontent.com/5003380/123510716-57f71a00-d67d-11eb-8488-38222bea4e3e.mov\r\n\r\nThe top square has a ref which gets two `pointerenter` and two `pointerleave` listeners that trigger a render by changing the component state. The listeners are added (and cleaned) on every render in a `useEffect` hook.\r\n\r\nThe bottom square has `onPointerEnter` and `onPointerLeave` props that also trigger a render by changing the component state.\r\n\r\nAs you can see from the video above, the behavior of the top square is different depending on whether the mouse exits to the background or to the bottom square.  \r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\nFrom the demo below:\r\n1. Hover the top square\r\n2. Hover the bottom square\r\n\r\nLink to code example:\r\nhttps://codesandbox.io/s/use-gesture-react-use-hover-bug-forked-gpr0r\r\n\r\n## The current behavior\r\n\r\nWhen hovering the bottom square, the top square has `hovering1` set to `false` and `hovering2` set to `true`.\r\n\r\n## The expected behavior\r\n\r\nWhen hovering the bottom square, the top square should have both `hovering1` and `hovering2` set to `false`.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21755",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21755/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21755/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21755/events",
      "html_url": "https://github.com/facebook/react/issues/21755",
      "id": 930538456,
      "node_id": "MDU6SXNzdWU5MzA1Mzg0NTY=",
      "number": 21755,
      "title": "[DevTools Bug] Cannot remove node \"30123\" because no matching node was found in the Store.",
      "user": {
        "login": "joshkaplan",
        "id": 5589260,
        "node_id": "MDQ6VXNlcjU1ODkyNjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5589260?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joshkaplan",
        "html_url": "https://github.com/joshkaplan",
        "followers_url": "https://api.github.com/users/joshkaplan/followers",
        "following_url": "https://api.github.com/users/joshkaplan/following{/other_user}",
        "gists_url": "https://api.github.com/users/joshkaplan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/joshkaplan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joshkaplan/subscriptions",
        "organizations_url": "https://api.github.com/users/joshkaplan/orgs",
        "repos_url": "https://api.github.com/users/joshkaplan/repos",
        "events_url": "https://api.github.com/users/joshkaplan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/joshkaplan/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        },
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        },
        {
          "id": 40929151,
          "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
          "name": "Type: Bug",
          "color": "b60205",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-25T22:27:22Z",
      "updated_at": "2021-06-26T01:08:42Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "### Website or app\n\nhttps://getstream.github.io/website-react-examples/team/?user=autumn-salad-3&user_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiYXV0dW1uLXNhbGFkLTMiLCJleHAiOjE2MjQ2Nzc2MDl9.RgvfWl8k9lsuXIlQ4cM0eCJ6NU8aa1oPiYRe0Pa6zsY&target_origin=https://getstream.io\n\n### Repro steps\n\n1. Go to this [GetStream.io demo app](https://getstream.github.io/website-react-examples/team/?user=autumn-salad-3&user_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiYXV0dW1uLXNhbGFkLTMiLCJleHAiOjE2MjQ2Nzc2MDl9.RgvfWl8k9lsuXIlQ4cM0eCJ6NU8aa1oPiYRe0Pa6zsY&target_origin=https://getstream.io)\r\n2. Open React dev tools\r\n3. Send a message in the app\r\n4. Error\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.13.5-0ae5290b54\n\n### Error message (automated)\n\nCannot remove node \"30123\" because no matching node was found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:21178:43\r\n    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:19286:22)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:19446:12\r\n    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37413:39)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps://api.github.com/search/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook/react\n```\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21751",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21751/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21751/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21751/events",
      "html_url": "https://github.com/facebook/react/issues/21751",
      "id": 929810049,
      "node_id": "MDU6SXNzdWU5Mjk4MTAwNDk=",
      "number": 21751,
      "title": "[DevTools Bug] Children cannot be added or removed during a reorder operation.",
      "user": {
        "login": "Alice-in-korea",
        "id": 79649326,
        "node_id": "MDQ6VXNlcjc5NjQ5MzI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/79649326?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Alice-in-korea",
        "html_url": "https://github.com/Alice-in-korea",
        "followers_url": "https://api.github.com/users/Alice-in-korea/followers",
        "following_url": "https://api.github.com/users/Alice-in-korea/following{/other_user}",
        "gists_url": "https://api.github.com/users/Alice-in-korea/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Alice-in-korea/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Alice-in-korea/subscriptions",
        "organizations_url": "https://api.github.com/users/Alice-in-korea/orgs",
        "repos_url": "https://api.github.com/users/Alice-in-korea/repos",
        "events_url": "https://api.github.com/users/Alice-in-korea/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Alice-in-korea/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        },
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        },
        {
          "id": 40929151,
          "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
          "name": "Type: Bug",
          "color": "b60205",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-25T04:11:26Z",
      "updated_at": "2021-06-29T10:51:16Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "### Website or app\n\nhttps://github.com/Alice-in-korea/chrome_bug_report.git\n\n### Repro steps\n\n1. Click next day button or prev day button\r\n2. Normally there are only three column for three days but you can see the fragment of other column with error message.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.13.5-0ae5290b54\n\n### Error message (automated)\n\nChildren cannot be added or removed during a reorder operation.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:21301:41\r\n    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:19286:22)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:19446:12\r\n    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37413:39)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps://api.github.com/search/issues?q=Children cannot be added or removed during a reorder operation. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook/react\n```\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21749",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21749/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21749/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21749/events",
      "html_url": "https://github.com/facebook/react/issues/21749",
      "id": 929656173,
      "node_id": "MDU6SXNzdWU5Mjk2NTYxNzM=",
      "number": 21749,
      "title": "Using window.open w/Apollo Client, followed by a state update seems to crash / freeze app",
      "user": {
        "login": "dannycochran",
        "id": 1217178,
        "node_id": "MDQ6VXNlcjEyMTcxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1217178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dannycochran",
        "html_url": "https://github.com/dannycochran",
        "followers_url": "https://api.github.com/users/dannycochran/followers",
        "following_url": "https://api.github.com/users/dannycochran/following{/other_user}",
        "gists_url": "https://api.github.com/users/dannycochran/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dannycochran/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dannycochran/subscriptions",
        "organizations_url": "https://api.github.com/users/dannycochran/orgs",
        "repos_url": "https://api.github.com/users/dannycochran/repos",
        "events_url": "https://api.github.com/users/dannycochran/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dannycochran/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-24T22:23:54Z",
      "updated_at": "2021-06-24T22:23:54Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Calling `window.open()` with a timeout to close (e.g. to help a user get a new authentication session) with a simple usage of Apollo Client's `useQuery`, followed by any state update, seems to crash / freeze the app. There's no stack trace / render thrashing / obvious functions which are being called in an infinite loop.\r\n\r\nObviously the React team is not responsible for bugs which are coming from Apollo Client. However, I'm not sure if it's an Apollo Client bug or an issue w/React. The reason I'm unsure is that upgrading to React 17.0.1 fixes the issue, which makes me suspect it could be a bug in the version of React where I found the issue (16.14.0).\r\n\r\nI understand if this bug just gets closed immediately, I'm mostly just curious if this sounds like a known bug or issue to the React team, though it might be hard to diagnose without understanding the internals of the Apollo Client.\r\n\r\nHere is the bug I filed with Apollo client which includes a minimal reproduction repository:\r\nhttps://github.com/apollographql/apollo-client/issues/8427\r\n\r\nReact version: **16.14.0**\r\n\r\n## Steps To Reproduce\r\n\r\n1. Clone this repository and checkout to `strangeReactBug` branch: https://github.com/dannycochran/usequery/tree/strangeReactBug\r\n\r\n2. Open Chrome (not reproducible in Safari)\r\n\r\n3. Click \"Sign in and sign out\", wait for the window to return.\r\n\r\n4. Repeat step 2 until the app is crashed.\r\n\r\n\r\nLink to code example:\r\n\r\nhttps://github.com/dannycochran/usequery/tree/strangeReactBug\r\n\r\n## The current behavior\r\n\r\nThe app will crash / freeze after the opened window closes.\r\n\r\n## The expected behavior\r\n\r\nThe app would not crash / freeze.\r\n\r\n## Workaround\r\n\r\nUpgrade to React 17.0.1",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21742",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21742/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21742/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21742/events",
      "html_url": "https://github.com/facebook/react/issues/21742",
      "id": 928759053,
      "node_id": "MDU6SXNzdWU5Mjg3NTkwNTM=",
      "number": 21742,
      "title": "Inconsistent crossbrowser onBeforeInput paste event behavior",
      "user": {
        "login": "johtso",
        "id": 830800,
        "node_id": "MDQ6VXNlcjgzMDgwMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/830800?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/johtso",
        "html_url": "https://github.com/johtso",
        "followers_url": "https://api.github.com/users/johtso/followers",
        "following_url": "https://api.github.com/users/johtso/following{/other_user}",
        "gists_url": "https://api.github.com/users/johtso/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/johtso/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/johtso/subscriptions",
        "organizations_url": "https://api.github.com/users/johtso/orgs",
        "repos_url": "https://api.github.com/users/johtso/repos",
        "events_url": "https://api.github.com/users/johtso/events{/privacy}",
        "received_events_url": "https://api.github.com/users/johtso/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 127893911,
          "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
          "name": "Component: DOM",
          "color": "fef2c0",
          "default": false,
          "description": null
        },
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        },
        {
          "id": 40929151,
          "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
          "name": "Type: Bug",
          "color": "b60205",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-06-24T01:13:36Z",
      "updated_at": "2021-06-24T15:51:03Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "### React version: 17.0.2\r\nIn Chrome, pasting triggers `onPaste` and `onBeforeInput`, with the `nativeEvent`s `ClipboardEvent` and `TextEvent` respectively.\r\n\r\nIn Firefox, pasting only triggers `onPaste` with `nativeEvent` `paste`.\r\n\r\nIf I'm not mistaken, this seems to be the code responsible for not triggering `onBeforeInput` on native `paste` events:\r\nhttps://github.com/facebook/react/blob/27c9c95e23ddedb9163373950e364dd62038f6c0/packages/react-dom/src/events/plugins/BeforeInputEventPlugin.js#L328-L331\r\n\r\n### React version: 17.0.2 and 18.0.0\r\n\r\n17.0.2\r\nhttps://codesandbox.io/s/condescending-cerf-e1qt9?file=/src/App.js\r\n18.0.0\r\nhttps://codesandbox.io/s/sparkling-sun-fylti?file=/src/App.js",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21736",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21736/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21736/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21736/events",
      "html_url": "https://github.com/facebook/react/issues/21736",
      "id": 928549435,
      "node_id": "MDU6SXNzdWU5Mjg1NDk0MzU=",
      "number": 21736,
      "title": "[DevTools]: Show which context(s) changed for function components",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-23T18:54:52Z",
      "updated_at": "2021-06-23T18:54:52Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "`getContextChangedKeys` only handles class components:\r\nhttps://github.com/facebook/react/blob/355591add41c0f6dad738fdb1b6603e0786b7b4e/packages/react-devtools-shared/src/backend/renderer.js#L1276-L1304",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21733",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21733/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21733/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21733/events",
      "html_url": "https://github.com/facebook/react/pull/21733",
      "id": 928418905,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc2NDI3MTIz",
      "number": 21733,
      "title": "Make enableSuspenseLayoutEffectSemantics static for www",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        },
        {
          "id": 1775958285,
          "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
          "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
          "name": "React Core Team",
          "color": "9149d1",
          "default": false,
          "description": "Opened by a member of the React Core Team"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-23T16:03:15Z",
      "updated_at": "2021-06-23T16:08:17Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21733",
        "html_url": "https://github.com/facebook/react/pull/21733",
        "diff_url": "https://github.com/facebook/react/pull/21733.diff",
        "patch_url": "https://github.com/facebook/react/pull/21733.patch"
      },
      "body": "We'll land this once the feature has been safely rolled out to 100% public.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21731",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21731/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21731/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21731/events",
      "html_url": "https://github.com/facebook/react/issues/21731",
      "id": 928208274,
      "node_id": "MDU6SXNzdWU5MjgyMDgyNzQ=",
      "number": 21731,
      "title": "Bug: Rendering an array of arrays doesn't warn developer about missing key=\"\"",
      "user": {
        "login": "radex",
        "id": 183747,
        "node_id": "MDQ6VXNlcjE4Mzc0Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/183747?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/radex",
        "html_url": "https://github.com/radex",
        "followers_url": "https://api.github.com/users/radex/followers",
        "following_url": "https://api.github.com/users/radex/following{/other_user}",
        "gists_url": "https://api.github.com/users/radex/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/radex/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/radex/subscriptions",
        "organizations_url": "https://api.github.com/users/radex/orgs",
        "repos_url": "https://api.github.com/users/radex/repos",
        "events_url": "https://api.github.com/users/radex/events{/privacy}",
        "received_events_url": "https://api.github.com/users/radex/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-23T12:33:13Z",
      "updated_at": "2021-06-25T15:58:41Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17.0.2\r\n\r\nNormally, when rendering an array of elements, React in dev mode helpfully warns the developer that they goofed and didn't include a key=\"\":\r\n\r\n```js\r\n{[1, 2, 3].map(n => <span>{n}</span>)} // Warning: Each child in a list should have a unique \"key\" prop.\r\n```\r\n\r\nHowever, when we render an array of arrays, no such warning is displayed:\r\n\r\n```js\r\n{[1, 2, 3].map((n) => [<span key=\"sure i have a key, trust me!\">{n}</span>])} // No warning! Buggy!\r\n```\r\n\r\nI can't think of a reason why someone would _legitimately_ want to display an array of arrays (If they would, they'd render an array of Fragments with a key assigned). However, this **can happen by accident quite easily** when e.g. preparing a list of React elements from some nested structure, something like this:\r\n\r\n```js\r\n// Waay oversimplified version of something that I wrote:\r\nfunction renderTasks(tasks) {\r\n  return tasks.map(t => <Task task={t} key={t.id} />)\r\n}\r\n\r\nfunction renderSections(sections) {\r\n  const elements = []\r\n  // ...\r\n  sections.forEach(section => {\r\n    const renderedSection = renderTasks(section.tasks)\r\n    // Oops! Should be elements.push(... renderedSection)\r\n    elements.push(renderedSection)\r\n  })\r\n  // ...\r\n  return elements\r\n}\r\n```\r\n\r\nObviously, this is not good. If, say, first section is removed, everything that follows will be unmounted and mounted again (since the innermost `<Task/>`s do have a key, and those key will differ, none of them will be reused).\r\n\r\nWhat makes it worse is that elements of an array are flattened when displayed in React devtools, so it's difficult to notice that I actually rendered an array of arrays - in devtools it looks like a flat array of items, each with its own key ‚Äî and yet, on every render, \"siblings\" with the same key have their render.\r\n\r\n## Steps To Reproduce\r\n\r\nLink to code example: https://codesandbox.io/s/winter-haze-o1tq4\r\n\r\n## The current behavior\r\n\r\nNothing happens, and a rendered list's elements don't have a key\r\n\r\n## The expected behavior\r\n\r\n```\r\nWarning: Children of a list should not be an array. Change the inner array elements to a <React.Fragment /> and assign a unique \"key\" prop. \r\n```",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21729",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21729/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21729/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21729/events",
      "html_url": "https://github.com/facebook/react/pull/21729",
      "id": 928098212,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc2MTQ5OTY0",
      "number": 21729,
      "title": "Typo fix",
      "user": {
        "login": "DenrizSusam",
        "id": 39295979,
        "node_id": "MDQ6VXNlcjM5Mjk1OTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/39295979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DenrizSusam",
        "html_url": "https://github.com/DenrizSusam",
        "followers_url": "https://api.github.com/users/DenrizSusam/followers",
        "following_url": "https://api.github.com/users/DenrizSusam/following{/other_user}",
        "gists_url": "https://api.github.com/users/DenrizSusam/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DenrizSusam/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DenrizSusam/subscriptions",
        "organizations_url": "https://api.github.com/users/DenrizSusam/orgs",
        "repos_url": "https://api.github.com/users/DenrizSusam/repos",
        "events_url": "https://api.github.com/users/DenrizSusam/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DenrizSusam/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-23T10:18:30Z",
      "updated_at": "2021-06-23T10:18:35Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21729",
        "html_url": "https://github.com/facebook/react/pull/21729",
        "diff_url": "https://github.com/facebook/react/pull/21729.diff",
        "patch_url": "https://github.com/facebook/react/pull/21729.patch"
      },
      "body": "emitted instead of emmitted\r\n\r\n<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test Plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21728",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21728/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21728/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21728/events",
      "html_url": "https://github.com/facebook/react/pull/21728",
      "id": 927991959,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc2MDYyMjI0",
      "number": 21728,
      "title": "chore: Add DocumentFragment to Container type",
      "user": {
        "login": "eps1lon",
        "id": 12292047,
        "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eps1lon",
        "html_url": "https://github.com/eps1lon",
        "followers_url": "https://api.github.com/users/eps1lon/followers",
        "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
        "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
        "organizations_url": "https://api.github.com/users/eps1lon/orgs",
        "repos_url": "https://api.github.com/users/eps1lon/repos",
        "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eps1lon/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-06-23T08:23:38Z",
      "updated_at": "2021-06-30T15:58:46Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21728",
        "html_url": "https://github.com/facebook/react/pull/21728",
        "diff_url": "https://github.com/facebook/react/pull/21728.diff",
        "patch_url": "https://github.com/facebook/react/pull/21728.patch"
      },
      "body": "## Summary\r\n\r\nAccept `DocumentFragment` as a `container` in `createRoot` i.e. sync `Container` type with runtime `isValidContainer` implementation:\r\nhttps://github.com/facebook/react/blob/7ec4c55971aad644616ca0b040f42410659fe802/packages/react-dom/src/client/ReactDOMRoot.js#L224-L231\r\n\r\nBrings clarity about the valid container types for TypeScript typings. It's always a bit sketchy to refer to runtime behavior especially if flow types don't match the runtime.\r\n\r\n## Test Plan\r\n\r\n- [x] CI green.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21726",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21726/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21726/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21726/events",
      "html_url": "https://github.com/facebook/react/issues/21726",
      "id": 927908565,
      "node_id": "MDU6SXNzdWU5Mjc5MDg1NjU=",
      "number": 21726,
      "title": "Bug: Old bug Invariant Violation, happens ONLY in production",
      "user": {
        "login": "Bluefitdev",
        "id": 56941349,
        "node_id": "MDQ6VXNlcjU2OTQxMzQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56941349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Bluefitdev",
        "html_url": "https://github.com/Bluefitdev",
        "followers_url": "https://api.github.com/users/Bluefitdev/followers",
        "following_url": "https://api.github.com/users/Bluefitdev/following{/other_user}",
        "gists_url": "https://api.github.com/users/Bluefitdev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Bluefitdev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Bluefitdev/subscriptions",
        "organizations_url": "https://api.github.com/users/Bluefitdev/orgs",
        "repos_url": "https://api.github.com/users/Bluefitdev/repos",
        "events_url": "https://api.github.com/users/Bluefitdev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Bluefitdev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-23T06:34:05Z",
      "updated_at": "2021-07-11T16:53:00Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "React version: 17.0.2\r\n\r\nHello everyone,\r\n\r\nI'm sorry if this is unclear, however some bug appeared in our app couple of days ago. The bug describes as this:\r\n\r\n```\r\nUncaught Invariant Violation: Minified React error #44; visit http://facebook.github.io/react/docs/error-decoder.html?invariant=44 for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\r\n```\r\n\r\nWhich translates to this in react website:\r\n```\r\nfindDOMNode was called on an unmounted component.\r\n```\r\n\r\nWe did not upgrade anything, we just developed features as usual. However up until now I haven't been able to solve it because it doesn't happen locally at all. Thus I am not able to debug this thing.\r\n\r\nWeirdly if it only happens if i refresh the page, also only happened at 2 route, i.e: `/home` and `/login`. If i refresh the page with any other route, then it works.\r\n\r\nThe problem is it doesn't happen on localhost so I really have no idea what this is. \r\n\r\nThe project is company's based so I don't think i can share the codebase, however i will share some of the most important details that I think is causing this issue?\r\n\r\nWe are using `craco` and `lerna` in monorepo packages.\r\n\r\nhere's our craco config:\r\n```\r\nconst cracoBabelLoader = require('craco-babel-loader');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst cracoIncludeLernaPackagePlugin = require('./craco-include-lerna-package-plugin');\r\n\r\n// Handle relative paths to sibling packages\r\nconst appDirectory = fs.realpathSync(process.cwd());\r\nconst resolvePackage = relativePath => path.resolve(appDirectory, relativePath);\r\n\r\nmodule.exports = {\r\n\tplugins: [\r\n\t\t{\r\n\t\t\tplugin: cracoBabelLoader,\r\n\t\t\toptions: {\r\n\t\t\t\tincludes: [resolvePackage('../formik-material'), resolvePackage('../naked-forms')]\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tstyle: {\r\n\t\tpostcss: {\r\n\t\t\tplugins: [require('tailwindcss'), require('autoprefixer')]\r\n\t\t}\r\n\t}\r\n};\r\n```\r\n\r\n\r\nIs anyone experiencing the same issue? Please help\r\n\r\nAlso our cloud setup is using GCP Cloud Storage, loaded from Google Load Balancer with CDN option below if that helps:\r\n\r\n![Screen Shot 2021-06-23 at 4 41 03 pm](https://user-images.githubusercontent.com/56941349/123048563-dd8e8600-d441-11eb-9988-5c67aa9cf6f2.png)\r\n\r\n\r\nThanks in advance",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21725",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21725/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21725/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21725/events",
      "html_url": "https://github.com/facebook/react/issues/21725",
      "id": 927756963,
      "node_id": "MDU6SXNzdWU5Mjc3NTY5NjM=",
      "number": 21725,
      "title": "Hooks at a Glance",
      "user": {
        "login": "tomasdelaveau",
        "id": 45961936,
        "node_id": "MDQ6VXNlcjQ1OTYxOTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/45961936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tomasdelaveau",
        "html_url": "https://github.com/tomasdelaveau",
        "followers_url": "https://api.github.com/users/tomasdelaveau/followers",
        "following_url": "https://api.github.com/users/tomasdelaveau/following{/other_user}",
        "gists_url": "https://api.github.com/users/tomasdelaveau/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tomasdelaveau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tomasdelaveau/subscriptions",
        "organizations_url": "https://api.github.com/users/tomasdelaveau/orgs",
        "repos_url": "https://api.github.com/users/tomasdelaveau/repos",
        "events_url": "https://api.github.com/users/tomasdelaveau/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tomasdelaveau/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 620368407,
          "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
          "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
          "name": "Resolution: Needs More Information",
          "color": "fffde7",
          "default": false,
          "description": null
        },
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "tomasdelaveau",
        "id": 45961936,
        "node_id": "MDQ6VXNlcjQ1OTYxOTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/45961936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tomasdelaveau",
        "html_url": "https://github.com/tomasdelaveau",
        "followers_url": "https://api.github.com/users/tomasdelaveau/followers",
        "following_url": "https://api.github.com/users/tomasdelaveau/following{/other_user}",
        "gists_url": "https://api.github.com/users/tomasdelaveau/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tomasdelaveau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tomasdelaveau/subscriptions",
        "organizations_url": "https://api.github.com/users/tomasdelaveau/orgs",
        "repos_url": "https://api.github.com/users/tomasdelaveau/repos",
        "events_url": "https://api.github.com/users/tomasdelaveau/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tomasdelaveau/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "tomasdelaveau",
          "id": 45961936,
          "node_id": "MDQ6VXNlcjQ1OTYxOTM2",
          "avatar_url": "https://avatars.githubusercontent.com/u/45961936?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tomasdelaveau",
          "html_url": "https://github.com/tomasdelaveau",
          "followers_url": "https://api.github.com/users/tomasdelaveau/followers",
          "following_url": "https://api.github.com/users/tomasdelaveau/following{/other_user}",
          "gists_url": "https://api.github.com/users/tomasdelaveau/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tomasdelaveau/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tomasdelaveau/subscriptions",
          "organizations_url": "https://api.github.com/users/tomasdelaveau/orgs",
          "repos_url": "https://api.github.com/users/tomasdelaveau/repos",
          "events_url": "https://api.github.com/users/tomasdelaveau/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tomasdelaveau/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-23T00:58:30Z",
      "updated_at": "2021-06-23T19:12:39Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "In the _Effect Hook_ section, it reads **By default, React runs the effects after every render ‚Äî including the first render.**\r\nI just copied and pasted the example in a Next JS page, and upon page load (ie. first render) I see the title remains unchanged (even if I remove the `<title>` tag from the head in `_app.js`). It only changes to \"You clicked 1 times\" after the first click (ie. second render).",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21724",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21724/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21724/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21724/events",
      "html_url": "https://github.com/facebook/react/issues/21724",
      "id": 927693862,
      "node_id": "MDU6SXNzdWU5Mjc2OTM4NjI=",
      "number": 21724,
      "title": "[DevTools Bug] Could not inspect element with id \"4\"",
      "user": {
        "login": "Agustin-A-Aubete-Cristiani",
        "id": 68714512,
        "node_id": "MDQ6VXNlcjY4NzE0NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/68714512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani",
        "html_url": "https://github.com/Agustin-A-Aubete-Cristiani",
        "followers_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/followers",
        "following_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/following{/other_user}",
        "gists_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/subscriptions",
        "organizations_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/orgs",
        "repos_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/repos",
        "events_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        },
        {
          "id": 620368407,
          "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
          "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
          "name": "Resolution: Needs More Information",
          "color": "fffde7",
          "default": false,
          "description": null
        },
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        },
        {
          "id": 40929151,
          "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
          "name": "Type: Bug",
          "color": "b60205",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "StevenHoppinger24K",
        "id": 59643335,
        "node_id": "MDQ6VXNlcjU5NjQzMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/59643335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/StevenHoppinger24K",
        "html_url": "https://github.com/StevenHoppinger24K",
        "followers_url": "https://api.github.com/users/StevenHoppinger24K/followers",
        "following_url": "https://api.github.com/users/StevenHoppinger24K/following{/other_user}",
        "gists_url": "https://api.github.com/users/StevenHoppinger24K/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/StevenHoppinger24K/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/StevenHoppinger24K/subscriptions",
        "organizations_url": "https://api.github.com/users/StevenHoppinger24K/orgs",
        "repos_url": "https://api.github.com/users/StevenHoppinger24K/repos",
        "events_url": "https://api.github.com/users/StevenHoppinger24K/events{/privacy}",
        "received_events_url": "https://api.github.com/users/StevenHoppinger24K/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "StevenHoppinger24K",
          "id": 59643335,
          "node_id": "MDQ6VXNlcjU5NjQzMzM1",
          "avatar_url": "https://avatars.githubusercontent.com/u/59643335?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/StevenHoppinger24K",
          "html_url": "https://github.com/StevenHoppinger24K",
          "followers_url": "https://api.github.com/users/StevenHoppinger24K/followers",
          "following_url": "https://api.github.com/users/StevenHoppinger24K/following{/other_user}",
          "gists_url": "https://api.github.com/users/StevenHoppinger24K/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/StevenHoppinger24K/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/StevenHoppinger24K/subscriptions",
          "organizations_url": "https://api.github.com/users/StevenHoppinger24K/orgs",
          "repos_url": "https://api.github.com/users/StevenHoppinger24K/repos",
          "events_url": "https://api.github.com/users/StevenHoppinger24K/events{/privacy}",
          "received_events_url": "https://api.github.com/users/StevenHoppinger24K/received_events",
          "type": "User",
          "site_admin": false
        },
        {
          "login": "Agustin-A-Aubete-Cristiani",
          "id": 68714512,
          "node_id": "MDQ6VXNlcjY4NzE0NTEy",
          "avatar_url": "https://avatars.githubusercontent.com/u/68714512?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani",
          "html_url": "https://github.com/Agustin-A-Aubete-Cristiani",
          "followers_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/followers",
          "following_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/following{/other_user}",
          "gists_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/subscriptions",
          "organizations_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/orgs",
          "repos_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/repos",
          "events_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Agustin-A-Aubete-Cristiani/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2021-06-22T22:56:05Z",
      "updated_at": "2021-07-09T14:07:38Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "### Website or app\n\nhttps://github.com/Agustin-A-Aubete-Cristiani/BUG-in-React/tree/master\n\n### Repro steps\n\ni was using hooks for make an controlled input, i don'treally know how it happend, sorry.\n\n### How often does this bug happen?\n\nOnly once\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.13.5-0ae5290b54\n\n### Error message (automated)\n\nCould not inspect element with id 4\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n```text\nat InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31392:3)\r\n    at Suspense\r\n    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30033:5)\r\n    at div\r\n    at InspectedElementErrorBoundaryWrapper (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30176:3)\r\n    at NativeStyleContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32661:3)\r\n    at div\r\n    at div\r\n    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28268:3)\r\n    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28709:3)\r\n    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:34512:52)\r\n    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30033:5)\r\n    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30147:5)\r\n    at div\r\n    at div\r\n    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:34138:3)\r\n    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24945:3)\r\n    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25548:3)\r\n    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30234:3)\r\n    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37241:3)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps://api.github.com/search/issues?q=Could not inspect element with id 4 in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook/react\n```\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21722",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21722/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21722/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21722/events",
      "html_url": "https://github.com/facebook/react/pull/21722",
      "id": 927653290,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc1Nzc2MjA4",
      "number": 21722,
      "title": "Add unstable prefix in React.js instead of entry points",
      "user": {
        "login": "acdlite",
        "id": 3624098,
        "node_id": "MDQ6VXNlcjM2MjQwOTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/acdlite",
        "html_url": "https://github.com/acdlite",
        "followers_url": "https://api.github.com/users/acdlite/followers",
        "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
        "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
        "organizations_url": "https://api.github.com/users/acdlite/orgs",
        "repos_url": "https://api.github.com/users/acdlite/repos",
        "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
        "received_events_url": "https://api.github.com/users/acdlite/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        },
        {
          "id": 1775958285,
          "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
          "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
          "name": "React Core Team",
          "color": "9149d1",
          "default": false,
          "description": "Opened by a member of the React Core Team"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-06-22T21:35:21Z",
      "updated_at": "2021-06-29T11:40:16Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21722",
        "html_url": "https://github.com/facebook/react/pull/21722",
        "diff_url": "https://github.com/facebook/react/pull/21722.diff",
        "patch_url": "https://github.com/facebook/react/pull/21722.patch"
      },
      "body": "Makes `unstable_act` consistent with other unstable exports",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21719",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21719/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21719/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21719/events",
      "html_url": "https://github.com/facebook/react/pull/21719",
      "id": 927291925,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc1NDcxNDUy",
      "number": 21719,
      "title": "Improved `additionalHooks` with the ability to specify `callbackIndex` (backwards-compatible)",
      "user": {
        "login": "xpl",
        "id": 1707,
        "node_id": "MDQ6VXNlcjE3MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1707?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xpl",
        "html_url": "https://github.com/xpl",
        "followers_url": "https://api.github.com/users/xpl/followers",
        "following_url": "https://api.github.com/users/xpl/following{/other_user}",
        "gists_url": "https://api.github.com/users/xpl/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xpl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xpl/subscriptions",
        "organizations_url": "https://api.github.com/users/xpl/orgs",
        "repos_url": "https://api.github.com/users/xpl/repos",
        "events_url": "https://api.github.com/users/xpl/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xpl/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-22T14:23:20Z",
      "updated_at": "2021-06-23T00:39:45Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21719",
        "html_url": "https://github.com/facebook/react/pull/21719",
        "diff_url": "https://github.com/facebook/react/pull/21719.diff",
        "patch_url": "https://github.com/facebook/react/pull/21719.patch"
      },
      "body": "## Summary\r\n\r\nHi there. We develop a state management library and we have a custom hook with dependencies that has additional arguments _preceding_ the callback, something like:\r\n\r\n```js\r\nuseSelect(store, () => ..., [deps])\r\n```\r\n\r\nWe want to get it linted with the `exhaustive-deps` rule. But the current `additionalHooks` implementation assumes that custom hooks are always like `useEffect` ‚Äî and it is even explicitly mentioned in the source code:\r\n\r\n```js\r\n// What's the index of callback that needs to be analyzed for a given Hook?\r\n// -1 if it's not a Hook we care about (e.g. useState).\r\n// 0 for useEffect/useMemo/useCallback(fn).\r\n// 1 for useImperativeHandle(ref, fn).\r\n// For additionally configured Hooks, assume that they're like useEffect (0).                <---- THIS\r\n```\r\n\r\nBut with a very small change (just ~10 LOC to the checking code) we can add a mechanism for configuring the callback index (not breaking the backward compatibility with the existing regex-based configuration ‚Äî it is still there):\r\n\r\n```js\r\n    \"react-hooks/exhaustive-deps\": [\"warn\", {\r\n      \"additionalHooks\": {\r\n        \"useMyCustomHook\": {\"callbackIndex\": 0}\r\n        \"useMyOtherCustomHook\": {\"callbackIndex\": 1}\r\n      }\r\n    }]\r\n```\r\n\r\nP.S. Yeah, of course we recognize that we can just put the `useCallback` on top of every call to our custom hook and thus \"avoid\" the very need of creating a custom hook with dependencies. But here's the rationale against it: in _100%_ cases we need memoization and dependency-checking of the callback passed to our custom hook ‚Äî it's kind of _really_ mandatory in our case. And there is a massive codebase that relies on our custom hook, so having users to wrap the callback in `useCallback` by hand would create a significant code bloat and make it prone to errors. In the end we would have had to create a custom linter rule that checks that the callback is always memoized... so we decided that it's better to hide the memoization in the implementation of our custom hook itself, passing the dependencies down to it, and then use the `additionalHooks` thing for linting it.\r\n\r\n## Test Plan\r\n\r\nI've added a test case to `ESLintRuleExhaustiveDeps-test.js`, that should suffice (?)",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21713",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21713/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21713/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21713/events",
      "html_url": "https://github.com/facebook/react/pull/21713",
      "id": 926546273,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc0ODM1OTY0",
      "number": 21713,
      "title": "Fix typos in comments",
      "user": {
        "login": "PrinceRajRoy",
        "id": 47452572,
        "node_id": "MDQ6VXNlcjQ3NDUyNTcy",
        "avatar_url": "https://avatars.githubusercontent.com/u/47452572?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PrinceRajRoy",
        "html_url": "https://github.com/PrinceRajRoy",
        "followers_url": "https://api.github.com/users/PrinceRajRoy/followers",
        "following_url": "https://api.github.com/users/PrinceRajRoy/following{/other_user}",
        "gists_url": "https://api.github.com/users/PrinceRajRoy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/PrinceRajRoy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/PrinceRajRoy/subscriptions",
        "organizations_url": "https://api.github.com/users/PrinceRajRoy/orgs",
        "repos_url": "https://api.github.com/users/PrinceRajRoy/repos",
        "events_url": "https://api.github.com/users/PrinceRajRoy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/PrinceRajRoy/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-21T19:56:17Z",
      "updated_at": "2021-06-21T20:01:42Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21713",
        "html_url": "https://github.com/facebook/react/pull/21713",
        "diff_url": "https://github.com/facebook/react/pull/21713.diff",
        "patch_url": "https://github.com/facebook/react/pull/21713.patch"
      },
      "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\nFixed some typos\r\n\r\n```\r\ninvokation -> invocation\r\npaths reads -> paths read\r\nwork -> worked\r\n```",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21710",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21710/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21710/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21710/events",
      "html_url": "https://github.com/facebook/react/pull/21710",
      "id": 925643753,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc0MDY5MzM1",
      "number": 21710,
      "title": "Dependabot/npm and yarn/fixtures/dom/handlebars s4",
      "user": {
        "login": "angelseblani",
        "id": 84080393,
        "node_id": "MDQ6VXNlcjg0MDgwMzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/84080393?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/angelseblani",
        "html_url": "https://github.com/angelseblani",
        "followers_url": "https://api.github.com/users/angelseblani/followers",
        "following_url": "https://api.github.com/users/angelseblani/following{/other_user}",
        "gists_url": "https://api.github.com/users/angelseblani/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/angelseblani/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/angelseblani/subscriptions",
        "organizations_url": "https://api.github.com/users/angelseblani/orgs",
        "repos_url": "https://api.github.com/users/angelseblani/repos",
        "events_url": "https://api.github.com/users/angelseblani/events{/privacy}",
        "received_events_url": "https://api.github.com/users/angelseblani/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-20T17:17:13Z",
      "updated_at": "2021-06-20T17:17:17Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/21710",
        "html_url": "https://github.com/facebook/react/pull/21710",
        "diff_url": "https://github.com/facebook/react/pull/21710.diff",
        "patch_url": "https://github.com/facebook/react/pull/21710.patch"
      },
      "body": "$ ./run.cmd",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21709",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21709/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21709/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21709/events",
      "html_url": "https://github.com/facebook/react/issues/21709",
      "id": 925621291,
      "node_id": "MDU6SXNzdWU5MjU2MjEyOTE=",
      "number": 21709,
      "title": "Codesplit using Router gives 'init is not a function' error",
      "user": {
        "login": "abbaszaid",
        "id": 73424640,
        "node_id": "MDQ6VXNlcjczNDI0NjQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73424640?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/abbaszaid",
        "html_url": "https://github.com/abbaszaid",
        "followers_url": "https://api.github.com/users/abbaszaid/followers",
        "following_url": "https://api.github.com/users/abbaszaid/following{/other_user}",
        "gists_url": "https://api.github.com/users/abbaszaid/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/abbaszaid/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/abbaszaid/subscriptions",
        "organizations_url": "https://api.github.com/users/abbaszaid/orgs",
        "repos_url": "https://api.github.com/users/abbaszaid/repos",
        "events_url": "https://api.github.com/users/abbaszaid/events{/privacy}",
        "received_events_url": "https://api.github.com/users/abbaszaid/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-06-20T15:17:15Z",
      "updated_at": "2021-06-20T17:07:18Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "I want to execute React Codesplit. I have followed the documentation given by React, but there seems to be showing a 'init is not a function' error.\r\n\r\n```\r\nimport React, {lazy, Suspense} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nconst Privacy = lazy(() => import('./pages/PrivacyPolicies'));\r\nconst Home = lazy(() => import('./pages'));\r\n\r\nconst App = () => (\r\n<Router>\r\n  <Suspense fallback={<div>Loading...</div>}>\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home}/>\r\n    <Route exact path=\"/privacy\" component={Privacy}/>\r\n  </Switch>\r\n  </Suspense>\r\n</Router>\r\n);\r\nexport default App;\r\n\r\n```",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21706",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21706/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21706/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21706/events",
      "html_url": "https://github.com/facebook/react/issues/21706",
      "id": 925454137,
      "node_id": "MDU6SXNzdWU5MjU0NTQxMzc=",
      "number": 21706,
      "title": "Bug: Memory leak with setState lambda setting to previous state",
      "user": {
        "login": "Haemoglobin",
        "id": 204224,
        "node_id": "MDQ6VXNlcjIwNDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/204224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Haemoglobin",
        "html_url": "https://github.com/Haemoglobin",
        "followers_url": "https://api.github.com/users/Haemoglobin/followers",
        "following_url": "https://api.github.com/users/Haemoglobin/following{/other_user}",
        "gists_url": "https://api.github.com/users/Haemoglobin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Haemoglobin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Haemoglobin/subscriptions",
        "organizations_url": "https://api.github.com/users/Haemoglobin/orgs",
        "repos_url": "https://api.github.com/users/Haemoglobin/repos",
        "events_url": "https://api.github.com/users/Haemoglobin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Haemoglobin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-19T19:31:47Z",
      "updated_at": "2021-07-10T04:28:42Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Hi, \r\n\r\nIt seems that there is a memory leak issue when using the set state hook lambda syntax, and setting the state to the previous state. The set state lambda in this scenario seems to be retained and never garbage collected. \r\n\r\nPlease ignore the contrived example, it's intentionally whittled down to the exact issue. It's quite a common requirement in our application to subscribe to an rxjs observable in a useEffect hook, then update some state when events are received (but the data received might not always result in a state change). The lambda syntax is required in the set state call because current state would otherwise always be the default state due to the closure around it in the useEffect hook. Even if there was another way to do it to avoid the issue, it's still a surprising behaviour and makes it harder to fall into the 'pit of success'.\r\n\r\nReproduction below: \r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>Memory leak repro</title>\r\n    <script src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n\r\n    <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <div id=\"root\"></div>\r\n    <script type=\"text/babel\">\r\n        function App() {\r\n          const [someState, setSomeState] = React.useState(false);\r\n          React.useEffect(() => {\r\n             const interval = setInterval(() => {\r\n               const a = []; \r\n               for (var i = 0; i < 1000; i++) {\r\n                 a.push({}); //produce lots of garbage objects to make the leak easier to see\r\n               }\r\n               // memory leak when setting state to previous state\r\n               // set state lambda is not garbage collected and retained along with all of its captured closures\r\n               setSomeState(state => a.length > 0 ? state : !state);\r\n\r\n               // no memory leak when setting state to something other than previous state\r\n               // set state lambda (and it's closures) are garbage collected as expected\r\n               // setSomeState(state => a.length == 0 ? state : !state);\r\n              }, 100);\r\n             return () => clearInterval(interval);\r\n          }, []);\r\n          return <div>Test Memory Leak</div>;\r\n      }\r\n\r\n\r\n      ReactDOM.render(\r\n        <App/>,\r\n        document.getElementById('root')\r\n      );\r\n\r\n    </script>\r\n  </body>\r\n</html>\r\n\r\n```\r\n\r\nThe best memory profiler to see this is the 'Allocation instrumentation on timeline' mode in chrome devtools. \r\n\r\nI have confirmed this also happens using production / minified bundles so it's not a dev build issue. \r\n\r\nRight now as a workaround I need to use 'hacks' like useRef and forceUpdate implementations which is a real shame so keen to see this fixed. \r\n\r\nPossibly related to #21692\r\nMany thanks!",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21705",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21705/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21705/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21705/events",
      "html_url": "https://github.com/facebook/react/issues/21705",
      "id": 925429199,
      "node_id": "MDU6SXNzdWU5MjU0MjkxOTk=",
      "number": 21705,
      "title": "Where is the React Dev Tools extension official guide found?",
      "user": {
        "login": "thecircleoflifefree",
        "id": 26904626,
        "node_id": "MDQ6VXNlcjI2OTA0NjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/26904626?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thecircleoflifefree",
        "html_url": "https://github.com/thecircleoflifefree",
        "followers_url": "https://api.github.com/users/thecircleoflifefree/followers",
        "following_url": "https://api.github.com/users/thecircleoflifefree/following{/other_user}",
        "gists_url": "https://api.github.com/users/thecircleoflifefree/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thecircleoflifefree/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thecircleoflifefree/subscriptions",
        "organizations_url": "https://api.github.com/users/thecircleoflifefree/orgs",
        "repos_url": "https://api.github.com/users/thecircleoflifefree/repos",
        "events_url": "https://api.github.com/users/thecircleoflifefree/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thecircleoflifefree/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-19T16:44:11Z",
      "updated_at": "2021-06-19T18:58:22Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Does a React Dev Tools guide exist with examples for different scenarios, when the wrapping colored box appears, the colors meaning, why it seems to always wrap the entire APP and also the specifics ?\r\n\r\nFound this but it's back from 2014:\r\nhttps://reactjs.org/blog/2014/01/02/react-chrome-developer-tools.html\r\n\r\nAlso:\r\nhttps://github.com/facebook/react/blob/master/packages/react-devtools/CHANGELOG.md\r\n\r\nWhile searching on the wild I have seen different examples that when tested on my end show a different result from the React Dev tools extension perspective which generates confusion.\r\n\r\nFor instance I took this example:\r\nhttps://blog.logrocket.com/react-memo-vs-usememo/\r\n\r\nAs seen on the gifs from that blog the squarred box highlighting never shows for the entire ParentComponent.\r\n\r\nI did the test with different styles but pretty much the same thing and the highlight appears for the entire component:\r\n\r\n<img width=\"585\" alt=\"understanding_the_graybox_that_always_shows_up\" src=\"https://user-images.githubusercontent.com/26904626/122650133-6af27300-d0ee-11eb-9c20-0b914d3bb199.png\">\r\n\r\nSo the gray box around the buttons would be expected, but not the outer one. Why does this appear?\r\n\r\nDoes this guide exist ? If not, will it be created?\r\n\r\nBest Regards",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21701",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21701/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21701/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21701/events",
      "html_url": "https://github.com/facebook/react/issues/21701",
      "id": 924750916,
      "node_id": "MDU6SXNzdWU5MjQ3NTA5MTY=",
      "number": 21701,
      "title": "React 18 data fetching network call cancellation",
      "user": {
        "login": "rybon",
        "id": 1155839,
        "node_id": "MDQ6VXNlcjExNTU4Mzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1155839?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rybon",
        "html_url": "https://github.com/rybon",
        "followers_url": "https://api.github.com/users/rybon/followers",
        "following_url": "https://api.github.com/users/rybon/following{/other_user}",
        "gists_url": "https://api.github.com/users/rybon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rybon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rybon/subscriptions",
        "organizations_url": "https://api.github.com/users/rybon/orgs",
        "repos_url": "https://api.github.com/users/rybon/repos",
        "events_url": "https://api.github.com/users/rybon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rybon/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 3079053919,
          "node_id": "MDU6TGFiZWwzMDc5MDUzOTE5",
          "url": "https://api.github.com/repos/facebook/react/labels/React%2018",
          "name": "React 18",
          "color": "26B0E4",
          "default": false,
          "description": "Bug reports, questions, and general feedback about React 18"
        },
        {
          "id": 710375792,
          "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
          "name": "Type: Discussion",
          "color": "fef2c0",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-18T10:05:49Z",
      "updated_at": "2021-06-18T12:18:46Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "I understood from various discussions online that for Suspense for data fetching to work properly React needs to be more directly involved in the mechanics of fetching data from the network. How will that work in practice? Would it take care of XHR cancellation for example in case a Suspense subtree is no longer needed or changes props? What will it mean for using libraries like Axios? Can strategies like retry with exponential backoff still be implemented? HTTP caching behavior?",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21693",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21693/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21693/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21693/events",
      "html_url": "https://github.com/facebook/react/issues/21693",
      "id": 922887388,
      "node_id": "MDU6SXNzdWU5MjI4ODczODg=",
      "number": 21693,
      "title": "Allow customization of Dom validation",
      "user": {
        "login": "stevemk14ebr",
        "id": 6619205,
        "node_id": "MDQ6VXNlcjY2MTkyMDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6619205?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stevemk14ebr",
        "html_url": "https://github.com/stevemk14ebr",
        "followers_url": "https://api.github.com/users/stevemk14ebr/followers",
        "following_url": "https://api.github.com/users/stevemk14ebr/following{/other_user}",
        "gists_url": "https://api.github.com/users/stevemk14ebr/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/stevemk14ebr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/stevemk14ebr/subscriptions",
        "organizations_url": "https://api.github.com/users/stevemk14ebr/orgs",
        "repos_url": "https://api.github.com/users/stevemk14ebr/repos",
        "events_url": "https://api.github.com/users/stevemk14ebr/events{/privacy}",
        "received_events_url": "https://api.github.com/users/stevemk14ebr/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-16T17:27:00Z",
      "updated_at": "2021-06-16T17:29:00Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Hello, in some cases the warnings emmitted by React about the Dom layout are not necessary, and create issues. An example of this is the errors thrown when whitespace is used around table elements. \r\n```\r\nvalidateDOMNesting(...): Whitespace text nodes cannot appear as a child of <table>\r\n```\r\n\r\nThere is an assumption in this rule that the JSX is created by the user and hand-written source code and therefore the rule tries to guard against accidental layout bugs when you format your JSX with whitespace. However, this is not actually always the case, and the JSX can instead be generated from tools whos only requirement is to emit valid HTML (where spaces around table elements are allowed!).\r\n\r\nThis makes an annoying issue where you get some really really ugly errors in a context in which this is not only not helpful, but actively creating more work! Here's a concrete example: https://github.com/rehypejs/rehype-react/issues/28 (demo: https://codesandbox.io/s/remark-rehype-debug-forked-21j7e) this tool pretty prints the generated HTML, and so puts some extra new lines around the generated HTML. When used with react this breaks, when used with 'raw js/html' this is fine!\r\n\r\nIn short, please allow all optional DOM validation rules to be disabled. Stuff like tag nesting that is in the HTML standard should probably be left unchanged, but optional rules like whitespace should be customizable.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/21692",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/21692/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/21692/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/21692/events",
      "html_url": "https://github.com/facebook/react/issues/21692",
      "id": 922812957,
      "node_id": "MDU6SXNzdWU5MjI4MTI5NTc=",
      "number": 21692,
      "title": "Bug: memory leak in useReducer",
      "user": {
        "login": "onnlucky",
        "id": 45293,
        "node_id": "MDQ6VXNlcjQ1Mjkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/45293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/onnlucky",
        "html_url": "https://github.com/onnlucky",
        "followers_url": "https://api.github.com/users/onnlucky/followers",
        "following_url": "https://api.github.com/users/onnlucky/following{/other_user}",
        "gists_url": "https://api.github.com/users/onnlucky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/onnlucky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/onnlucky/subscriptions",
        "organizations_url": "https://api.github.com/users/onnlucky/orgs",
        "repos_url": "https://api.github.com/users/onnlucky/repos",
        "events_url": "https://api.github.com/users/onnlucky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/onnlucky/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-16T16:11:17Z",
      "updated_at": "2021-06-17T08:44:26Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "React version: 17.0.2\r\n\r\nWhen using `React.useReducer()` and a new action is pushed, but the reducer returns the current state, the operation is queued in a pending queue. But if the component isn't re-rendered for other reasons, it will never start work on that pending queue. This can potentially rack up a huge list of `pending.next.next.next.next...`\r\n\r\n## Steps To Reproduce\r\n\r\n1. https://codesandbox.io/s/unruffled-moore-wp5wq?file=/src/App.js\r\n2. click increment a few times\r\n2. place a breakpoint in react-dom.development.js line 16072, click increment, that should hit the break point, then expand queue.pending.next.next.next and see they are unique actions. (https://github.com/facebook/react/blob/269dd6ec5da85fc5ca819cfa010ce60dd1c83ec6/packages/react-reconciler/src/ReactFiberHooks.new.js#L1937)\r\n\r\nLink to code example: https://codesandbox.io/s/unruffled-moore-wp5wq?file=/src/App.js\r\n\r\n## The current behavior\r\n\r\nThere is no change in behavior, but it is potentially racking up an enormous list of pending tasks, costing memory.\r\n\r\n## The expected behavior\r\n\r\nFlat memory usage. Reducer doesn't run twice on the same action.\r\n\r\nThis is very much related to https://github.com/facebook/react/pull/15198 because later the reducer might run, and basically reduce the same actions again. Which is unexpected. And if using side-effects, doesn't produce the expected results.\r\n\r\nOther related bugs: https://github.com/facebook/react/issues/17953 https://github.com/facebook/react/issues/15088",
      "performed_via_github_app": null
    }
  ],

  "graphql": [
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3210",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3210/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3210/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3210/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/3210",
      "id": 941468343,
      "node_id": "MDU6SXNzdWU5NDE0NjgzNDM=",
      "number": 3210,
      "title": "Securing graphql api",
      "user": {
        "login": "Zombiak307",
        "id": 59576731,
        "node_id": "MDQ6VXNlcjU5NTc2NzMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/59576731?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Zombiak307",
        "html_url": "https://github.com/Zombiak307",
        "followers_url": "https://api.github.com/users/Zombiak307/followers",
        "following_url": "https://api.github.com/users/Zombiak307/following{/other_user}",
        "gists_url": "https://api.github.com/users/Zombiak307/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Zombiak307/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Zombiak307/subscriptions",
        "organizations_url": "https://api.github.com/users/Zombiak307/orgs",
        "repos_url": "https://api.github.com/users/Zombiak307/repos",
        "events_url": "https://api.github.com/users/Zombiak307/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Zombiak307/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-11T14:48:31Z",
      "updated_at": "2021-07-11T14:48:31Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Hello.\r\nHow can I secure my graphql api? Currently everyone can connect to it. I want to allow request only from one origin",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3209",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3209/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3209/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3209/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3209",
      "id": 939608989,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg1ODAwODY1",
      "number": 3209,
      "title": "Fix failing CI on main",
      "user": {
        "login": "IvanGoncharov",
        "id": 8336157,
        "node_id": "MDQ6VXNlcjgzMzYxNTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IvanGoncharov",
        "html_url": "https://github.com/IvanGoncharov",
        "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
        "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
        "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
        "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
        "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
        "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1207090525,
          "node_id": "MDU6TGFiZWwxMjA3MDkwNTI1",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20internal%20%F0%9F%8F%A0",
          "name": "PR: internal üè†",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-08T08:29:11Z",
      "updated_at": "2021-07-08T08:29:11Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3209",
        "html_url": "https://github.com/graphql/graphql-js/pull/3209",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3209.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3209.patch"
      },
      "body": "",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3208",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3208/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3208/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3208/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3208",
      "id": 935041291,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjgyMDIzOTEz",
      "number": 3208,
      "title": "Add 'UniqueArgumentDefinitionNamesRule' validation rule",
      "user": {
        "login": "IvanGoncharov",
        "id": 8336157,
        "node_id": "MDQ6VXNlcjgzMzYxNTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IvanGoncharov",
        "html_url": "https://github.com/IvanGoncharov",
        "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
        "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
        "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
        "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
        "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
        "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1197731240,
          "node_id": "MDU6TGFiZWwxMTk3NzMxMjQw",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20feature%20%F0%9F%9A%80",
          "name": "PR: feature üöÄ",
          "color": "c5def5",
          "default": false,
          "description": "requires increase of \"minor\" version number"
        },
        {
          "id": 936579478,
          "node_id": "MDU6TGFiZWw5MzY1Nzk0Nzg=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/spec%20RFC",
          "name": "spec RFC",
          "color": "d4c5f9",
          "default": false,
          "description": "Implementation of a proposed change to the GraphQL specification"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-01T16:59:26Z",
      "updated_at": "2021-07-01T17:09:13Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3208",
        "html_url": "https://github.com/graphql/graphql-js/pull/3208",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3208.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3208.patch"
      },
      "body": "Background https://github.com/graphql/graphql-wg/issues/505",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3205",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3205/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3205/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3205/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3205",
      "id": 929869416,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc3NjU3MzMw",
      "number": 3205,
      "title": "refactor: introduce MaybePromise thenable",
      "user": {
        "login": "yaacovCR",
        "id": 4108384,
        "node_id": "MDQ6VXNlcjQxMDgzODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4108384?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yaacovCR",
        "html_url": "https://github.com/yaacovCR",
        "followers_url": "https://api.github.com/users/yaacovCR/followers",
        "following_url": "https://api.github.com/users/yaacovCR/following{/other_user}",
        "gists_url": "https://api.github.com/users/yaacovCR/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yaacovCR/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yaacovCR/subscriptions",
        "organizations_url": "https://api.github.com/users/yaacovCR/orgs",
        "repos_url": "https://api.github.com/users/yaacovCR/repos",
        "events_url": "https://api.github.com/users/yaacovCR/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yaacovCR/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-06-25T06:18:44Z",
      "updated_at": "2021-06-25T06:55:32Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3205",
        "html_url": "https://github.com/graphql/graphql-js/pull/3205",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3205.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3205.patch"
      },
      "body": "See:\r\n\r\nhttps://github.com/yaacovCR/value-or-promise/#inspiration\r\nhttps://github.com/yaacovCR/value-or-promise/\r\n\r\ndepends on #3193",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3196",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3196/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3196/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3196/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3196",
      "id": 927290871,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc1NDcwNTM4",
      "number": 3196,
      "title": "refactor: streamline buildExecutionContext",
      "user": {
        "login": "yaacovCR",
        "id": 4108384,
        "node_id": "MDQ6VXNlcjQxMDgzODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4108384?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yaacovCR",
        "html_url": "https://github.com/yaacovCR",
        "followers_url": "https://api.github.com/users/yaacovCR/followers",
        "following_url": "https://api.github.com/users/yaacovCR/following{/other_user}",
        "gists_url": "https://api.github.com/users/yaacovCR/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yaacovCR/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yaacovCR/subscriptions",
        "organizations_url": "https://api.github.com/users/yaacovCR/orgs",
        "repos_url": "https://api.github.com/users/yaacovCR/repos",
        "events_url": "https://api.github.com/users/yaacovCR/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yaacovCR/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-22T14:22:21Z",
      "updated_at": "2021-06-22T14:58:57Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3196",
        "html_url": "https://github.com/graphql/graphql-js/pull/3196",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3196.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3196.patch"
      },
      "body": "1. pass named arguments to buildExecutionContext so that ExecutionArgs or SubscriptionArgs can be simply passed through\r\n2. move assertValidExecutionArguments into buildExecutionContext, as only used there.\r\n3. streamline returnType by throwing a GraphQLAggregateError with any processing errors rthar than returning either ExecutionContext or an array of GraphQLErrors.\r\n\r\nMotivation: these changes significantly slim down execute/subscribe, paving the way for refactoring the execution methods into a class where the constructor uses to buildExecutionContext to set up the executionContext (or its constituent properties) as class member(s).\r\n\r\nDepends on #3195",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3195",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3195/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3195/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3195/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3195",
      "id": 927164745,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc1MzYyNjMw",
      "number": 3195,
      "title": "refactor: consolidate subscription into execution",
      "user": {
        "login": "yaacovCR",
        "id": 4108384,
        "node_id": "MDQ6VXNlcjQxMDgzODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4108384?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yaacovCR",
        "html_url": "https://github.com/yaacovCR",
        "followers_url": "https://api.github.com/users/yaacovCR/followers",
        "following_url": "https://api.github.com/users/yaacovCR/following{/other_user}",
        "gists_url": "https://api.github.com/users/yaacovCR/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yaacovCR/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yaacovCR/subscriptions",
        "organizations_url": "https://api.github.com/users/yaacovCR/orgs",
        "repos_url": "https://api.github.com/users/yaacovCR/repos",
        "events_url": "https://api.github.com/users/yaacovCR/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yaacovCR/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-22T12:11:03Z",
      "updated_at": "2021-06-22T12:24:17Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3195",
        "html_url": "https://github.com/graphql/graphql-js/pull/3195",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3195.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3195.patch"
      },
      "body": "`subscription` operations are described by the 'Execution' section of the spec.\r\n\r\nDepends on #3192",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3193",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3193/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3193/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3193/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3193",
      "id": 926673931,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc0OTQ4MjQx",
      "number": 3193,
      "title": "feat: export execution algorithm implementation as Executor class",
      "user": {
        "login": "yaacovCR",
        "id": 4108384,
        "node_id": "MDQ6VXNlcjQxMDgzODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4108384?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yaacovCR",
        "html_url": "https://github.com/yaacovCR",
        "followers_url": "https://api.github.com/users/yaacovCR/followers",
        "following_url": "https://api.github.com/users/yaacovCR/following{/other_user}",
        "gists_url": "https://api.github.com/users/yaacovCR/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yaacovCR/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yaacovCR/subscriptions",
        "organizations_url": "https://api.github.com/users/yaacovCR/orgs",
        "repos_url": "https://api.github.com/users/yaacovCR/repos",
        "events_url": "https://api.github.com/users/yaacovCR/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yaacovCR/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-06-21T23:03:20Z",
      "updated_at": "2021-06-22T21:37:49Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3193",
        "html_url": "https://github.com/graphql/graphql-js/pull/3193",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3193.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3193.patch"
      },
      "body": "Depends on #3196.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3192",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3192/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3192/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3192/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3192",
      "id": 926547167,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njc0ODM2NzE5",
      "number": 3192,
      "title": "feat: introduce GraphQLAggregateError",
      "user": {
        "login": "yaacovCR",
        "id": 4108384,
        "node_id": "MDQ6VXNlcjQxMDgzODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4108384?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yaacovCR",
        "html_url": "https://github.com/yaacovCR",
        "followers_url": "https://api.github.com/users/yaacovCR/followers",
        "following_url": "https://api.github.com/users/yaacovCR/following{/other_user}",
        "gists_url": "https://api.github.com/users/yaacovCR/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yaacovCR/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yaacovCR/subscriptions",
        "organizations_url": "https://api.github.com/users/yaacovCR/orgs",
        "repos_url": "https://api.github.com/users/yaacovCR/repos",
        "events_url": "https://api.github.com/users/yaacovCR/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yaacovCR/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-21T19:57:45Z",
      "updated_at": "2021-06-22T12:24:00Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3192",
        "html_url": "https://github.com/graphql/graphql-js/pull/3192",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3192.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3192.patch"
      },
      "body": "Motivation:\r\n\r\n1. This helper class allows reporting multiple distinct errors from within a resolver.\r\n2. It may also be used to transform the ExecutionContext validation to a function that throws a collection of GraphQLErrors (which may or may not be more streamlined).",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3183",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3183/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3183/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3183/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/3183",
      "id": 921942471,
      "node_id": "MDU6SXNzdWU5MjE5NDI0NzE=",
      "number": 3183,
      "title": "Example suggestion:",
      "user": {
        "login": "rakesh456",
        "id": 3892188,
        "node_id": "MDQ6VXNlcjM4OTIxODg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3892188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rakesh456",
        "html_url": "https://github.com/rakesh456",
        "followers_url": "https://api.github.com/users/rakesh456/followers",
        "following_url": "https://api.github.com/users/rakesh456/following{/other_user}",
        "gists_url": "https://api.github.com/users/rakesh456/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rakesh456/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rakesh456/subscriptions",
        "organizations_url": "https://api.github.com/users/rakesh456/orgs",
        "repos_url": "https://api.github.com/users/rakesh456/repos",
        "events_url": "https://api.github.com/users/rakesh456/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rakesh456/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 230677111,
          "node_id": "MDU6TGFiZWwyMzA2NzcxMTE=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/question",
          "name": "question",
          "color": "cc317c",
          "default": true,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-16T00:43:41Z",
      "updated_at": "2021-06-29T20:29:12Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "```js\r\nimport {\r\n  graphql,\r\n  GraphQLSchema,\r\n  GraphQLObjectType,\r\n  GraphQLString,\r\n} from 'graphql';\r\n\r\nvar schema = new GraphQLSchema({\r\n  query: new GraphQLObjectType({\r\n    name: 'RootQueryType',\r\n    fields: {\r\n      firstname: {\r\n        type: GraphQLString,\r\n        resolve() {\r\n          return 'Peter';\r\n        },\r\n      },\r\n    },\r\n  }),\r\n});\r\n\r\nvar query = '{ firstname }';\r\n\r\ngraphql(schema, query).then((result) => {\r\n  // Prints\r\n  // {\r\n  //   data: { firstname: \"Peter\" }\r\n  // }\r\n  console.log(result);\r\n});\r\n```",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3169",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3169/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3169/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3169/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/3169",
      "id": 919205736,
      "node_id": "MDU6SXNzdWU5MTkyMDU3MzY=",
      "number": 3169,
      "title": "Validation of variable values",
      "user": {
        "login": "dkbarn",
        "id": 23280179,
        "node_id": "MDQ6VXNlcjIzMjgwMTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/23280179?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dkbarn",
        "html_url": "https://github.com/dkbarn",
        "followers_url": "https://api.github.com/users/dkbarn/followers",
        "following_url": "https://api.github.com/users/dkbarn/following{/other_user}",
        "gists_url": "https://api.github.com/users/dkbarn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dkbarn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dkbarn/subscriptions",
        "organizations_url": "https://api.github.com/users/dkbarn/orgs",
        "repos_url": "https://api.github.com/users/dkbarn/repos",
        "events_url": "https://api.github.com/users/dkbarn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dkbarn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-11T20:55:53Z",
      "updated_at": "2021-06-11T21:35:30Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "I'm curious why it's not possible to validate the values of variables using the ```validate``` framework.\r\n\r\nFor example, suppose I have a very simple validator that wants to assert the value for argument ```name``` contains only ascii characters, given this schema:\r\n```\r\ntype Query {\r\n    hello(name: String!): String!\r\n}\r\n```\r\nI can implement this validator and it will work when the incoming request is this:\r\n```\r\n{\r\n    'query': '{ hello(name: \"foo\") }'\r\n}\r\n```\r\nbut when the request is the following, I have no way of seeing the value for the VariableNode ```$myName``` from inside the validator:\r\n```\r\n{\r\n    'query': 'query myQuery($myName: String!) { hello(name: $myName) }',\r\n    'variables': {'myName': 'foo'}\r\n}\r\n```\r\n\r\nIt looks like it comes down to this bit of the code:\r\nhttps://github.com/graphql/graphql-js/blob/main/src/graphql.ts#L118-L122\r\n\r\nIs there any reason why ```variableValues``` cannot also be passed in and made available to the validate framework?",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3168",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3168/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3168/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3168/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3168",
      "id": 916511452,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjY2MTcwNDYy",
      "number": 3168,
      "title": "refactor completeAsyncIterator",
      "user": {
        "login": "yaacovCR",
        "id": 4108384,
        "node_id": "MDQ6VXNlcjQxMDgzODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4108384?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yaacovCR",
        "html_url": "https://github.com/yaacovCR",
        "followers_url": "https://api.github.com/users/yaacovCR/followers",
        "following_url": "https://api.github.com/users/yaacovCR/following{/other_user}",
        "gists_url": "https://api.github.com/users/yaacovCR/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yaacovCR/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yaacovCR/subscriptions",
        "organizations_url": "https://api.github.com/users/yaacovCR/orgs",
        "repos_url": "https://api.github.com/users/yaacovCR/repos",
        "events_url": "https://api.github.com/users/yaacovCR/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yaacovCR/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 2872943160,
          "node_id": "MDU6TGFiZWwyODcyOTQzMTYw",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/stream/defer",
          "name": "stream/defer",
          "color": "3B7C5F",
          "default": false,
          "description": "Issues/PRs related to experimental steam/defer support"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-06-09T18:19:38Z",
      "updated_at": "2021-06-09T19:50:34Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3168",
        "html_url": "https://github.com/graphql/graphql-js/pull/3168",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3168.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3168.patch"
      },
      "body": "to share some code with regular iterables\r\n\r\ni.e.. completeListItemValue\r\n\r\ntaken from #3164",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3165",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3165/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3165/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3165/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3165",
      "id": 913900727,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjYzODY3MDky",
      "number": 3165,
      "title": "add test to ensure defer/stream payloads are always sent in correct order",
      "user": {
        "login": "yaacovCR",
        "id": 4108384,
        "node_id": "MDQ6VXNlcjQxMDgzODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4108384?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yaacovCR",
        "html_url": "https://github.com/yaacovCR",
        "followers_url": "https://api.github.com/users/yaacovCR/followers",
        "following_url": "https://api.github.com/users/yaacovCR/following{/other_user}",
        "gists_url": "https://api.github.com/users/yaacovCR/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yaacovCR/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yaacovCR/subscriptions",
        "organizations_url": "https://api.github.com/users/yaacovCR/orgs",
        "repos_url": "https://api.github.com/users/yaacovCR/repos",
        "events_url": "https://api.github.com/users/yaacovCR/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yaacovCR/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 6,
      "created_at": "2021-06-07T19:47:38Z",
      "updated_at": "2021-07-07T14:12:03Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3165",
        "html_url": "https://github.com/graphql/graphql-js/pull/3165",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3165.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3165.patch"
      },
      "body": "currently failing @robrichard @brainkim",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3164",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3164/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3164/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3164/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3164",
      "id": 912921872,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjYzMDI4ODMy",
      "number": 3164,
      "title": "Refactor incremental",
      "user": {
        "login": "yaacovCR",
        "id": 4108384,
        "node_id": "MDQ6VXNlcjQxMDgzODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4108384?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yaacovCR",
        "html_url": "https://github.com/yaacovCR",
        "followers_url": "https://api.github.com/users/yaacovCR/followers",
        "following_url": "https://api.github.com/users/yaacovCR/following{/other_user}",
        "gists_url": "https://api.github.com/users/yaacovCR/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yaacovCR/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yaacovCR/subscriptions",
        "organizations_url": "https://api.github.com/users/yaacovCR/orgs",
        "repos_url": "https://api.github.com/users/yaacovCR/repos",
        "events_url": "https://api.github.com/users/yaacovCR/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yaacovCR/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 2872943160,
          "node_id": "MDU6TGFiZWwyODcyOTQzMTYw",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/stream/defer",
          "name": "stream/defer",
          "color": "3B7C5F",
          "default": false,
          "description": "Issues/PRs related to experimental steam/defer support"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 7,
      "created_at": "2021-06-06T19:04:17Z",
      "updated_at": "2021-06-16T07:51:50Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3164",
        "html_url": "https://github.com/graphql/graphql-js/pull/3164",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3164.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3164.patch"
      },
      "body": "@robrichard @IvanGoncharov",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3162",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3162/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3162/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3162/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3162",
      "id": 912481326,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjYyNjM2NDYy",
      "number": 3162,
      "title": "Create codeql-analysis.yml",
      "user": {
        "login": "IvanGoncharov",
        "id": 8336157,
        "node_id": "MDQ6VXNlcjgzMzYxNTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IvanGoncharov",
        "html_url": "https://github.com/IvanGoncharov",
        "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
        "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
        "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
        "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
        "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
        "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-06-05T22:38:18Z",
      "updated_at": "2021-06-05T22:38:18Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3162",
        "html_url": "https://github.com/graphql/graphql-js/pull/3162",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3162.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3162.patch"
      },
      "body": "",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3156",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3156/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3156/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3156/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/3156",
      "id": 909790493,
      "node_id": "MDU6SXNzdWU5MDk3OTA0OTM=",
      "number": 3156,
      "title": "ScalarType: is there any purpose for renaming option `specifiedByUrl` (15.x) to `specifiedByURL` (16.x)? It affects on GraphQLJSON and other scalars distributed via npm",
      "user": {
        "login": "nodkz",
        "id": 1946920,
        "node_id": "MDQ6VXNlcjE5NDY5MjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1946920?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nodkz",
        "html_url": "https://github.com/nodkz",
        "followers_url": "https://api.github.com/users/nodkz/followers",
        "following_url": "https://api.github.com/users/nodkz/following{/other_user}",
        "gists_url": "https://api.github.com/users/nodkz/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nodkz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nodkz/subscriptions",
        "organizations_url": "https://api.github.com/users/nodkz/orgs",
        "repos_url": "https://api.github.com/users/nodkz/repos",
        "events_url": "https://api.github.com/users/nodkz/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nodkz/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-06-02T18:46:36Z",
      "updated_at": "2021-06-02T19:35:21Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "Is there any purpose that in v16 was renamed the following property:\r\n```diff\r\nexport class GraphQLScalarType {  \r\n  name: string;  \r\n  description: Maybe<string>; \r\n-  specifiedByUrl: Maybe<string>;\r\n+  specifiedByURL: Maybe<string>;\r\n```\r\nv15.5 https://github.com/graphql/graphql-js/blob/15.x.x/src/type/definition.js#L578\r\nv16.0.0-alpha.2 https://github.com/graphql/graphql-js/blob/main/src/type/definition.ts#L580\r\n\r\n---\r\n\r\nThis change breaks `specifiedByUrl` definition for Scalars distributed via npm. Most popular is GraphQLJSON: https://github.com/taion/graphql-type-json/blob/master/src/index.js#L55-L56\r\n\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3152",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3152/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3152/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3152/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3152",
      "id": 908822757,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjU5NDY3NTgx",
      "number": 3152,
      "title": "Enable Fragment Arguments (a form of parameterized fragments) during execution with flag",
      "user": {
        "login": "mjmahone",
        "id": 1741248,
        "node_id": "MDQ6VXNlcjE3NDEyNDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1741248?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjmahone",
        "html_url": "https://github.com/mjmahone",
        "followers_url": "https://api.github.com/users/mjmahone/followers",
        "following_url": "https://api.github.com/users/mjmahone/following{/other_user}",
        "gists_url": "https://api.github.com/users/mjmahone/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mjmahone/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mjmahone/subscriptions",
        "organizations_url": "https://api.github.com/users/mjmahone/orgs",
        "repos_url": "https://api.github.com/users/mjmahone/repos",
        "events_url": "https://api.github.com/users/mjmahone/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mjmahone/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 936579478,
          "node_id": "MDU6TGFiZWw5MzY1Nzk0Nzg=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/spec%20RFC",
          "name": "spec RFC",
          "color": "d4c5f9",
          "default": false,
          "description": "Implementation of a proposed change to the GraphQL specification"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-06-01T23:26:52Z",
      "updated_at": "2021-06-10T15:21:00Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3152",
        "html_url": "https://github.com/graphql/graphql-js/pull/3152",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3152.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3152.patch"
      },
      "body": "This is really a continuation of @daniel-nagy's work in https://github.com/graphql/graphql-js/pull/2871 and, more distantly, \r\n@sam-swarr's initial AST implementations in https://github.com/graphql/graphql-js/pull/1141, as well as @josephsavona and the entire Relay team's work from before https://github.com/graphql/graphql-spec/issues/204 was opened.\r\n\r\n# Background\r\n\r\nhttps://github.com/graphql/graphql-spec/issues/204 is the original open source issue from ~5 years ago. \r\n\r\nFor the past 5+ years, Relay has had the [`@arguments` directive](https://relay.dev/docs/api-reference/graphql-and-directives/#arguments), which is not spec compliant. In some sense, Relay is a *dual GraphQL client*: there's Relay syntax which is used to resolve data available locally on the client, and then that syntax compiles down into a spec compliant syntax to resolve data from an external source (aka a \"server\"), which hydrates a graph of \"local\" data the relay-specific resolvers operate over.\r\n\r\nThis means Relay can get away with having user-written fragments that are freed from operation-defined knowledge: Relay's fragments can be provided variable values that were never defined at the operation level, to use when resolving arguments.\r\n\r\n# This PR: A graphql-js implementation of \"fragment argument replacement\", a la Relay\r\n\r\nThis enables executing requests that use fragment arguments: when collecting fields on fragment spreads, the executor now replaces any variables matching fragment argument values, with the rule:\r\n- Replace the fragment variable with the argument value from the spread location, if provided\r\n- Otherwise, replace the fragment variable with the default value from the fragment variable definition, if there is a default value\r\n- Otherwise, leave the variable as-is: as it is unset, the executor will treat it as an unset variable.\r\n\r\nNote that last point, without adding better validation rules, allows an operation defined variable to \"clobber\" a fragment variable that was purposefully left unset. I *think* this is undesirable behavior.\r\n\r\nThe two new runtime errors I added were:\r\n- If the fragment variable is defined as non-nullable, but `null` is passed in at the argument, throw.\r\n- If the fragment variable is non-nullable and has no default value, but no fragment argument value was provided at the spread, throw.\r\n\r\nWith just these new errors, this behavior already ought to compose cleanly with other executor errors to disallow things like spreading the same fragment multiple times at the same level with different arguments: that would create overlapping fields. It also cleanly allows for variables to be passed in as fragment arguments.\r\n\r\nIn some sense, this is a baby step towards @IvanGoncharov's idea of adding an execution plan stage. It's unlikely you'd want to implement this execution plan using `visit` as I have here, but it works, and I'm trying to ensure this behavior won't add overhead unless you're actually using the new feature.\r\n\r\n## Validation Required\r\nIMO the executor behavior is *too* permissive for a first iteration on the spec: it will likely be difficult for existing clients to immediately support spreading the same fragment multiple times in the same operation with different argument values. So my plan is to add additional validation rules (will add on this PR):\r\n- All required fragment arguments are explicitly included in any fragment spread for that fragment. This duplicates the execution-time error.\r\n- All fragment arguments provided are of the correct type: this duplicates the execution-time \"arguments of correct type\" error, but allows us to point specifically to the original, user-written fragment spreads as the cause of the error, rather than using the replaced values.\r\n- Every fragment spread within an operation must have *identical* argument values (this could be relaxed for clients like Relay)\r\n- Operation variables must not \"shadow\" fragment arguments (this ensures a fragment spread that explicitly leaves an argument unset will not have that behavior clobbered with a global variable definition).\r\n- All argument variables defined on a fragment must be used in the same fragment (this prevents needing to support an argument stack across fragment spreads)\r\n- (Maybe) Only constant argument values are permitted (we may want to transition clients slowly to fragment arguments, and constant-only values are much easier to support)",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3150",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3150/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3150/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3150/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/3150",
      "id": 906851571,
      "node_id": "MDU6SXNzdWU5MDY4NTE1NzE=",
      "number": 3150,
      "title": "meta: docs issue tracker",
      "user": {
        "login": "saihaj",
        "id": 44710980,
        "node_id": "MDQ6VXNlcjQ0NzEwOTgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/44710980?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/saihaj",
        "html_url": "https://github.com/saihaj",
        "followers_url": "https://api.github.com/users/saihaj/followers",
        "following_url": "https://api.github.com/users/saihaj/following{/other_user}",
        "gists_url": "https://api.github.com/users/saihaj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/saihaj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/saihaj/subscriptions",
        "organizations_url": "https://api.github.com/users/saihaj/orgs",
        "repos_url": "https://api.github.com/users/saihaj/repos",
        "events_url": "https://api.github.com/users/saihaj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/saihaj/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 255319421,
          "node_id": "MDU6TGFiZWwyNTUzMTk0MjE=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/documentation",
          "name": "documentation",
          "color": "bfe5bf",
          "default": true,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-05-30T19:05:08Z",
      "updated_at": "2021-06-01T06:03:25Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "Track all docs related issues for GraphQL.JS open in [`graphql/graphql-js`](https://github.com/graphql/graphql-js), [`graphql/graphql.github.io`](https://github.com/graphql/graphql.github.io).\r\n\r\n- [ ] #433\r\n- [ ] #1368 \r\n- [ ] #2098 \r\n- [ ] #2206 \r\n- [ ] #2244\r\n- [ ] #2567\r\n- [ ] #2892 \r\n- [ ] #2941 \r\n- [ ] #2950 \r\n- [ ] https://github.com/graphql/graphql.github.io/issues/119\r\n- [ ] https://github.com/graphql/graphql.github.io/issues/163\r\n- [ ] https://github.com/graphql/graphql.github.io/issues/252\r\n- [ ] https://github.com/graphql/graphql.github.io/pull/683\r\n- [ ] https://github.com/graphql/graphql.github.io/issues/669\r\n- [ ] https://github.com/graphql/graphql.github.io/issues/1049\r\n- [ ] https://github.com/graphql/graphql.github.io/pull/1051\r\n- [ ] https://github.com/graphql/graphql-js-wg/issues/3\r\n- [ ] https://github.com/graphql/graphql-js-wg/issues/42",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3145",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3145/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3145/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3145/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3145",
      "id": 906237199,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjU3MjY0ODc4",
      "number": 3145,
      "title": "Add coordinate field to schema element definitions",
      "user": {
        "login": "leebyron",
        "id": 50130,
        "node_id": "MDQ6VXNlcjUwMTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leebyron",
        "html_url": "https://github.com/leebyron",
        "followers_url": "https://api.github.com/users/leebyron/followers",
        "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
        "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
        "organizations_url": "https://api.github.com/users/leebyron/orgs",
        "repos_url": "https://api.github.com/users/leebyron/repos",
        "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/leebyron/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1197190869,
          "node_id": "MDU6TGFiZWwxMTk3MTkwODY5",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20polish%20%F0%9F%92%85",
          "name": "PR: polish üíÖ",
          "color": "0052cc",
          "default": false,
          "description": "PR doesn't change public API or any observed behaviour"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-05-28T23:53:41Z",
      "updated_at": "2021-06-03T18:36:33Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3145",
        "html_url": "https://github.com/graphql/graphql-js/pull/3145",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3145.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3145.patch"
      },
      "body": "Depends on #3044\r\n\r\n* Defines a `GraphQLSchemaElement` base class which defines a `.coordinate` property and `toString`/`toJSON` methods.\r\n* Adds base class to types, fields, arguments, input fields, enum values, and directives.\r\n* Uses this in validation error printing string templates.\r\n\r\nResults in a net-reduction of code, minor simplification of definition.ts, and simplification/standardization of error messages",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3134",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3134/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3134/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3134/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3134",
      "id": 902757289,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjU0MDkzMTIw",
      "number": 3134,
      "title": "Async benchmarks",
      "user": {
        "login": "robrichard",
        "id": 3814096,
        "node_id": "MDQ6VXNlcjM4MTQwOTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3814096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robrichard",
        "html_url": "https://github.com/robrichard",
        "followers_url": "https://api.github.com/users/robrichard/followers",
        "following_url": "https://api.github.com/users/robrichard/following{/other_user}",
        "gists_url": "https://api.github.com/users/robrichard/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/robrichard/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robrichard/subscriptions",
        "organizations_url": "https://api.github.com/users/robrichard/orgs",
        "repos_url": "https://api.github.com/users/robrichard/repos",
        "events_url": "https://api.github.com/users/robrichard/events{/privacy}",
        "received_events_url": "https://api.github.com/users/robrichard/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-05-26T18:02:02Z",
      "updated_at": "2021-06-04T15:10:20Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3134",
        "html_url": "https://github.com/graphql/graphql-js/pull/3134",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3134.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3134.patch"
      },
      "body": "As discussed in the graphql-js WG meeting.\r\n\r\nTaken from https://github.com/graphql/graphql-js/pull/2757\r\n\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3133",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3133/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3133/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3133/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/3133",
      "id": 900674833,
      "node_id": "MDU6SXNzdWU5MDA2NzQ4MzM=",
      "number": 3133,
      "title": "diagnostics channel out for performance checking",
      "user": {
        "login": "RichardWright",
        "id": 881815,
        "node_id": "MDQ6VXNlcjg4MTgxNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881815?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RichardWright",
        "html_url": "https://github.com/RichardWright",
        "followers_url": "https://api.github.com/users/RichardWright/followers",
        "following_url": "https://api.github.com/users/RichardWright/following{/other_user}",
        "gists_url": "https://api.github.com/users/RichardWright/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RichardWright/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RichardWright/subscriptions",
        "organizations_url": "https://api.github.com/users/RichardWright/orgs",
        "repos_url": "https://api.github.com/users/RichardWright/repos",
        "events_url": "https://api.github.com/users/RichardWright/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RichardWright/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-05-25T11:27:29Z",
      "updated_at": "2021-06-30T17:03:27Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Questions regarding how to use GraphQL\r\n\r\nHi! I'm currently measuring the time taken for graphql to render and posting the results onto a diagnostics channel. Would a pr be accepted to have this code in the main lib? \r\n\r\nnodejs functionality in question is here - https://nodejs.org/dist/latest-v14.x/docs/api/diagnostics_channel.html\r\n\r\nIt's opt in so users wouldn't having timings if no one is listening for them.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3116",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3116/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3116/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3116/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3116",
      "id": 895976759,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ4MTI5NTQ3",
      "number": 3116,
      "title": "Client controlled nullability",
      "user": {
        "login": "xuewei8910",
        "id": 6442929,
        "node_id": "MDQ6VXNlcjY0NDI5Mjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6442929?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xuewei8910",
        "html_url": "https://github.com/xuewei8910",
        "followers_url": "https://api.github.com/users/xuewei8910/followers",
        "following_url": "https://api.github.com/users/xuewei8910/following{/other_user}",
        "gists_url": "https://api.github.com/users/xuewei8910/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xuewei8910/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xuewei8910/subscriptions",
        "organizations_url": "https://api.github.com/users/xuewei8910/orgs",
        "repos_url": "https://api.github.com/users/xuewei8910/repos",
        "events_url": "https://api.github.com/users/xuewei8910/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xuewei8910/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-05-19T22:04:21Z",
      "updated_at": "2021-05-21T20:57:44Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3116",
        "html_url": "https://github.com/graphql/graphql-js/pull/3116",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3116.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3116.patch"
      },
      "body": "",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3109",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3109/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3109/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3109/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3109",
      "id": 893404797,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ1OTI0NTE3",
      "number": 3109,
      "title": "scalars: ID and String support for serializing BigInt",
      "user": {
        "login": "Hkmu",
        "id": 3169251,
        "node_id": "MDQ6VXNlcjMxNjkyNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3169251?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Hkmu",
        "html_url": "https://github.com/Hkmu",
        "followers_url": "https://api.github.com/users/Hkmu/followers",
        "following_url": "https://api.github.com/users/Hkmu/following{/other_user}",
        "gists_url": "https://api.github.com/users/Hkmu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Hkmu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Hkmu/subscriptions",
        "organizations_url": "https://api.github.com/users/Hkmu/orgs",
        "repos_url": "https://api.github.com/users/Hkmu/repos",
        "events_url": "https://api.github.com/users/Hkmu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Hkmu/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-05-17T14:41:13Z",
      "updated_at": "2021-05-17T14:44:46Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3109",
        "html_url": "https://github.com/graphql/graphql-js/pull/3109",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3109.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3109.patch"
      },
      "body": "Add support to serialize BigInt for String and ID scalar.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3092",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3092/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3092/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3092/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3092",
      "id": 892353665,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ1MDc4NDIw",
      "number": 3092,
      "title": "Add coerceInputLiteral()",
      "user": {
        "login": "leebyron",
        "id": 50130,
        "node_id": "MDQ6VXNlcjUwMTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leebyron",
        "html_url": "https://github.com/leebyron",
        "followers_url": "https://api.github.com/users/leebyron/followers",
        "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
        "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
        "organizations_url": "https://api.github.com/users/leebyron/orgs",
        "repos_url": "https://api.github.com/users/leebyron/repos",
        "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/leebyron/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 936557659,
          "node_id": "MDU6TGFiZWw5MzY1NTc2NTk=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20breaking%20change%20%F0%9F%92%A5",
          "name": "PR: breaking change üí•",
          "color": "b60205",
          "default": false,
          "description": "implementation requires increase of \"major\" version number"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-05-15T04:28:44Z",
      "updated_at": "2021-06-03T17:53:51Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3092",
        "html_url": "https://github.com/graphql/graphql-js/pull/3092",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3092.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3092.patch"
      },
      "body": "Depends on #3145\r\n\r\nRemoves `valueFromAST()` and adds `coerceInputLiteral()` as an additional export from `coerceInputValue`.\r\n\r\nThe implementation is almost exactly the same as `valueFromAST()` with a slightly more strict type signature and refactored tests to improve coverage (the file unit test has 100% coverage)\r\n\r\nWhile this does not change any behavior, it could be breaking if you rely directly on the `valueFromAST()` method. Use `coerceInputLiteral()` as a direct replacement.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3086",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3086/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3086/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3086/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3086",
      "id": 891442260,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ0MzEzMjUw",
      "number": 3086,
      "title": "Input Value Validation",
      "user": {
        "login": "leebyron",
        "id": 50130,
        "node_id": "MDQ6VXNlcjUwMTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leebyron",
        "html_url": "https://github.com/leebyron",
        "followers_url": "https://api.github.com/users/leebyron/followers",
        "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
        "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
        "organizations_url": "https://api.github.com/users/leebyron/orgs",
        "repos_url": "https://api.github.com/users/leebyron/repos",
        "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/leebyron/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 936557659,
          "node_id": "MDU6TGFiZWw5MzY1NTc2NTk=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20breaking%20change%20%F0%9F%92%A5",
          "name": "PR: breaking change üí•",
          "color": "b60205",
          "default": false,
          "description": "implementation requires increase of \"major\" version number"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-05-13T22:47:47Z",
      "updated_at": "2021-06-03T17:11:27Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3086",
        "html_url": "https://github.com/graphql/graphql-js/pull/3086",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3086.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3086.patch"
      },
      "body": "Depends on #3065\r\n\r\nFactors out input validation to reusable functions:\r\n\r\n* Introduces `validateInputLiteral` by extracting this behavior from `ValuesOfCorrectTypeRule`.\r\n* Introduces `validateInputValue` by extracting this behavior from `coerceInputValue`\r\n* Simplifies `coerceInputValue` to return early on validation error\r\n* Unifies error reporting between `validateInputValue` and `validateInputLiteral`, causing some error message strings to change, but error data (eg locations) are preserved.\r\n\r\nThese two parallel functions will be used to validate default values in #3049\r\n\r\nPotentially breaking if you rely on the existing behavior of `coerceInputValue` to call a callback function, as the call signature has changed. GraphQL behavior should not change, though error messages are now slightly different.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3077",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3077/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3077/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3077/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3077",
      "id": 888866784,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjQyMDM2Mjk1",
      "number": 3077,
      "title": "Preserve sources of variable values",
      "user": {
        "login": "leebyron",
        "id": 50130,
        "node_id": "MDQ6VXNlcjUwMTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leebyron",
        "html_url": "https://github.com/leebyron",
        "followers_url": "https://api.github.com/users/leebyron/followers",
        "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
        "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
        "organizations_url": "https://api.github.com/users/leebyron/orgs",
        "repos_url": "https://api.github.com/users/leebyron/repos",
        "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/leebyron/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1207090525,
          "node_id": "MDU6TGFiZWwxMjA3MDkwNTI1",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20internal%20%F0%9F%8F%A0",
          "name": "PR: internal üè†",
          "color": "bfdadc",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-05-11T22:11:07Z",
      "updated_at": "2021-06-03T17:09:54Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3077",
        "html_url": "https://github.com/graphql/graphql-js/pull/3077",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3077.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3077.patch"
      },
      "body": "Depends on #3074\r\n\r\nBy way of introducing type `VariableValues`, allows `getVariableValues` to return both the coerced values as well as the original sources, which are then made available in `ExecutionContext`.\r\n\r\nWhile variable sources are not used directly here, they're used directly in #3065. This PR is pulled out as a pre-req to aid review",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3074",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3074/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3074/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3074/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3074",
      "id": 884921218,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjM4MjcwNzQy",
      "number": 3074,
      "title": "Preserve defaultValue literals",
      "user": {
        "login": "leebyron",
        "id": 50130,
        "node_id": "MDQ6VXNlcjUwMTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leebyron",
        "html_url": "https://github.com/leebyron",
        "followers_url": "https://api.github.com/users/leebyron/followers",
        "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
        "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
        "organizations_url": "https://api.github.com/users/leebyron/orgs",
        "repos_url": "https://api.github.com/users/leebyron/repos",
        "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/leebyron/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1197187805,
          "node_id": "MDU6TGFiZWwxMTk3MTg3ODA1",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20bug%20fix%20%F0%9F%90%9E",
          "name": "PR: bug fix üêû",
          "color": "006b75",
          "default": false,
          "description": "requires increase of \"patch\" version number"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-05-10T19:20:24Z",
      "updated_at": "2021-06-29T15:28:43Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3074",
        "html_url": "https://github.com/graphql/graphql-js/pull/3074",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3074.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3074.patch"
      },
      "body": "Depends on #3092\r\nFixes #3051\r\n\r\nThis change solves the problem of default values defined via SDL not always resolving correctly through introspection by preserving the original GraphQL literal in the schema definition. This changes argument and input field definitions `defaultValue` field from just the \"value\" to a new `GraphQLDefaultValueUsage` type which contains either or both \"value\" and \"literal\" fields.\r\n\r\nSince either of these fields may be set, new functions for resolving a value or literal from either have been added - `getLiteralDefaultValue` and `getCoercedDefaultValue` - these replace uses that either assumed a set value or were manually converting a value back to a literal.\r\n\r\nHere is the flow for how a default value defined in an SDL would be converted into a functional schema and back to an SDL:\r\n\r\n**Before this change:**\r\n\r\n```\r\n(SDL) --parse-> (AST) --coerceInputLiteral--> (defaultValue config) --valueToAST--> (AST) --print --> (SDL)\r\n```\r\n\r\n`coerceInputLiteral` performs coercion which is a one-way function, and `valueToAST` is unsafe and set to be deprecated in #3049.\r\n\r\n**After this change:**\r\n\r\n```\r\n(SDL) --parse-> (defaultValue literal config) --print --> (SDL)\r\n```\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3071",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3071/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3071/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3071/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3071",
      "id": 883850508,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjM3Mjg3Mzc3",
      "number": 3071,
      "title": "feat(subscribe): allow providing custom execute function for subscribe",
      "user": {
        "login": "n1ru4l",
        "id": 14338007,
        "node_id": "MDQ6VXNlcjE0MzM4MDA3",
        "avatar_url": "https://avatars.githubusercontent.com/u/14338007?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/n1ru4l",
        "html_url": "https://github.com/n1ru4l",
        "followers_url": "https://api.github.com/users/n1ru4l/followers",
        "following_url": "https://api.github.com/users/n1ru4l/following{/other_user}",
        "gists_url": "https://api.github.com/users/n1ru4l/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/n1ru4l/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/n1ru4l/subscriptions",
        "organizations_url": "https://api.github.com/users/n1ru4l/orgs",
        "repos_url": "https://api.github.com/users/n1ru4l/repos",
        "events_url": "https://api.github.com/users/n1ru4l/events{/privacy}",
        "received_events_url": "https://api.github.com/users/n1ru4l/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 4,
      "created_at": "2021-05-10T09:46:30Z",
      "updated_at": "2021-06-30T10:53:41Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3071",
        "html_url": "https://github.com/graphql/graphql-js/pull/3071",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3071.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3071.patch"
      },
      "body": "This allows solving https://github.com/graphql/graphql-js/issues/894 and https://github.com/enisdenjo/graphql-ws/pull/180 in user-land by providing a custom execute function for `subscribe`, that creates the `contextValue` per published value (for each `execute` invocation), instead of once for the whole subscription.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3067",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3067/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3067/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3067/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3067",
      "id": 879636424,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjMzMzQxMTY1",
      "number": 3067,
      "title": "Unify InputValueConfig in schema definition",
      "user": {
        "login": "leebyron",
        "id": 50130,
        "node_id": "MDQ6VXNlcjUwMTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leebyron",
        "html_url": "https://github.com/leebyron",
        "followers_url": "https://api.github.com/users/leebyron/followers",
        "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
        "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
        "organizations_url": "https://api.github.com/users/leebyron/orgs",
        "repos_url": "https://api.github.com/users/leebyron/repos",
        "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/leebyron/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-05-07T19:52:20Z",
      "updated_at": "2021-06-02T00:10:42Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3067",
        "html_url": "https://github.com/graphql/graphql-js/pull/3067",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3067.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3067.patch"
      },
      "body": "Depends on #3059\r\n\r\nDefines a central `GraphQLInputValueConfig` and `GraphQLInputValue` as well as single definitions for converting between them, unifying this common functionality between input values and arguments.\r\n\r\nThis is a pre-req for #3049, as it means we now have a single authority for how `defaultValue` is defined, as that is a property of `InputValue`",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3065",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3065/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3065/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3065/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3065",
      "id": 877744040,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjMxNjQ3Mjc5",
      "number": 3065,
      "title": "Add valueToLiteral()",
      "user": {
        "login": "leebyron",
        "id": 50130,
        "node_id": "MDQ6VXNlcjUwMTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leebyron",
        "html_url": "https://github.com/leebyron",
        "followers_url": "https://api.github.com/users/leebyron/followers",
        "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
        "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
        "organizations_url": "https://api.github.com/users/leebyron/orgs",
        "repos_url": "https://api.github.com/users/leebyron/repos",
        "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/leebyron/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1197731240,
          "node_id": "MDU6TGFiZWwxMTk3NzMxMjQw",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20feature%20%F0%9F%9A%80",
          "name": "PR: feature üöÄ",
          "color": "c5def5",
          "default": false,
          "description": "requires increase of \"minor\" version number"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 16,
      "created_at": "2021-05-06T17:06:09Z",
      "updated_at": "2021-06-03T17:10:34Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3065",
        "html_url": "https://github.com/graphql/graphql-js/pull/3065",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3065.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3065.patch"
      },
      "body": "Depends on #3077\r\n\r\n**Provides the \"Value to Literal\" methods in this [data flow chart](https://user-images.githubusercontent.com/50130/118379946-51ac5300-b593-11eb-839f-c483ecfbc875.png).**\r\n\r\n* Adds `valueToLiteral()` which takes an external input value and translates it to a literal, allowing for custom scalars to define this behavior.\r\n    \r\n**This also adds important changes to Input Coercion, especially for custom scalars:**\r\n    \r\n* The value provided to `parseLiteral` is now `ConstValueNode` and the second `variables` argument has been removed. For all built-in scalars this has no effect, but any custom scalars which use complex literals no longer need to do variable reconciliation manually (in fact most do not -- this has been an easy subtle bug to miss).\r\n    \r\n  This behavior is possible with the addition of `replaceVariables`",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3051",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3051/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3051/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3051/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/3051",
      "id": 867988264,
      "node_id": "MDU6SXNzdWU4Njc5ODgyNjQ=",
      "number": 3051,
      "title": "Default value declared via SDL may not introspect correctly",
      "user": {
        "login": "leebyron",
        "id": 50130,
        "node_id": "MDQ6VXNlcjUwMTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leebyron",
        "html_url": "https://github.com/leebyron",
        "followers_url": "https://api.github.com/users/leebyron/followers",
        "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
        "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
        "organizations_url": "https://api.github.com/users/leebyron/orgs",
        "repos_url": "https://api.github.com/users/leebyron/repos",
        "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/leebyron/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-04-26T18:15:39Z",
      "updated_at": "2021-05-09T20:06:07Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "> One interesting aspect here is that a default value declared via SDL is coerced twice:\r\n> Once via `valueFromAST` and then again via `coerceInputValueImpl`. Is my reading here correct?\r\n>\r\n> I am not really sure this is a problem, but I wanted to call that out.\r\n>\r\n> _Originally posted by @andimarek in https://github.com/graphql/graphql-js/issues/3049#issuecomment-827036666_\r\n\r\nThat's a good call out. Coercing more than once should be safe, assuming that `coerce(X) == coerce(serialize(coerce(X)))` \r\n\r\nHowever I think this is likely exposing a real (but maybe low-impact) bug, even before this diff. Default values are exposed via introspection and are not expected to include nested default values:\r\n\r\n```graphql\r\ninput A {\r\n  a: B = {}\r\n}\r\n\r\ninput B {\r\n  c: Int = 0\r\n}\r\n```\r\n\r\nWhen introspecting `A.a`, we should see `\"defaultValue\": \"{}\"` but if I read correctly likely will see `\"defaultValue\": \"{c:0}\"`\r\n\r\nIf you were to re-print this SDL after introspection, you'd have:\r\n\r\n```graphql\r\ninput A {\r\n  a: B = { c: 0 }\r\n}\r\n```\r\n\r\nwhich broke the original intent.\r\n\r\nExecuted results would be correct, however schema representation would be off.\r\n\r\nNotably, constructing the schema programmatically would not encounter this bug - only using AST creation would because of how `valueFromAST` works.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3049",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3049/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3049/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3049/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3049",
      "id": 866953281,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjIyNzI0OTY4",
      "number": 3049,
      "title": "RFC: Default value validation & coercion",
      "user": {
        "login": "leebyron",
        "id": 50130,
        "node_id": "MDQ6VXNlcjUwMTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leebyron",
        "html_url": "https://github.com/leebyron",
        "followers_url": "https://api.github.com/users/leebyron/followers",
        "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
        "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
        "organizations_url": "https://api.github.com/users/leebyron/orgs",
        "repos_url": "https://api.github.com/users/leebyron/repos",
        "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/leebyron/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 936557659,
          "node_id": "MDU6TGFiZWw5MzY1NTc2NTk=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20breaking%20change%20%F0%9F%92%A5",
          "name": "PR: breaking change üí•",
          "color": "b60205",
          "default": false,
          "description": "implementation requires increase of \"major\" version number"
        },
        {
          "id": 936579478,
          "node_id": "MDU6TGFiZWw5MzY1Nzk0Nzg=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/spec%20RFC",
          "name": "spec RFC",
          "color": "d4c5f9",
          "default": false,
          "description": "Implementation of a proposed change to the GraphQL specification"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 26,
      "created_at": "2021-04-25T08:45:47Z",
      "updated_at": "2021-06-11T15:55:34Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3049",
        "html_url": "https://github.com/graphql/graphql-js/pull/3049",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3049.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3049.patch"
      },
      "body": "Depends on #3086\r\nImplements https://github.com/graphql/graphql-spec/pull/793/\r\n\r\n* BREAKING: Changes default values from being represented as an assumed-coerced \"internal input value\" to a pre-coerced \"external input value\" (See chart below).\r\n\r\n  This allows programmatically provided default values to be represented in the same domain as values sent to the service via variable values, and allows it to have well defined methods for both transforming into a printed GraphQL literal string for introspection / schema printing (via `valueToLiteral()`) or coercing into an \"internal input value\" for use at runtime (via `coerceInputValue()`)\r\n\r\n  To support this change in value type, this PR adds two related behavioral changes:\r\n  * Adds coercion of default values from external to internal at runtime (within `coerceInputValue()`)\r\n  * Removes `astFromValue()`, replacing it with `valueToLiteral()` for use in introspection and schema printing. `astFromValue()` performed unsafe \"uncoercion\" to convert an \"Internal input value\" directly to a \"GraphQL Literal AST\", where `valueToLiteral()` performs a well defined transform from \"External input value\" to \"GraphQL Literal AST\".\r\n\r\n* Adds validation of default values during schema validation.\r\n\r\n  Since assumed-coerced \"internal\" values may not pass \"external\" validation (for example, Enum values), an additional validation error has been included which attempts to detect this case and report a strategy for resolution.\r\n\r\n\r\n---\r\n\r\nThis is the final PR in a stack which builds up to supporting this RFC behavior change:\r\n\r\n* Add coerceInputLiteral() #3092\r\n* Preserve defaultValue literals #3074\r\n* Preserve sources of variable values #3077\r\n* Add valueToLiteral() #3065\r\n* Input Value Validation #3086\r\n* **RFC: Default value validation & coercion #3049**\r\n\r\n---\r\n\r\nHere's a broad overview of the intended end state:\r\n\r\n![GraphQL Value Flow](https://user-images.githubusercontent.com/50130/118379946-51ac5300-b593-11eb-839f-c483ecfbc875.png)",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3048",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3048/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3048/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3048/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/3048",
      "id": 865545983,
      "node_id": "MDU6SXNzdWU4NjU1NDU5ODM=",
      "number": 3048,
      "title": "Missing `__Directive.args(includeDeprecated:)`",
      "user": {
        "login": "leebyron",
        "id": 50130,
        "node_id": "MDQ6VXNlcjUwMTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leebyron",
        "html_url": "https://github.com/leebyron",
        "followers_url": "https://api.github.com/users/leebyron/followers",
        "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
        "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
        "organizations_url": "https://api.github.com/users/leebyron/orgs",
        "repos_url": "https://api.github.com/users/leebyron/repos",
        "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/leebyron/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1197187805,
          "node_id": "MDU6TGFiZWwxMTk3MTg3ODA1",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20bug%20fix%20%F0%9F%90%9E",
          "name": "PR: bug fix üêû",
          "color": "006b75",
          "default": false,
          "description": "requires increase of \"patch\" version number"
        },
        {
          "id": 936579478,
          "node_id": "MDU6TGFiZWw5MzY1Nzk0Nzg=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/spec%20RFC",
          "name": "spec RFC",
          "color": "d4c5f9",
          "default": false,
          "description": "Implementation of a proposed change to the GraphQL specification"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "IvanGoncharov",
        "id": 8336157,
        "node_id": "MDQ6VXNlcjgzMzYxNTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IvanGoncharov",
        "html_url": "https://github.com/IvanGoncharov",
        "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
        "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
        "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
        "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
        "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
        "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "IvanGoncharov",
          "id": 8336157,
          "node_id": "MDQ6VXNlcjgzMzYxNTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/IvanGoncharov",
          "html_url": "https://github.com/IvanGoncharov",
          "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
          "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
          "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
          "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
          "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
          "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-04-22T22:43:14Z",
      "updated_at": "2021-04-22T22:43:14Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "There's a missing piece of https://github.com/graphql/graphql-spec/pull/805 from the PR #1560 which landed a while back:\r\n\r\n`__Directive.args(includeDeprecated:)` should exist but does not according to this test:\r\n\r\nhttps://github.com/graphql/graphql-js/pull/1560/files#diff-e30b759eeb9ff1ca829b96188286e61254c19417473b25c2e4a26ee9b6a8fe91R964\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3047",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3047/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3047/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3047/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3047",
      "id": 863718025,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjIwMDc1MDkx",
      "number": 3047,
      "title": "Feat: Expose user-defined directives via introspection",
      "user": {
        "login": "skywickenden",
        "id": 4930551,
        "node_id": "MDQ6VXNlcjQ5MzA1NTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4930551?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skywickenden",
        "html_url": "https://github.com/skywickenden",
        "followers_url": "https://api.github.com/users/skywickenden/followers",
        "following_url": "https://api.github.com/users/skywickenden/following{/other_user}",
        "gists_url": "https://api.github.com/users/skywickenden/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/skywickenden/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/skywickenden/subscriptions",
        "organizations_url": "https://api.github.com/users/skywickenden/orgs",
        "repos_url": "https://api.github.com/users/skywickenden/repos",
        "events_url": "https://api.github.com/users/skywickenden/events{/privacy}",
        "received_events_url": "https://api.github.com/users/skywickenden/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-04-21T10:28:09Z",
      "updated_at": "2021-04-21T10:28:12Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3047",
        "html_url": "https://github.com/graphql/graphql-js/pull/3047",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3047.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3047.patch"
      },
      "body": "Initial exploratory work to expose user-defined directives via introspection.\r\n\r\nThis is unfinished and once complete should be used to create an experimental branch rather than merge into master as this is not yet in the [graphql-spec](https://github.com/graphql/graphql-spec/issues/300)\r\n\r\nIt is being worked on to match the experimental features that have been published in the [dotnet](https://github.com/graphql-dotnet/graphql-dotnet/commit/22c1c207a4b2abccace67548b75bac3da04ec6c8) and [java](https://github.com/graphql-java/graphql-java/pull/2221) graphql implementations.\r\n\r\nResolves https://github.com/graphql/graphql-js/issues/2942\r\n\r\nThe below is taken from the Java implementation and demonstrates the final shape of the new `appliedDirectives` during introspection:\r\n\r\n```\r\n\"An Applied Directive is an instances of a directive as applied to a schema element. This type is NOT specified by the graphql specification presently.\"\r\ntype __AppliedDirective {\r\n  args: [__DirectiveArgument!]!\r\n  name: String\r\n}\r\n\r\n\"Directive arguments can have names and values.  The values are in graphql SDL syntax printed as a string. This type is NOT specified by the graphql specification presently.\"\r\ntype __DirectiveArgument {\r\n  name: String!\r\n  value: String\r\n}\r\n\r\ntype __EnumValue {\r\n  appliedDirectives: [__AppliedDirective!]!\r\n  deprecationReason: String\r\n  description: String\r\n  isDeprecated: Boolean!\r\n  name: String!\r\n}\r\n\r\ntype __Field {\r\n  appliedDirectives: [__AppliedDirective!]!\r\n  args: [__InputValue!]!\r\n  deprecationReason: String\r\n  description: String\r\n  isDeprecated: Boolean!\r\n  name: String!\r\n  type: __Type!\r\n}\r\n\r\ntype __InputValue {\r\n  appliedDirectives: [__AppliedDirective!]!\r\n  defaultValue: String\r\n  description: String\r\n  name: String!\r\n  type: __Type!\r\n}\r\n\r\n\"A GraphQL Introspection defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, the entry points for query, mutation, and subscription operations.\"\r\ntype __Schema {\r\n  appliedDirectives: [__AppliedDirective!]!\r\n  description: String\r\n  \"'A list of all directives supported by this server.\"\r\n  directives: [__Directive!]!\r\n  \"If this server supports mutation, the type that mutation operations will be rooted at.\"\r\n  mutationType: __Type\r\n  \"The type that query operations will be rooted at.\"\r\n  queryType: __Type!\r\n  \"'If this server support subscription, the type that subscription operations will be rooted at.\"\r\n  subscriptionType: __Type\r\n  \"A list of all types supported by this server.\"\r\n  types: [__Type!]!\r\n}\r\n\r\ntype __Type {\r\n  appliedDirectives: [__AppliedDirective!]!\r\n  description: String\r\n  enumValues(includeDeprecated: Boolean = false): [__EnumValue!]\r\n  fields(includeDeprecated: Boolean = false): [__Field!]\r\n  inputFields: [__InputValue!]\r\n  interfaces: [__Type!]\r\n  kind: __TypeKind!\r\n  name: String\r\n  ofType: __Type\r\n  possibleTypes: [__Type!]\r\n  specifiedByUrl: String\r\n}\r\n\r\n```\r\n\r\n### Current status\r\n\r\n`__AppliedDirectives` has been added to schema introspection requests. Its resolver needs developing to only include custom directives and to resolve an array of `__DirectiveArgument` for each `__AppliedDirective`\r\n\r\n`__DirectiveArgument` and `appliedDirectives` on `__Field`, `__EnumValue` and `__InputValue` needs developing",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3046",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3046/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3046/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3046/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3046",
      "id": 863671638,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjIwMDM4MDYw",
      "number": 3046,
      "title": "Fix #2895 `inputValueDeprecation: true` getIntrospectionQuery error ",
      "user": {
        "login": "davidgovea",
        "id": 489896,
        "node_id": "MDQ6VXNlcjQ4OTg5Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/489896?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgovea",
        "html_url": "https://github.com/davidgovea",
        "followers_url": "https://api.github.com/users/davidgovea/followers",
        "following_url": "https://api.github.com/users/davidgovea/following{/other_user}",
        "gists_url": "https://api.github.com/users/davidgovea/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davidgovea/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davidgovea/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgovea/orgs",
        "repos_url": "https://api.github.com/users/davidgovea/repos",
        "events_url": "https://api.github.com/users/davidgovea/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davidgovea/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-04-21T09:34:54Z",
      "updated_at": "2021-04-21T17:41:07Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3046",
        "html_url": "https://github.com/graphql/graphql-js/pull/3046",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3046.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3046.patch"
      },
      "body": "Issue #2895 \r\n\r\n* Adds test to reproduce the issue\r\n* Made a fix attempt: Not sure if removing `includeDeprecated` from directive is the right approach, but tests are passing",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/3044",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/3044/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/3044/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/3044/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/3044",
      "id": 859644838,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjE2Njg5MDQx",
      "number": 3044,
      "title": "Schema Coordinates",
      "user": {
        "login": "leebyron",
        "id": 50130,
        "node_id": "MDQ6VXNlcjUwMTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leebyron",
        "html_url": "https://github.com/leebyron",
        "followers_url": "https://api.github.com/users/leebyron/followers",
        "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
        "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
        "organizations_url": "https://api.github.com/users/leebyron/orgs",
        "repos_url": "https://api.github.com/users/leebyron/repos",
        "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/leebyron/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1197731240,
          "node_id": "MDU6TGFiZWwxMTk3NzMxMjQw",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20feature%20%F0%9F%9A%80",
          "name": "PR: feature üöÄ",
          "color": "c5def5",
          "default": false,
          "description": "requires increase of \"minor\" version number"
        },
        {
          "id": 936579478,
          "node_id": "MDU6TGFiZWw5MzY1Nzk0Nzg=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/spec%20RFC",
          "name": "spec RFC",
          "color": "d4c5f9",
          "default": false,
          "description": "Implementation of a proposed change to the GraphQL specification"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-04-16T09:33:20Z",
      "updated_at": "2021-06-03T17:53:33Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/3044",
        "html_url": "https://github.com/graphql/graphql-js/pull/3044",
        "diff_url": "https://github.com/graphql/graphql-js/pull/3044.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/3044.patch"
      },
      "body": "Depends on #3115\r\n\r\nImplements https://github.com/graphql/graphql-spec/pull/794/\r\n\r\nAdds:\r\n\r\n* DOT punctuator in lexer\r\n* Improvements to lexer errors around misuse of `.`\r\n* Minor improvement to parser core which simplified this addition\r\n* `SchemaCoordinate` node and `isSchemaCoodinate()` predicate\r\n* Support in `print()` and `visit()`\r\n* Added function `parseSchemaCoordinate()` since it is a parser entry point.\r\n* Added function `resolveSchemaCoordinate()` and `resolveASTSchemeCoordinate()` which implement the semantics (name mirrored from `buildASTSchema`) as well as the return type `GraphQLSchemaElement`",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2984",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2984/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2984/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2984/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2984",
      "id": 839277431,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTk5MzE4NDIw",
      "number": 2984,
      "title": "refactor(language/ast.d.ts): use Kind enum type",
      "user": {
        "login": "jjangga0214",
        "id": 28584151,
        "node_id": "MDQ6VXNlcjI4NTg0MTUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/28584151?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jjangga0214",
        "html_url": "https://github.com/jjangga0214",
        "followers_url": "https://api.github.com/users/jjangga0214/followers",
        "following_url": "https://api.github.com/users/jjangga0214/following{/other_user}",
        "gists_url": "https://api.github.com/users/jjangga0214/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jjangga0214/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jjangga0214/subscriptions",
        "organizations_url": "https://api.github.com/users/jjangga0214/orgs",
        "repos_url": "https://api.github.com/users/jjangga0214/repos",
        "events_url": "https://api.github.com/users/jjangga0214/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jjangga0214/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 6,
      "created_at": "2021-03-24T02:16:07Z",
      "updated_at": "2021-07-01T06:52:08Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2984",
        "html_url": "https://github.com/graphql/graphql-js/pull/2984",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2984.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2984.patch"
      },
      "body": "This is a simple refactoring, thus I don't think I should explain.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2983",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2983/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2983/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2983/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2983",
      "id": 839194453,
      "node_id": "MDU6SXNzdWU4MzkxOTQ0NTM=",
      "number": 2983,
      "title": "Return function of subscription's async iterator never resolves on some versions of Node 14",
      "user": {
        "login": "christhegrand",
        "id": 47118982,
        "node_id": "MDQ6VXNlcjQ3MTE4OTgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/47118982?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christhegrand",
        "html_url": "https://github.com/christhegrand",
        "followers_url": "https://api.github.com/users/christhegrand/followers",
        "following_url": "https://api.github.com/users/christhegrand/following{/other_user}",
        "gists_url": "https://api.github.com/users/christhegrand/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christhegrand/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christhegrand/subscriptions",
        "organizations_url": "https://api.github.com/users/christhegrand/orgs",
        "repos_url": "https://api.github.com/users/christhegrand/repos",
        "events_url": "https://api.github.com/users/christhegrand/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christhegrand/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-03-23T23:07:20Z",
      "updated_at": "2021-03-23T23:08:26Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "I'm trying to upgrade my codebase from Node 12.21 to Node 14, and I noticed that on some versions of Node 14, the return() function called in subscription/mapAsyncIterator.js never actually resolves the promise it returns, so the code that we have in a .then() never runs. I've tried to put together a test case for this, but frustratingly enough I can't seem to reproduce this in a short test script, although we have a couple of tests that can reproduce this problem every time. \r\n\r\nAnyway, we create a subclass of a passthrough stream like this:\r\n\r\n```\r\nexport class MessageStream extends PassThrough {\r\n  constructor(opts = {}) {\r\n    opts.objectMode = true\r\n    super(opts)\r\n  }\r\n  write(msg, encodingOrCB, cb) {\r\n    return super.write(msg, encodingOrCB, cb)\r\n  }\r\n}\r\n```\r\n\r\nOur subscribe function returns this message stream, which the GraphQL library then creates an async iterator from:\r\n\r\n```\r\n            subscribe: (parent, arg, ctx) => {\r\n                const messageStream = new MessageStream();\r\n                let unsubFuncs = [];\r\n                let closed = false;\r\n                function close() {\r\n                    for (const unsub of unsubFuncs) {\r\n                        unsub();\r\n                    }\r\n                }\r\n                args.subscribe(parent, arg, ctx, messageStream).then(unsubs => {\r\n                    unsubFuncs = unsubs;\r\n                    // this is to fix a potential race condition when the stream gets closed before the promise resolves\r\n                    if (closed) {\r\n                        close();\r\n                    }\r\n                }).catch((e) => {\r\n                    server_config_1.default.warn(`error on subscription ${e.message} ${e.stack}`);\r\n                    messageStream.end();\r\n                });\r\n                // need to have both close and end\r\n                // close is for when the client closes\r\n                // end is for when we end the stream like on an error\r\n                // or from within a resolver\r\n                messageStream.on('close', () => {\r\n                    console.log('in close event');\r\n                    close();\r\n                    closed = true;\r\n                });\r\n                messageStream.on('end', () => {\r\n                    close();\r\n                    closed = true;\r\n                });\r\n                messageStream.on('error', (e) => {\r\n                    server_config_1.default.warn(`error on subscription ${e.message} ${e.stack}`);\r\n                });\r\n                return messageStream;\r\n            }\r\n        };\r\n    };\r\n};\r\n```\r\n\r\nWe then store the async iterator returned from the GraphQL subscription for later use. When a user unsubscribes, we call the return function on the async iterator, and have some code that runs in a .then afterwards. This is where we are seeing a problem. On Node 12.21, which we were previously using, the code in the .then() runs just fine, and our send function gets called:\r\n\r\n```\r\n           ai.return().then(_ => {\r\n              send({id, data: {unsubscribe: true}}, req)\r\n            }).catch(err => {\r\n              console.log(err)\r\n            })\r\n```\r\n\r\nBut on some versions of Node 14, the code in the .then and .catch never runs at all, because the promise returned by the return() function never actually resolves. The code above works in Node 14 up to Node 14.10.0, when it breaks, then it works in Node 14.10.1, then it breaks again in Node 14.14.0 and higher. The change that seems to be breaking the code is a change to the async iterator code in Node 14, which originally went out in Node 14.10.0, was reverted in 14.10.1, and which was then re-added in Node 14.14.0. You can see the change here: https://github.com/nodejs/node/commit/573410fb69580f677ece9f383b3f00c5c38782ef\r\n\r\nThere's some discussion of the change here too: https://github.com/nodejs/node/pull/34887\r\n\r\nAnyway, I hope this is all clear enough... I see that the $return variable that gets set in subscription/mapAsyncIterator.js is using iterator.return, which looks like it's a different function in the latest versions of Node 14 (you can see this in the deleted async iterator file's diff above). Does this return function now need to be pointing to a different function in the underlying iterator in order to work as expected?",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2974",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2974/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2974/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2974/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2974",
      "id": 835206186,
      "node_id": "MDU6SXNzdWU4MzUyMDYxODY=",
      "number": 2974,
      "title": "Resolvers keep running even after one of them throws/rejects - consider Promise.allSettled?",
      "user": {
        "login": "olsavmic",
        "id": 3778875,
        "node_id": "MDQ6VXNlcjM3Nzg4NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3778875?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olsavmic",
        "html_url": "https://github.com/olsavmic",
        "followers_url": "https://api.github.com/users/olsavmic/followers",
        "following_url": "https://api.github.com/users/olsavmic/following{/other_user}",
        "gists_url": "https://api.github.com/users/olsavmic/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olsavmic/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olsavmic/subscriptions",
        "organizations_url": "https://api.github.com/users/olsavmic/orgs",
        "repos_url": "https://api.github.com/users/olsavmic/repos",
        "events_url": "https://api.github.com/users/olsavmic/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olsavmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 230677108,
          "node_id": "MDU6TGFiZWwyMzA2NzcxMDg=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/enhancement",
          "name": "enhancement",
          "color": "84b6eb",
          "default": true,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/graphql/graphql-js/milestones/2",
        "html_url": "https://github.com/graphql/graphql-js/milestone/2",
        "labels_url": "https://api.github.com/repos/graphql/graphql-js/milestones/2/labels",
        "id": 5767450,
        "node_id": "MDk6TWlsZXN0b25lNTc2NzQ1MA==",
        "number": 2,
        "title": "16.0.0-alpha.1",
        "description": "",
        "creator": {
          "login": "IvanGoncharov",
          "id": 8336157,
          "node_id": "MDQ6VXNlcjgzMzYxNTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/IvanGoncharov",
          "html_url": "https://github.com/IvanGoncharov",
          "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
          "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
          "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
          "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
          "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
          "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2,
        "closed_issues": 2,
        "state": "open",
        "created_at": "2020-08-13T06:14:53Z",
        "updated_at": "2021-06-13T17:25:51Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 2,
      "created_at": "2021-03-18T20:07:32Z",
      "updated_at": "2021-04-06T09:31:49Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Hi,\r\nI recently came across this issue while trying to create a DB transaction per request.\r\n\r\nThe reason for using a DB transaction per request (which means 1 connection per client) is to keep the returned data consistent (`ISOLATION READ COMMITED`) as with increased traffic some inconsistencies started to occur on certain queries.\r\n\r\nThe second reason is having more control over the db connections to support load balancing with dynamic number of read replicas (as the only available solution unfortunately does not support connection pool). However I suppose this can be solved with some effort.\r\n\r\nThe problem is that **when one of the resolvers fails with error** (which is not a casual case but happens sometimes), **other resolvers keep running**. However I need to **release the db connection** before I send the response which sometimes happens **before the rest of resolvers finishes** (most of them are data loaders which makes the problem more obvious as the default behaviour is to wait for the next tick until the batch operation runs).\r\n\r\nThe problem could be resolved by using `Promise.allSettled` instead of `Promise.all`. I can't come up with any problem this change could cause except longer time till response in case of error.\r\n\r\nCan you please correct me if I'm mistaken or consider this change? Or maybe transactional processing of resolvers is a bad idea in general (although I don't see any reason except the performance gain from using multiple connections per request)\r\n\r\nThanks a lot! \r\n\r\n ",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2950",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2950/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2950/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2950/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2950",
      "id": 827274683,
      "node_id": "MDU6SXNzdWU4MjcyNzQ2ODM=",
      "number": 2950,
      "title": "Requesting multiple examples for in-browser usage",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following{/other_user}",
        "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 255319421,
          "node_id": "MDU6TGFiZWwyNTUzMTk0MjE=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/documentation",
          "name": "documentation",
          "color": "bfe5bf",
          "default": true,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/graphql/graphql-js/milestones/3",
        "html_url": "https://github.com/graphql/graphql-js/milestone/3",
        "labels_url": "https://api.github.com/repos/graphql/graphql-js/milestones/3/labels",
        "id": 5767456,
        "node_id": "MDk6TWlsZXN0b25lNTc2NzQ1Ng==",
        "number": 3,
        "title": "post-16.0.0",
        "description": "",
        "creator": {
          "login": "IvanGoncharov",
          "id": 8336157,
          "node_id": "MDQ6VXNlcjgzMzYxNTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/IvanGoncharov",
          "html_url": "https://github.com/IvanGoncharov",
          "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
          "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
          "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
          "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
          "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
          "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 10,
        "closed_issues": 0,
        "state": "open",
        "created_at": "2020-08-13T06:15:26Z",
        "updated_at": "2021-03-31T17:52:15Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-03-10T07:31:10Z",
      "updated_at": "2021-05-30T18:55:56Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Would you please provide examples addressing multiple usage scenarios for the in-browser usage situation?\r\nGoing through the GraphiQL repository just to understand how to use in-browser is quite cumbersome.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2949",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2949/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2949/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2949/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2949",
      "id": 824652080,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTg2ODUxMjMx",
      "number": 2949,
      "title": "introspection: Allow interfaces to be undefined for interfaces",
      "user": {
        "login": "Tapped",
        "id": 1014854,
        "node_id": "MDQ6VXNlcjEwMTQ4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1014854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Tapped",
        "html_url": "https://github.com/Tapped",
        "followers_url": "https://api.github.com/users/Tapped/followers",
        "following_url": "https://api.github.com/users/Tapped/following{/other_user}",
        "gists_url": "https://api.github.com/users/Tapped/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Tapped/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Tapped/subscriptions",
        "organizations_url": "https://api.github.com/users/Tapped/orgs",
        "repos_url": "https://api.github.com/users/Tapped/repos",
        "events_url": "https://api.github.com/users/Tapped/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Tapped/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-03-08T15:06:51Z",
      "updated_at": "2021-03-08T18:43:57Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2949",
        "html_url": "https://github.com/graphql/graphql-js/pull/2949",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2949.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2949.patch"
      },
      "body": "The old code was using strict equality check for null to check if the introspected field `interfaces` was not defined, which means that it would fail in case `interfaces` was set to undefined. Older GraphQL implementations will not send the `interfaces` field when introspecting an interface, and thus would fail with `Introspection result missing interfaces`.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2944",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2944/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2944/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2944/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2944",
      "id": 821349444,
      "node_id": "MDU6SXNzdWU4MjEzNDk0NDQ=",
      "number": 2944,
      "title": "Default values that are enums are not validated",
      "user": {
        "login": "Cito",
        "id": 464599,
        "node_id": "MDQ6VXNlcjQ2NDU5OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/464599?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Cito",
        "html_url": "https://github.com/Cito",
        "followers_url": "https://api.github.com/users/Cito/followers",
        "following_url": "https://api.github.com/users/Cito/following{/other_user}",
        "gists_url": "https://api.github.com/users/Cito/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Cito/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Cito/subscriptions",
        "organizations_url": "https://api.github.com/users/Cito/orgs",
        "repos_url": "https://api.github.com/users/Cito/repos",
        "events_url": "https://api.github.com/users/Cito/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Cito/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/graphql/graphql-js/milestones/3",
        "html_url": "https://github.com/graphql/graphql-js/milestone/3",
        "labels_url": "https://api.github.com/repos/graphql/graphql-js/milestones/3/labels",
        "id": 5767456,
        "node_id": "MDk6TWlsZXN0b25lNTc2NzQ1Ng==",
        "number": 3,
        "title": "post-16.0.0",
        "description": "",
        "creator": {
          "login": "IvanGoncharov",
          "id": 8336157,
          "node_id": "MDQ6VXNlcjgzMzYxNTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/IvanGoncharov",
          "html_url": "https://github.com/IvanGoncharov",
          "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
          "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
          "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
          "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
          "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
          "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 10,
        "closed_issues": 0,
        "state": "open",
        "created_at": "2020-08-13T06:15:26Z",
        "updated_at": "2021-03-31T17:52:15Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 1,
      "created_at": "2021-03-03T17:59:22Z",
      "updated_at": "2021-03-31T17:47:51Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "Recently [the issue](https://github.com/graphql-python/graphql-core/issues/122) was raised for the Python port [graphql-core](https://github.com/graphql-python/graphql-core) that enum values aren't validated against their defintion when they are used as default arguments SDL. This is the example that was given:\r\n\r\n```js\r\nconst sdl = `\r\nenum Role {\r\n  ADMIN\r\n  USER\r\n}\r\n\r\ntype Query {\r\n  hello(r: Role = ADMIN): String\r\n  complex(i: Test = { role: DOES_NOT_EXIST }): String\r\n  complexAlt(i: Test): String\r\n}\r\n\r\ninput Test {\r\n  ignore: String\r\n  role: Role = INVALID\r\n}\r\n`\r\n\r\nconst schema = graphql.buildASTSchema(graphql.parse(sdl))\r\n\r\nconst fields = schema.getType('Query').getFields()\r\nconst arg1 = fields.hello.args[0]\r\nconst arg2 = fields.complex.args[0]\r\n\r\nconsole.log(arg1, arg2)\r\n```\r\n\r\nShould schema validation not show this is an error?\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2943",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2943/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2943/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2943/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2943",
      "id": 820967591,
      "node_id": "MDU6SXNzdWU4MjA5Njc1OTE=",
      "number": 2943,
      "title": "Visability",
      "user": {
        "login": "JipSterk",
        "id": 17934897,
        "node_id": "MDQ6VXNlcjE3OTM0ODk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/17934897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JipSterk",
        "html_url": "https://github.com/JipSterk",
        "followers_url": "https://api.github.com/users/JipSterk/followers",
        "following_url": "https://api.github.com/users/JipSterk/following{/other_user}",
        "gists_url": "https://api.github.com/users/JipSterk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JipSterk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JipSterk/subscriptions",
        "organizations_url": "https://api.github.com/users/JipSterk/orgs",
        "repos_url": "https://api.github.com/users/JipSterk/repos",
        "events_url": "https://api.github.com/users/JipSterk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JipSterk/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-03-03T10:22:00Z",
      "updated_at": "2021-03-03T10:22:00Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "This issue originated at [type-graphql](https://github.com/MichalLytek/type-graphql/issues/796)\r\n\r\nFor a project i want to build a schema where some parts of the schema can be omitted based on a condition.\r\nAfter some research i came across `graphql-ruby` they have this [visible](https://graphql-ruby.org/authorization/visibility.html) field which can be added.\r\n\r\nBy default everything is visible but you can hide parts of the schema by overriding its `visible` field based on some logic.\r\nThis also includes introspection, `fragments`, `__schema` and `__type(name: \"SecretFeature\")` which all will return `null/undefined`\r\n\r\nan example just using `context`\r\n```ts\r\nnew GraphQLObjectType({\r\n  name: \"SecretFeature\",\r\n  visible: (context) => context.user.permissions.include(\"read:secret\"),\r\n  fields: {\r\n    secret: {\r\n      type: GraphQLString\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nan example using `context` & `root`\r\n```ts\r\nnew GraphQLObjectType({\r\n  name: \"DeletePostMutation\",\r\n  visible: (root, context) => root.creatorId === context.user.id\r\n  fields: {\r\n    postId: {\r\n      type: GraphQLID\r\n    }\r\n  }\r\n})\r\n```\r\n\r\ni also found some [pseudo-code](https://github.com/graphql/graphql-js/issues/113#issuecomment-663252167) for implementing such feature",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2942",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2942/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2942/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2942/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2942",
      "id": 820042600,
      "node_id": "MDU6SXNzdWU4MjAwNDI2MDA=",
      "number": 2942,
      "title": "Expose user-defined meta-information via introspection API in form of directives",
      "user": {
        "login": "simoneb",
        "id": 20181,
        "node_id": "MDQ6VXNlcjIwMTgx",
        "avatar_url": "https://avatars.githubusercontent.com/u/20181?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/simoneb",
        "html_url": "https://github.com/simoneb",
        "followers_url": "https://api.github.com/users/simoneb/followers",
        "following_url": "https://api.github.com/users/simoneb/following{/other_user}",
        "gists_url": "https://api.github.com/users/simoneb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/simoneb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/simoneb/subscriptions",
        "organizations_url": "https://api.github.com/users/simoneb/orgs",
        "repos_url": "https://api.github.com/users/simoneb/repos",
        "events_url": "https://api.github.com/users/simoneb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/simoneb/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-03-02T13:56:09Z",
      "updated_at": "2021-03-02T13:56:09Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "This is a copy of https://github.com/graphql/graphql-spec/issues/300. I'm opening this to check if there's any interest in implementing this feature even without the spec supporting it.\r\n\r\nThe reason is that this feature would be quite useful to have and two major implementations are already supporting it or working to implement it (Java and .NET, see linked issue).",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2941",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2941/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2941/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2941/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2941",
      "id": 816710881,
      "node_id": "MDU6SXNzdWU4MTY3MTA4ODE=",
      "number": 2941,
      "title": "Add documentation for the executeSync method",
      "user": {
        "login": "brybrophy",
        "id": 16469185,
        "node_id": "MDQ6VXNlcjE2NDY5MTg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/16469185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brybrophy",
        "html_url": "https://github.com/brybrophy",
        "followers_url": "https://api.github.com/users/brybrophy/followers",
        "following_url": "https://api.github.com/users/brybrophy/following{/other_user}",
        "gists_url": "https://api.github.com/users/brybrophy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/brybrophy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brybrophy/subscriptions",
        "organizations_url": "https://api.github.com/users/brybrophy/orgs",
        "repos_url": "https://api.github.com/users/brybrophy/repos",
        "events_url": "https://api.github.com/users/brybrophy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/brybrophy/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 255319421,
          "node_id": "MDU6TGFiZWwyNTUzMTk0MjE=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/documentation",
          "name": "documentation",
          "color": "bfe5bf",
          "default": true,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-02-25T19:03:08Z",
      "updated_at": "2021-05-30T18:55:45Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "My company recently discovered the undocumented `executeSync` method that is exposed in `graphql-js`. We would like to use it to synchronously generate schema based mock data for our tests, however, we are wary of using an undocumented API.\r\n\r\nIs this method intended for internal use only, or is it safe to assume that no breaking changes will be introduced? If this method is safe for external users to consume, it would be great to add it to the documentation.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2910",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2910/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2910/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2910/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2910",
      "id": 804471235,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTcwMjMyMzc1",
      "number": 2910,
      "title": "Allow Buffer objects to be seamlessly treated as string and ID types",
      "user": {
        "login": "pospi",
        "id": 437540,
        "node_id": "MDQ6VXNlcjQzNzU0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/437540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pospi",
        "html_url": "https://github.com/pospi",
        "followers_url": "https://api.github.com/users/pospi/followers",
        "following_url": "https://api.github.com/users/pospi/following{/other_user}",
        "gists_url": "https://api.github.com/users/pospi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pospi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pospi/subscriptions",
        "organizations_url": "https://api.github.com/users/pospi/orgs",
        "repos_url": "https://api.github.com/users/pospi/repos",
        "events_url": "https://api.github.com/users/pospi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pospi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-02-09T11:37:26Z",
      "updated_at": "2021-02-09T11:37:29Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2910",
        "html_url": "https://github.com/graphql/graphql-js/pull/2910",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2910.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2910.patch"
      },
      "body": "This results in an ergonomic improvement when GraphQL is used with `msgpack` API calls in resolvers.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2901",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2901/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2901/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2901/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2901",
      "id": 797287795,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTY0MzIzMTM2",
      "number": 2901,
      "title": "Clarify comment about mutually exclusive parents",
      "user": {
        "login": "andimarek",
        "id": 1706744,
        "node_id": "MDQ6VXNlcjE3MDY3NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1706744?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andimarek",
        "html_url": "https://github.com/andimarek",
        "followers_url": "https://api.github.com/users/andimarek/followers",
        "following_url": "https://api.github.com/users/andimarek/following{/other_user}",
        "gists_url": "https://api.github.com/users/andimarek/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andimarek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andimarek/subscriptions",
        "organizations_url": "https://api.github.com/users/andimarek/orgs",
        "repos_url": "https://api.github.com/users/andimarek/repos",
        "events_url": "https://api.github.com/users/andimarek/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andimarek/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-01-30T00:27:07Z",
      "updated_at": "2021-01-30T00:27:07Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2901",
        "html_url": "https://github.com/graphql/graphql-js/pull/2901",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2901.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2901.patch"
      },
      "body": "",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2899",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2899/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2899/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2899/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2899",
      "id": 795255747,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTYyNjM1MzA0",
      "number": 2899,
      "title": "Migrate to TypeScript",
      "user": {
        "login": "kamilkisiela",
        "id": 8167190,
        "node_id": "MDQ6VXNlcjgxNjcxOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8167190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kamilkisiela",
        "html_url": "https://github.com/kamilkisiela",
        "followers_url": "https://api.github.com/users/kamilkisiela/followers",
        "following_url": "https://api.github.com/users/kamilkisiela/following{/other_user}",
        "gists_url": "https://api.github.com/users/kamilkisiela/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kamilkisiela/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kamilkisiela/subscriptions",
        "organizations_url": "https://api.github.com/users/kamilkisiela/orgs",
        "repos_url": "https://api.github.com/users/kamilkisiela/repos",
        "events_url": "https://api.github.com/users/kamilkisiela/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kamilkisiela/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-01-27T16:32:49Z",
      "updated_at": "2021-03-28T15:22:57Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2899",
        "html_url": "https://github.com/graphql/graphql-js/pull/2899",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2899.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2899.patch"
      },
      "body": "#2828\r\n\r\n- [x] Remove polyfills\r\n- [x] Fix test coverage\r\n- [x] Compare and remove .d.ts\r\n- [x] Flow types\r\n- [x] Type checking (no errors)\r\n- [x] Convert type to interfaces\r\n- [x] Enable as much as possible ESLint rules\r\n\r\nFew ESLint rules left. \r\nTo go fully `strict` we need to cover `noImplicitAny`, `strictNullChecks` which I can do in a next PR.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2895",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2895/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2895/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2895/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2895",
      "id": 795117134,
      "node_id": "MDU6SXNzdWU3OTUxMTcxMzQ=",
      "number": 2895,
      "title": "Unknown argument \"includeDeprecated\" on field \"__Directive.args\"",
      "user": {
        "login": "Betree",
        "id": 1556356,
        "node_id": "MDQ6VXNlcjE1NTYzNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1556356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Betree",
        "html_url": "https://github.com/Betree",
        "followers_url": "https://api.github.com/users/Betree/followers",
        "following_url": "https://api.github.com/users/Betree/following{/other_user}",
        "gists_url": "https://api.github.com/users/Betree/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Betree/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Betree/subscriptions",
        "organizations_url": "https://api.github.com/users/Betree/orgs",
        "repos_url": "https://api.github.com/users/Betree/repos",
        "events_url": "https://api.github.com/users/Betree/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Betree/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 230677111,
          "node_id": "MDU6TGFiZWwyMzA2NzcxMTE=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/question",
          "name": "question",
          "color": "cc317c",
          "default": true,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "IvanGoncharov",
        "id": 8336157,
        "node_id": "MDQ6VXNlcjgzMzYxNTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IvanGoncharov",
        "html_url": "https://github.com/IvanGoncharov",
        "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
        "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
        "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
        "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
        "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
        "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "IvanGoncharov",
          "id": 8336157,
          "node_id": "MDQ6VXNlcjgzMzYxNTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/IvanGoncharov",
          "html_url": "https://github.com/IvanGoncharov",
          "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
          "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
          "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
          "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
          "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
          "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2021-01-27T13:48:56Z",
      "updated_at": "2021-04-27T16:44:38Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "With the [update](https://github.com/opencollective/opencollective-api/pull/5191) to 15.5.0, we need to implement our own script to fetch the GraphQL schema (`get-graphql-schema` that we were using doesn't seem to be maintained anymore).\r\n\r\nI'm using the following script to achieve that:\r\n\r\n```bash\r\nnpm run script scripts/update-graphql-schemas.ts http://localhost:3060/graphql/v1\r\n```\r\n\r\n```ts\r\n// scripts/update-graphql-schemas.ts\r\n\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\n\r\nimport { buildClientSchema } from 'graphql/utilities/buildClientSchema';\r\nimport { getIntrospectionQuery } from 'graphql/utilities/getIntrospectionQuery';\r\nimport { printSchema } from 'graphql/utilities/printSchema';\r\nimport fetch from 'node-fetch';\r\n\r\ninterface Options {\r\n  method?: 'GET' | 'POST' | 'PUT' | 'DELETE';\r\n  headers?: { [key: string]: string };\r\n  json?: boolean;\r\n}\r\n\r\n/**\r\n *\r\n * Fetch remote schema and turn it into string\r\n *\r\n * @param endpoint\r\n * @param options\r\n */\r\nexport async function getRemoteSchema(\r\n  endpoint: string,\r\n  options: Options,\r\n): Promise<{ status: 'ok'; schema: string } | { status: 'err'; message: string }> {\r\n  try {\r\n    const introspectionQuery = getIntrospectionQuery({ inputValueDeprecation: true });\r\n    const { data, errors } = await fetch(endpoint, {\r\n      method: options.method,\r\n      headers: options.headers,\r\n      body: JSON.stringify({ query: introspectionQuery }),\r\n    }).then(res => res.json());\r\n\r\n    if (errors) {\r\n      return { status: 'err', message: JSON.stringify(errors, null, 2) };\r\n    }\r\n\r\n    if (options.json) {\r\n      return {\r\n        status: 'ok',\r\n        schema: JSON.stringify(data, null, 2),\r\n      };\r\n    } else {\r\n      const schema = buildClientSchema(data);\r\n      return {\r\n        status: 'ok',\r\n        schema: printSchema(schema),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    return { status: 'err', message: err.message };\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * Prints schema to file.\r\n *\r\n * @param dist\r\n * @param schema\r\n */\r\nexport function printToFile(\r\n  dist: string,\r\n  schema: string,\r\n): { status: 'ok'; path: string } | { status: 'err'; message: string } {\r\n  try {\r\n    const output = path.resolve(process.cwd(), dist);\r\n\r\n    if (!fs.existsSync(output)) {\r\n      console.error(`${output} does not exists`);\r\n      process.exit(1);\r\n    }\r\n    fs.writeFileSync(output, schema);\r\n\r\n    return { status: 'ok', path: output };\r\n  } catch (err) {\r\n    return { status: 'err', message: err.message };\r\n  }\r\n}\r\n\r\nexport async function main(endpoint): Promise<void> {\r\n  /* Headers */\r\n  const defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n\r\n  /* Fetch schema */\r\n  const schema = await getRemoteSchema(endpoint, {\r\n    method: 'POST',\r\n    headers: defaultHeaders,\r\n    json: false,\r\n  });\r\n\r\n  if (schema.status === 'err') {\r\n    console.error(schema.message);\r\n  } else {\r\n    console.log(schema.schema);\r\n  }\r\n}\r\n\r\nmain(process.argv[2]);\r\n```\r\n\r\nThis script works fine without `inputValueDeprecation: true` passed to `getIntrospectionQuery`, but whenever I try to add this option the script fails with the following message:\r\n```\r\n[\r\n  {\r\n    \"message\": \"Unknown argument \\\"includeDeprecated\\\" on field \\\"__Directive.args\\\".\",\r\n    \"locations\": [\r\n      {\r\n        \"line\": 16,\r\n        \"column\": 16\r\n      }\r\n    ],\r\n    \"extensions\": {\r\n      \"code\": \"GRAPHQL_VALIDATION_FAILED\",\r\n      \"exception\": {\r\n        \"stacktrace\": [\r\n          \"GraphQLError: Unknown argument \\\"includeDeprecated\\\" on field \\\"__Directive.args\\\".\",\r\n          \"    at Object.Argument (/home/user/Workspace/Projects/opencollective/opencollective-api/node_modules/graphql/validation/rules/KnownArgumentNamesRule.js:46:29)\",\r\n          \"    at Object.enter (/home/user/Workspace/Projects/opencollective/opencollective-api/node_modules/graphql/language/visitor.js:323:29)\",\r\n          \"    at Object.enter (/home/user/Workspace/Projects/opencollective/opencollective-api/node_modules/graphql/utilities/TypeInfo.js:370:25)\",\r\n          \"    at visit (/home/user/Workspace/Projects/opencollective/opencollective-api/node_modules/graphql/language/visitor.js:243:26)\",\r\n          \"    at Object.validate (/home/user/Workspace/Projects/opencollective/opencollective-api/node_modules/graphql/validation/validate.js:69:24)\",\r\n          \"    at validate (/home/user/Workspace/Projects/opencollective/opencollective-api/node_modules/apollo-server-core/src/requestPipeline.ts:510:14)\",\r\n          \"    at Object.<anonymous> (/home/user/Workspace/Projects/opencollective/opencollective-api/node_modules/apollo-server-core/src/requestPipeline.ts:296:32)\",\r\n          \"    at Generator.next (<anonymous>)\",\r\n          \"    at fulfilled (/home/user/Workspace/Projects/opencollective/opencollective-api/node_modules/apollo-server-core/dist/requestPipeline.js:5:58)\",\r\n          \"    at processTicksAndRejections (internal/process/task_queues.js:93:5)\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n]\r\n```\r\n\r\n# Context\r\n\r\nFollowup on https://github.com/graphql/graphql-js/issues/2834\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2892",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2892/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2892/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2892/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2892",
      "id": 792397641,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTYwMjg4MjAz",
      "number": 2892,
      "title": "Update Tutorial-ObjectTypes.md",
      "user": {
        "login": "haond10adp",
        "id": 39975444,
        "node_id": "MDQ6VXNlcjM5OTc1NDQ0",
        "avatar_url": "https://avatars.githubusercontent.com/u/39975444?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/haond10adp",
        "html_url": "https://github.com/haond10adp",
        "followers_url": "https://api.github.com/users/haond10adp/followers",
        "following_url": "https://api.github.com/users/haond10adp/following{/other_user}",
        "gists_url": "https://api.github.com/users/haond10adp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/haond10adp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/haond10adp/subscriptions",
        "organizations_url": "https://api.github.com/users/haond10adp/orgs",
        "repos_url": "https://api.github.com/users/haond10adp/repos",
        "events_url": "https://api.github.com/users/haond10adp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/haond10adp/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-01-23T01:07:25Z",
      "updated_at": "2021-01-27T11:10:19Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2892",
        "html_url": "https://github.com/graphql/graphql-js/pull/2892",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2892.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2892.patch"
      },
      "body": "typo",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2888",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2888/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2888/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2888/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2888",
      "id": 790785442,
      "node_id": "MDU6SXNzdWU3OTA3ODU0NDI=",
      "number": 2888,
      "title": "When the parameter is an array and the length is greater than 20, query doesn't work, What should I do ?",
      "user": {
        "login": "heidashuaiheniwawa",
        "id": 32032410,
        "node_id": "MDQ6VXNlcjMyMDMyNDEw",
        "avatar_url": "https://avatars.githubusercontent.com/u/32032410?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/heidashuaiheniwawa",
        "html_url": "https://github.com/heidashuaiheniwawa",
        "followers_url": "https://api.github.com/users/heidashuaiheniwawa/followers",
        "following_url": "https://api.github.com/users/heidashuaiheniwawa/following{/other_user}",
        "gists_url": "https://api.github.com/users/heidashuaiheniwawa/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/heidashuaiheniwawa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/heidashuaiheniwawa/subscriptions",
        "organizations_url": "https://api.github.com/users/heidashuaiheniwawa/orgs",
        "repos_url": "https://api.github.com/users/heidashuaiheniwawa/repos",
        "events_url": "https://api.github.com/users/heidashuaiheniwawa/events{/privacy}",
        "received_events_url": "https://api.github.com/users/heidashuaiheniwawa/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-01-21T07:42:13Z",
      "updated_at": "2021-01-21T07:43:39Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "PictureÔºö\r\n![Graphql Error](https://user-images.githubusercontent.com/32032410/105318829-f7ac0a00-5bfe-11eb-9a16-41bc7f5d370b.png)\r\n![Graphql Success](https://user-images.githubusercontent.com/32032410/105318837-f975cd80-5bfe-11eb-85d0-95ff5b8ad9e4.png)\r\n\r\nQuery Code\r\nExampleÔºàErrorÔºâÔºö\r\nquery {\r\n  orders (\r\n    start: 0, limit: 100,\r\n    where: {\r\n      zhilingdan: [\"20P100\", \"20P076\", \"20R071\", \"20P102\", \"20R069\", \"20R070\", \"20Q088-1\", \"20R073\", \"ces-10003\", \"20R074\", \"20Q088\", \"20R068\", \"20R067\", \"ces-10005\", \"20R108\", \"20R075\", \"20P056\", \"ces-10001\", \"ces-042906 \", \"20K043\", \"20R065\", \"ces2020\"],\r\n    }\r\n  ) {\r\n    id,\r\n  }\r\n}\r\n\r\nExample ÔºàSuccessÔºâÔºö\r\nquery {\r\n  orders (\r\n    start: 0, limit: 100,\r\n    where: {\r\n      zhilingdan: [\"20P100\", \"20P076\", \"20R071\", \"20P102\", \"20R069\", \"20R070\", \"20Q088-1\", \"20R073\", \"ces-10003\", \"20R074\", \"20Q088\", \"20R068\", \"20R067\", \"ces-10005\", \"20R108\", \"20R075\", \"20P056\", \"ces-10001\", \"ces-042906 \", \"20K043\", \"20R065\"],\r\n    }\r\n  ) {\r\n    id,\r\n  }\r\n}",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2887",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2887/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2887/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2887/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2887",
      "id": 789819360,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTU4MTA2OTY5",
      "number": 2887,
      "title": "fix: change OperationTypeNode to enum",
      "user": {
        "login": "lekoaf",
        "id": 7765599,
        "node_id": "MDQ6VXNlcjc3NjU1OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7765599?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lekoaf",
        "html_url": "https://github.com/lekoaf",
        "followers_url": "https://api.github.com/users/lekoaf/followers",
        "following_url": "https://api.github.com/users/lekoaf/following{/other_user}",
        "gists_url": "https://api.github.com/users/lekoaf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lekoaf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lekoaf/subscriptions",
        "organizations_url": "https://api.github.com/users/lekoaf/orgs",
        "repos_url": "https://api.github.com/users/lekoaf/repos",
        "events_url": "https://api.github.com/users/lekoaf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lekoaf/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1197190869,
          "node_id": "MDU6TGFiZWwxMTk3MTkwODY5",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20polish%20%F0%9F%92%85",
          "name": "PR: polish üíÖ",
          "color": "0052cc",
          "default": false,
          "description": "PR doesn't change public API or any observed behaviour"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-01-20T09:50:44Z",
      "updated_at": "2021-01-27T11:10:19Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2887",
        "html_url": "https://github.com/graphql/graphql-js/pull/2887",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2887.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2887.patch"
      },
      "body": "Changes OperationTypeNode to enum instead of a union type. This allows developers to use the type as `OperationTypeNode.QUERY` instead of risking to msispell the string 'query'.\r\n\r\nExample:\r\n\r\nInstead of having to write\r\n\r\n`operation === 'query'`\r\n\r\nyou can instead write\r\n\r\n`operation === OperationTypeNode.QUERY`\r\n\r\nThis should not be a breaking change, since the string version should still work.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2873",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2873/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2873/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2873/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2873",
      "id": 776580659,
      "node_id": "MDU6SXNzdWU3NzY1ODA2NTk=",
      "number": 2873,
      "title": "Allow `validateSchema` to accept validation rules like `validate` does.",
      "user": {
        "login": "sleepycat",
        "id": 109692,
        "node_id": "MDQ6VXNlcjEwOTY5Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/109692?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sleepycat",
        "html_url": "https://github.com/sleepycat",
        "followers_url": "https://api.github.com/users/sleepycat/followers",
        "following_url": "https://api.github.com/users/sleepycat/following{/other_user}",
        "gists_url": "https://api.github.com/users/sleepycat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sleepycat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sleepycat/subscriptions",
        "organizations_url": "https://api.github.com/users/sleepycat/orgs",
        "repos_url": "https://api.github.com/users/sleepycat/repos",
        "events_url": "https://api.github.com/users/sleepycat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sleepycat/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-12-30T18:24:16Z",
      "updated_at": "2020-12-30T18:24:16Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "By default, the validate function uses an array of `specifiedRules` exported by `graphql/validation`.\r\n\r\n```javascript\r\n> var { validate, parse } = require('graphql')\r\n> var { specifiedRules } = require('graphql/validation')\r\n> specifiedRules\r\n[ [Function: ExecutableDefinitions],\r\n  [Function: UniqueOperationNames],\r\n  [Function: LoneAnonymousOperation],\r\n  [Function: SingleFieldSubscriptions],\r\n  [Function: KnownTypeNames],\r\n  [Function: FragmentsOnCompositeTypes],\r\n  [Function: VariablesAreInputTypes],\r\n  [Function: ScalarLeafs],\r\n  [Function: FieldsOnCorrectType],\r\n  [Function: UniqueFragmentNames],\r\n  [Function: KnownFragmentNames],\r\n  [Function: NoUnusedFragments],\r\n  [Function: PossibleFragmentSpreads],\r\n  [Function: NoFragmentCycles],\r\n  [Function: UniqueVariableNames],\r\n  [Function: NoUndefinedVariables],\r\n  [Function: NoUnusedVariables],\r\n  [Function: KnownDirectives],\r\n  [Function: UniqueDirectivesPerLocation],\r\n  [Function: KnownArgumentNames],\r\n  [Function: UniqueArgumentNames],\r\n  [Function: ValuesOfCorrectType],\r\n  [Function: ProvidedRequiredArguments],\r\n  [Function: VariablesInAllowedPosition],\r\n  [Function: OverlappingFieldsCanBeMerged],\r\n  [Function: UniqueInputFieldNames] ]\r\n \r\nvalidate(schema, parse(`{ kittens }`), specifiedRules)\r\n```\r\nThis allows people to easily extend/replace the default set of rules. `validateSchema` looks like it works in a similar way (internally it runs a series of functions that each accept a context), but it accepts a schema and nothing else.\r\n\r\n```js\r\n> var { buildSchema, validateSchema } = require('graphql')\r\n> s = buildSchema(`type Query { hello: String }`)\r\n> validateSchema(s)\r\n[]\r\n```\r\nWould it make sense for `validateSchema` to accept an optional array of rules similar to `validate`? ",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2870",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2870/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2870/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2870/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2870",
      "id": 766842650,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTM5NzQyODA4",
      "number": 2870,
      "title": "Feature/custom resolve field",
      "user": {
        "login": "emaciel10",
        "id": 11020939,
        "node_id": "MDQ6VXNlcjExMDIwOTM5",
        "avatar_url": "https://avatars.githubusercontent.com/u/11020939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/emaciel10",
        "html_url": "https://github.com/emaciel10",
        "followers_url": "https://api.github.com/users/emaciel10/followers",
        "following_url": "https://api.github.com/users/emaciel10/following{/other_user}",
        "gists_url": "https://api.github.com/users/emaciel10/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/emaciel10/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/emaciel10/subscriptions",
        "organizations_url": "https://api.github.com/users/emaciel10/orgs",
        "repos_url": "https://api.github.com/users/emaciel10/repos",
        "events_url": "https://api.github.com/users/emaciel10/events{/privacy}",
        "received_events_url": "https://api.github.com/users/emaciel10/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-12-14T19:18:47Z",
      "updated_at": "2021-01-27T11:10:19Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2870",
        "html_url": "https://github.com/graphql/graphql-js/pull/2870",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2870.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2870.patch"
      },
      "body": "We are looking for the ability to cache certain execute operations, specifically the `resolveField` calls for a large and complex resolvers that can run very frequently since they currently trigger on GraphQL subscriptions.\r\nWe have built out that caching logic in our own codebase but currently have no place to make use of this cache since the `resolveField` function is not currently exported.\r\n\r\nThis is a first pass attempt at adding a bit more flexibility to graphql-js execution allowing us to cache the specific `resolveField` results that are important to our server while still falling back on the standard `resolveField` function for any paths that we know do not need caching.\r\n\r\nIt is very possible that this is already achievable with graphql-js but after looking through the logic in `execute.js` I did not see any way of achieving this without providing some kind of optional custom resolve field function.\r\n\r\nThe main goal here is to help us address some performance concerns that have been previously raised here #723 by adding in some custom application specific caching where it seemed the most expensive operations were being repeatedly performed.\r\n\r\nIf there is another way of achieving this custom caching behavior I would really love to see if we could make it work with our current use case!\r\n\r\nHere is a code snippet from our custom-resolve-field.ts file that illustrates a basic example of our caching logic:\r\n```\r\nimport { resolveField } from 'graphql/execution/execute';\r\nimport TTLCacheMap from '../utils/ttl-cache-map';\r\n\r\nconst schemaWeakMap = new WeakMap<any, any>();\r\n\r\nexport const customResolveField: typeof resolveField = (\r\n  exeContext,\r\n  parentType,\r\n  source,\r\n  fieldNodes,\r\n  path\r\n) => {\r\n  if (path.key === 'doc' && source.doc) {\r\n    let cachedDocResolves = schemaWeakMap.get(exeContext.schema);\r\n    if (!cachedDocResolves) {\r\n      cachedDocResolves = new TTLCacheMap(0);\r\n      schemaWeakMap.set(exeContext.schema, cachedDocResolves);\r\n    }\r\n    const cachedRes = cachedDocResolves.get(source.doc._id);\r\n    if (cachedRes) {\r\n      return cachedRes;\r\n    }\r\n\r\n    const result = resolveField(exeContext, parentType, source, fieldNodes, path);\r\n    cachedDocResolves.set(source.doc._id, result);\r\n    return result;\r\n  }\r\n\r\n  return resolveField(exeContext, parentType, source, fieldNodes, path);\r\n};\r\n```",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2864",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2864/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2864/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2864/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2864",
      "id": 755644343,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTMxMzE3OTY3",
      "number": 2864,
      "title": "Fix JSON Serialization for source",
      "user": {
        "login": "lifeiscontent",
        "id": 180963,
        "node_id": "MDQ6VXNlcjE4MDk2Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/180963?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lifeiscontent",
        "html_url": "https://github.com/lifeiscontent",
        "followers_url": "https://api.github.com/users/lifeiscontent/followers",
        "following_url": "https://api.github.com/users/lifeiscontent/following{/other_user}",
        "gists_url": "https://api.github.com/users/lifeiscontent/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lifeiscontent/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lifeiscontent/subscriptions",
        "organizations_url": "https://api.github.com/users/lifeiscontent/orgs",
        "repos_url": "https://api.github.com/users/lifeiscontent/repos",
        "events_url": "https://api.github.com/users/lifeiscontent/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lifeiscontent/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/graphql/graphql-js/milestones/3",
        "html_url": "https://github.com/graphql/graphql-js/milestone/3",
        "labels_url": "https://api.github.com/repos/graphql/graphql-js/milestones/3/labels",
        "id": 5767456,
        "node_id": "MDk6TWlsZXN0b25lNTc2NzQ1Ng==",
        "number": 3,
        "title": "post-16.0.0",
        "description": "",
        "creator": {
          "login": "IvanGoncharov",
          "id": 8336157,
          "node_id": "MDQ6VXNlcjgzMzYxNTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/IvanGoncharov",
          "html_url": "https://github.com/IvanGoncharov",
          "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
          "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
          "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
          "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
          "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
          "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 10,
        "closed_issues": 0,
        "state": "open",
        "created_at": "2020-08-13T06:15:26Z",
        "updated_at": "2021-03-31T17:52:15Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 5,
      "created_at": "2020-12-02T22:05:08Z",
      "updated_at": "2021-01-29T22:06:53Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2864",
        "html_url": "https://github.com/graphql/graphql-js/pull/2864",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2864.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2864.patch"
      },
      "body": "The Type definitions say that source should be exposed, but when its transformed into JSON its not there.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2863",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2863/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2863/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2863/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2863",
      "id": 752017030,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTI4NDIyODM3",
      "number": 2863,
      "title": "[workflow] Fixing double run when creating a PR",
      "user": {
        "login": "gagoar",
        "id": 226559,
        "node_id": "MDQ6VXNlcjIyNjU1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/226559?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gagoar",
        "html_url": "https://github.com/gagoar",
        "followers_url": "https://api.github.com/users/gagoar/followers",
        "following_url": "https://api.github.com/users/gagoar/following{/other_user}",
        "gists_url": "https://api.github.com/users/gagoar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gagoar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gagoar/subscriptions",
        "organizations_url": "https://api.github.com/users/gagoar/orgs",
        "repos_url": "https://api.github.com/users/gagoar/repos",
        "events_url": "https://api.github.com/users/gagoar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gagoar/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2020-11-27T06:33:39Z",
      "updated_at": "2021-01-27T11:10:18Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2863",
        "html_url": "https://github.com/graphql/graphql-js/pull/2863",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2863.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2863.patch"
      },
      "body": "Currently, the workflow runs twice every PR. This is caused by `push` and on `pull_request` events.\r\nSadly [the documentation says that it will be an or](https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#example-using-a-list-of-events). \r\n\r\nBut in practice, this triggers twice. \r\n\r\nAlternatively, we could just leave push\r\n```yaml\r\non:  push\r\n```\r\n\r\nthis is visible when inspecting some of the PR's \r\n\r\n![image](https://user-images.githubusercontent.com/226559/100417471-daf7b980-3035-11eb-9ba0-d50c28b03d81.png)\r\n\r\nevery step produces 2 runs (one for push the other for pull_request) \r\n[example for pull request](https://github.com/graphql/graphql-js/pull/2861/checks?check_run_id=1454997986) \r\n[example for push](https://github.com/graphql/graphql-js/pull/2861/checks?check_run_id=1454997986)\r\n\r\nthis is also visible in #2757 \r\n![image](https://user-images.githubusercontent.com/226559/100417639-3aee6000-3036-11eb-8b7f-f477958d63b5.png)",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2860",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2860/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2860/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2860/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2860",
      "id": 750980094,
      "node_id": "MDU6SXNzdWU3NTA5ODAwOTQ=",
      "number": 2860,
      "title": "16.0.0 Release plan",
      "user": {
        "login": "IvanGoncharov",
        "id": 8336157,
        "node_id": "MDQ6VXNlcjgzMzYxNTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IvanGoncharov",
        "html_url": "https://github.com/IvanGoncharov",
        "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
        "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
        "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
        "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
        "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
        "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 10,
      "created_at": "2020-11-25T16:57:11Z",
      "updated_at": "2021-06-29T20:33:42Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "# Goals\r\n\r\n1. Convert source code to idiomatic TypeScript\r\n1. Remove Flow-specific workarounds and pre-ES6 JS artifacts\r\n1. Support Deno\r\n1. Support ESM\r\n1. Switch `master` to `main`.\r\n\r\n# Planned breaking changes\r\n\r\n1. Legacy SDL syntax (deprecated 2year ago) and other deprecated APIs and flags \r\n1. Drop native IE support by removing built-in polyfills and switching the output to ES6. It would be still possible to support IE with `core-js` + `babel`.\r\n1. Drop TS before 3.7 since we need to support recursive types.\r\n1. Maybe we will have some unexpected breaking changes to TS types due to migration\r\n\r\n# Post 16.0.0 goals\r\n\r\n1. Convert test suite to Jest\r\n2. Experiment with TS types to provide better typings for resolvers\r\n\r\nP.S. We need to target `04/31/2021` for `17.0.0` release at that point we need to do a breaking release anyway to drop Node v10.\r\n\r\n# Steps\r\n\r\n- [x] 1. Branch out `15.x.x` release line and release `15.5.0` (Jan 8th)\r\n- [x] 2. Switch `master` to `main` and update scripts & CI \r\n- [x] 3. Move commits from https://github.com/graphql/graphql-js/tree/16.x.x to `main`\r\n- [x] 4. Remove last [few polyfills](https://github.com/graphql/graphql-js/tree/f2f0ddecff79693a0a52d7e62772840a8aa1c50a/src/polyfills)\r\n- [x] 4. Release `16.0.0-alpha.1` with all expected breaking changes but still from Flow sources (~~Jan 12th~~)\r\n- [x] 5. Rebase #2828 and merge it (no squash, keep separate commits) (~~Jan 15th~~)\r\n- [x] 6. Fix tests, CI, and release scripts but disable `tsc` and TS-specific ESLint checks (~~Jan 18th~~)\r\n- [x] 7. Mark `tsc` errors with `@ts-ignore` and fix them in separate PRs by volunteers \r\n- [x] 8. Enable TS-specific ESLint rules in separate PRs by volunteers\r\n- [x] 9. Release new `16.0.0-alpha.3` and gather feedback (finish until Feb WG)\r\n- [ ] 10. Work on ESM and Deno support in parallel\r\n- [ ] 11. Release `16.0.0-rc.1` and gather feedback\r\n- [ ] 12. Generate basic docs with `tsdoc`\r\n- [ ] 13. Release `16.0.0` üéâ\r\n- [ ] 14. Wait couple weeks and gather feedback.\r\n- [ ] 15. Switch main to the `17.0.0-alpha.0` branch and have a setup that will automatically release package after every merge.\r\n- [ ] 16. Start accepting breaking/experimental PRs for `17.0.0`.\r\n\r\n# How I can help?\r\n\r\n- Review #2828 with basic TS conversion. It's split into multiple commits that are easy to review: https://github.com/graphql/graphql-js/pull/2828/commits\r\n- Wait for #2828 to be merged and help with latter steps.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2857",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2857/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2857/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2857/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2857",
      "id": 749805291,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTI2NTYxNzY4",
      "number": 2857,
      "title": "Update README.md",
      "user": {
        "login": "Deepak-du",
        "id": 69639135,
        "node_id": "MDQ6VXNlcjY5NjM5MTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/69639135?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Deepak-du",
        "html_url": "https://github.com/Deepak-du",
        "followers_url": "https://api.github.com/users/Deepak-du/followers",
        "following_url": "https://api.github.com/users/Deepak-du/following{/other_user}",
        "gists_url": "https://api.github.com/users/Deepak-du/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Deepak-du/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Deepak-du/subscriptions",
        "organizations_url": "https://api.github.com/users/Deepak-du/orgs",
        "repos_url": "https://api.github.com/users/Deepak-du/repos",
        "events_url": "https://api.github.com/users/Deepak-du/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Deepak-du/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-11-24T15:22:22Z",
      "updated_at": "2021-01-27T11:10:18Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2857",
        "html_url": "https://github.com/graphql/graphql-js/pull/2857",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2857.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2857.patch"
      },
      "body": "",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2848",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2848/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2848/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2848/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2848",
      "id": 744102839,
      "node_id": "MDU6SXNzdWU3NDQxMDI4Mzk=",
      "number": 2848,
      "title": "Placeholder issue for feedback on `@defer` & `@stream` proposal",
      "user": {
        "login": "robrichard",
        "id": 3814096,
        "node_id": "MDQ6VXNlcjM4MTQwOTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3814096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robrichard",
        "html_url": "https://github.com/robrichard",
        "followers_url": "https://api.github.com/users/robrichard/followers",
        "following_url": "https://api.github.com/users/robrichard/following{/other_user}",
        "gists_url": "https://api.github.com/users/robrichard/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/robrichard/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robrichard/subscriptions",
        "organizations_url": "https://api.github.com/users/robrichard/orgs",
        "repos_url": "https://api.github.com/users/robrichard/repos",
        "events_url": "https://api.github.com/users/robrichard/events{/privacy}",
        "received_events_url": "https://api.github.com/users/robrichard/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "robrichard",
        "id": 3814096,
        "node_id": "MDQ6VXNlcjM4MTQwOTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3814096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robrichard",
        "html_url": "https://github.com/robrichard",
        "followers_url": "https://api.github.com/users/robrichard/followers",
        "following_url": "https://api.github.com/users/robrichard/following{/other_user}",
        "gists_url": "https://api.github.com/users/robrichard/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/robrichard/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robrichard/subscriptions",
        "organizations_url": "https://api.github.com/users/robrichard/orgs",
        "repos_url": "https://api.github.com/users/robrichard/repos",
        "events_url": "https://api.github.com/users/robrichard/events{/privacy}",
        "received_events_url": "https://api.github.com/users/robrichard/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "robrichard",
          "id": 3814096,
          "node_id": "MDQ6VXNlcjM4MTQwOTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3814096?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/robrichard",
          "html_url": "https://github.com/robrichard",
          "followers_url": "https://api.github.com/users/robrichard/followers",
          "following_url": "https://api.github.com/users/robrichard/following{/other_user}",
          "gists_url": "https://api.github.com/users/robrichard/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/robrichard/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/robrichard/subscriptions",
          "organizations_url": "https://api.github.com/users/robrichard/orgs",
          "repos_url": "https://api.github.com/users/robrichard/repos",
          "events_url": "https://api.github.com/users/robrichard/events{/privacy}",
          "received_events_url": "https://api.github.com/users/robrichard/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 39,
      "created_at": "2020-11-16T19:32:21Z",
      "updated_at": "2021-06-10T11:30:05Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "For each release of GraphQL.js, we are now publishing an accompanying release containing an experimental implementation of the `@defer` and `@stream` directives. We are hoping to get community feedback on these releases before the proposal is accepted into the GraphQL specification. \r\n\r\nYou can use this experimental release of GraphQL.js by adding the following to your project's package.json file.\r\n\r\n```\r\n\"graphql\": \"experimental-stream-defer\"\r\n```\r\n\r\nA similar release of `express-graphql` will be coming soon.\r\n\r\nI am creating this issue as a placeholder for anyone who has tried out these experimental packages to leave feedback. Please let us know if everything is working as expected or if you run into any issues. Any suggestions for improvements are also welcome.\r\n\r\nReferences:\r\n* [Demo repo](https://github.com/n1ru4l/graphql-bleeding-edge-playground)\r\n* [Conference talk about defer/stream](https://www.youtube.com/watch?v=icv_Pq06aOY)\r\n* [defer/stream RFC](https://github.com/graphql/graphql-spec/blob/master/rfcs/DeferStream.md)\r\n* [Spec edits](https://github.com/graphql/graphql-spec/pull/742)\r\n* [graphql-js branch](https://github.com/graphql/graphql-js/tree/defer-stream)\r\n* [express-graphql PR](https://github.com/graphql/express-graphql/pull/583)\r\n* [graphql-over-http RFC](https://github.com/graphql/graphql-over-http/blob/master/rfcs/IncrementalDelivery.md)\r\n* [fetch-multipart-graphql (client library)](https://github.com/relay-tools/fetch-multipart-graphql)\r\n* [meros (client library)](https://github.com/maraisr/meros)\r\n\r\n\r\n\r\n## Feedback received so far\r\n\r\n### Call `return` on iterable when connection closes\r\n* Raised by @danielrearden\r\n* `graphql-js`\r\n    * Fixed: https://github.com/graphql/graphql-js/pull/2843\r\n    * Released: TBD\r\n* `express-graphql`\r\n    * Fixed: https://github.com/graphql/express-graphql/pull/583/commits/ce8429e5c15172b394e65d5a27491611b5fb354e\r\n    * Released: `express-graphql@0.12.0-experimental-stream-defer.1`\r\n\r\n### `content-length` in payload should not be required, parsers should use boundary instead\r\n* Raised by @maraisr\r\n* `graphql-over-http` spec\r\n    * Fixed: https://github.com/graphql/graphql-over-http/pull/152\r\n* `fetch-multipart-graphql`\r\n    * Fix: WIP\r\n* `express-graphql`\r\n    * Fix: https://github.com/robrichard/express-graphql/pull/1",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2842",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2842/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2842/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2842/events",
      "html_url": "https://github.com/graphql/graphql-js/issues/2842",
      "id": 739283959,
      "node_id": "MDU6SXNzdWU3MzkyODM5NTk=",
      "number": 2842,
      "title": "Standardize the naming of the first argument to resolver functions (obj vs parent)",
      "user": {
        "login": "magicmark",
        "id": 1590756,
        "node_id": "MDQ6VXNlcjE1OTA3NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1590756?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/magicmark",
        "html_url": "https://github.com/magicmark",
        "followers_url": "https://api.github.com/users/magicmark/followers",
        "following_url": "https://api.github.com/users/magicmark/following{/other_user}",
        "gists_url": "https://api.github.com/users/magicmark/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/magicmark/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/magicmark/subscriptions",
        "organizations_url": "https://api.github.com/users/magicmark/orgs",
        "repos_url": "https://api.github.com/users/magicmark/repos",
        "events_url": "https://api.github.com/users/magicmark/events{/privacy}",
        "received_events_url": "https://api.github.com/users/magicmark/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2020-11-09T19:00:07Z",
      "updated_at": "2020-11-11T15:48:48Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "According to, [graphql.org/learn](https://graphql.org/learn/execution/#root-fields-resolvers), _\"A resolver function receives four arguments\"_. It lists the first one as:\r\n\r\n> `obj` The previous object, which for a field on the root Query type is often not used.\r\n\r\nHowever, [Apollo's](https://www.apollographql.com/docs/apollo-server/data/resolvers/#handling-arguments) [docs](https://www.apollographql.com/docs/apollo-server/data/resolvers/#resolver-arguments) calls this same argument 'parent':\r\n\r\n> `parent` The return value of the resolver for this field's parent (i.e., the previous resolver in the resolver chain).\r\n\r\n`obj` vs `parent` is a source of confusion throughout the ecosystem. We see this elsewhere too:\r\n\r\n- Even within the same project (the popular graphql-tools), both [`obj`](https://www.graphql-tools.com/docs/resolvers#resolver-function-signature) and [`parent`](https://www.graphql-tools.com/docs/generate-schema#extending-types) are used.\r\n- Outside of JavaScript, we see different projects using different terminology. [Scala uses `obj`](https://graphql-ruby.org/fields/resolvers.html#extensions), [Python uses `parent`](https://docs.graphene-python.org/en/latest/types/objecttypes/#resolver-parameters).\r\n\r\n## \"We already have a standard - obj! Ask the non-conformists to switch!\"\r\n\r\nI could see this argument, and I'm happy to close this issue out if that's how the mainters feel.\r\n\r\n_However!_ ...allow me to put forward a case for `parent` and bikeshed for a moment:\r\n\r\n1. **I believe the name \"parent\" converys more meaningful information than \"obj\".** It signals some sort of relationship to something above us. This more strongly hints that obj/parent === the return value of the previous (or \"parent\") resolver.\r\n2. **\"object\" could be implementation detaily**, or at best, is ambiguous to if this represents the language-specific construct (e.g. javascript objects) or a conceptual \"object\" (not all languages have dicts/objects!)\r\n\r\nI'm not sure what the timelines are or who first decided to use \"parent\", but I'm guessing this happened for a reason, and this isn't the first time this issue has been discussed. If anyone can find any written deliberation about this, I'd be interested to read up!\r\n\r\nSpeaking first hand, teaching resolver arguments concepts is hard. This in particular has come up as a source of confusion (hence me making this issue) internally at my workplace. Any gradual win here will be leveraged across many many folks learning this anew. \r\n\r\nMembers of the jury, in conclusion, I believe it would be an admirable goal to standardise obj vs parent. I personally vote for parent, but would be happy with obj. Either way, I would like to start a mission to try and standardize this across tooling/languages.\r\n\r\n## What does the spec say?\r\n\r\nThe official GraphQL spec avoids giving language specific implementation details, so it doesn't (can't?) standardize a name for this. However it does [hint at \"object\" in an example given](https://spec.graphql.org/draft/#sec-Value-Resolution).\r\n\r\nPerhaps a non-normative note somewhere in the spec would be a good place provide a hint and normalize the naming.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/graphql/graphql-js/issues/2839",
      "repository_url": "https://api.github.com/repos/graphql/graphql-js",
      "labels_url": "https://api.github.com/repos/graphql/graphql-js/issues/2839/labels{/name}",
      "comments_url": "https://api.github.com/repos/graphql/graphql-js/issues/2839/comments",
      "events_url": "https://api.github.com/repos/graphql/graphql-js/issues/2839/events",
      "html_url": "https://github.com/graphql/graphql-js/pull/2839",
      "id": 736964495,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTE2MDg3NDE1",
      "number": 2839,
      "title": "Add support for defer and stream directives (Feedback is welcome)",
      "user": {
        "login": "IvanGoncharov",
        "id": 8336157,
        "node_id": "MDQ6VXNlcjgzMzYxNTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8336157?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IvanGoncharov",
        "html_url": "https://github.com/IvanGoncharov",
        "followers_url": "https://api.github.com/users/IvanGoncharov/followers",
        "following_url": "https://api.github.com/users/IvanGoncharov/following{/other_user}",
        "gists_url": "https://api.github.com/users/IvanGoncharov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/IvanGoncharov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/IvanGoncharov/subscriptions",
        "organizations_url": "https://api.github.com/users/IvanGoncharov/orgs",
        "repos_url": "https://api.github.com/users/IvanGoncharov/repos",
        "events_url": "https://api.github.com/users/IvanGoncharov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/IvanGoncharov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1197731240,
          "node_id": "MDU6TGFiZWwxMTk3NzMxMjQw",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/PR:%20feature%20%F0%9F%9A%80",
          "name": "PR: feature üöÄ",
          "color": "c5def5",
          "default": false,
          "description": "requires increase of \"minor\" version number"
        },
        {
          "id": 936579478,
          "node_id": "MDU6TGFiZWw5MzY1Nzk0Nzg=",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/spec%20RFC",
          "name": "spec RFC",
          "color": "d4c5f9",
          "default": false,
          "description": "Implementation of a proposed change to the GraphQL specification"
        },
        {
          "id": 2872943160,
          "node_id": "MDU6TGFiZWwyODcyOTQzMTYw",
          "url": "https://api.github.com/repos/graphql/graphql-js/labels/stream/defer",
          "name": "stream/defer",
          "color": "3B7C5F",
          "default": false,
          "description": "Issues/PRs related to experimental steam/defer support"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 14,
      "created_at": "2020-11-05T14:10:17Z",
      "updated_at": "2021-06-04T15:11:20Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/graphql/graphql-js/pulls/2839",
        "html_url": "https://github.com/graphql/graphql-js/pull/2839",
        "diff_url": "https://github.com/graphql/graphql-js/pull/2839.diff",
        "patch_url": "https://github.com/graphql/graphql-js/pull/2839.patch"
      },
      "body": "> The implementation in this pull request is a reference implementation of the specification proposal outlined in graphql/graphql-spec#742. It is no longer compatible with with the @defer and @stream implementation in Relay.\r\n\r\n> This branch is published to npm as version graphql@15.4.0-experimental-stream-defer.1 under the tag graphql@experimental-stream-defer. We encourage anyone interested in this feature to try out this version and report any feedback, issues, or potential improvements to the API. This feedback will help the working group gain confidence to move forward with standardization.\r\n\r\nDeveloped and maintained by @lilianammmatos @robrichard\r\n\r\nDepends on #2757 ",
      "performed_via_github_app": null
    }
  ]
}
